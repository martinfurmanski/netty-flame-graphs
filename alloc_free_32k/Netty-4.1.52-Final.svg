<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>small_malloc_should_clear (1 samples, 0.04%)</title><rect x="1179.9" y="789" width="0.5" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="1182.86" y="799.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (175 samples, 7.52%)</title><rect x="122.5" y="757" width="88.7" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="125.53" y="767.5" >io/netty/b..</text>
</g>
<g >
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="645" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="20.60" y="655.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.remove (4 samples, 0.17%)</title><rect x="1064.8" y="757" width="2.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1067.80" y="767.5" ></text>
</g>
<g >
<title>G1Predictions::stddev_estimate(TruncatedSeq const*) const (1 samples, 0.04%)</title><rect x="1132.7" y="853" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1135.72" y="863.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1105.4" y="453" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1108.35" y="463.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.set (1 samples, 0.04%)</title><rect x="1071.9" y="1013" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1074.90" y="1023.5" ></text>
</g>
<g >
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.04%)</title><rect x="41.9" y="613" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="44.93" y="623.5" ></text>
</g>
<g >
<title>rcmd_af.canonnamebuf (1 samples, 0.04%)</title><rect x="21.7" y="37" width="0.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="24.66" y="47.5" ></text>
</g>
<g >
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.04%)</title><rect x="1167.2" y="629" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1170.19" y="639.5" ></text>
</g>
<g >
<title>sun/management/Util.newObjectName (12 samples, 0.52%)</title><rect x="1102.3" y="661" width="6.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1105.31" y="671.5" ></text>
</g>
<g >
<title>MethodMatcher::matches(methodHandle const&amp;) const (1 samples, 0.04%)</title><rect x="1161.6" y="565" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1164.62" y="575.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1098.3" y="789" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1101.26" y="799.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocateNormal (749 samples, 32.17%)</title><rect x="211.2" y="741" width="379.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="214.23" y="751.5" >io/netty/buffer/PoolArena.allocateNormal</text>
</g>
<g >
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.04%)</title><rect x="85.5" y="581" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="88.52" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (162 samples, 6.96%)</title><rect x="37.4" y="789" width="82.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="40.37" y="799.5" >io/netty/..</text>
</g>
<g >
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.09%)</title><rect x="67.3" y="517" width="1.0" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="70.28" y="527.5" ></text>
</g>
<g >
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.04%)</title><rect x="21.7" y="133" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="24.66" y="143.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1169.2" y="757" width="0.5" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1172.22" y="767.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.04%)</title><rect x="1109.4" y="805" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1112.41" y="815.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.flush (3 samples, 0.13%)</title><rect x="22.2" y="501" width="1.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="25.16" y="511.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper._writeValueAndClose (2 samples, 0.09%)</title><rect x="1127.7" y="853" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1130.65" y="863.5" ></text>
</g>
<g >
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1167.2" y="709" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1170.19" y="719.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.73%)</title><rect x="68.3" y="565" width="8.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="71.29" y="575.5" ></text>
</g>
<g >
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.04%)</title><rect x="1170.2" y="789" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1173.23" y="799.5" ></text>
</g>
<g >
<title>ConstantPool::impl_name_and_type_ref_index_at(int, bool) (1 samples, 0.04%)</title><rect x="1142.4" y="677" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1145.35" y="687.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.sameRelativePath (1 samples, 0.04%)</title><rect x="1084.6" y="565" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1087.57" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (323 samples, 13.87%)</title><rect x="301.5" y="677" width="163.7" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="304.45" y="687.5" >io/netty/buffer/PoolC..</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1116.5" y="997" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1119.50" y="1007.5" ></text>
</g>
<g >
<title>ciMethodData::load_data() (1 samples, 0.04%)</title><rect x="1167.2" y="693" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1170.19" y="703.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils$$Lambda$1175/1338548136.perform (1 samples, 0.04%)</title><rect x="1086.1" y="597" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1089.09" y="607.5" ></text>
</g>
<g >
<title>ciEnv::current() (1 samples, 0.04%)</title><rect x="1162.1" y="533" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1165.12" y="543.5" ></text>
</g>
<g >
<title>__psynch_cvwait (16 samples, 0.69%)</title><rect x="1076.0" y="805" width="8.1" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1078.95" y="815.5" ></text>
</g>
<g >
<title>java/lang/Long.&lt;init&gt; (6 samples, 0.26%)</title><rect x="401.3" y="645" width="3.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="404.31" y="655.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="23.7" y="437" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="26.69" y="447.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1104.8" y="581" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1107.85" y="591.5" ></text>
</g>
<g >
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.04%)</title><rect x="1106.4" y="517" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1109.37" y="527.5" ></text>
</g>
<g >
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1168.2" y="741" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1171.20" y="751.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.enqueueTask (1 samples, 0.04%)</title><rect x="1087.1" y="917" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1090.10" y="927.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (21 samples, 0.90%)</title><rect x="1073.9" y="869" width="10.7" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1076.93" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxCompute (36 samples, 1.55%)</title><rect x="787.5" y="661" width="18.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="790.54" y="671.5" ></text>
</g>
<g >
<title>java_lang_String::as_unicode_string(oopDesc*, int&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1106.9" y="517" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1109.87" y="527.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="853" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1114.94" y="863.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (17 samples, 0.73%)</title><rect x="1181.4" y="933" width="8.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1184.38" y="943.5" ></text>
</g>
<g >
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="94.6" y="597" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="97.65" y="607.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="23.7" y="405" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="26.69" y="415.5" ></text>
</g>
<g >
<title>os::is_MP() (1 samples, 0.04%)</title><rect x="40.4" y="597" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="43.41" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.toRunHandle (6 samples, 0.26%)</title><rect x="813.9" y="693" width="3.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="816.90" y="703.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink (2 samples, 0.09%)</title><rect x="18.1" y="613" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="21.11" y="623.5" ></text>
</g>
<g >
<title>prepAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="821" width="0.6" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1115.45" y="831.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stop (10 samples, 0.43%)</title><rect x="19.6" y="789" width="5.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="22.63" y="799.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.6" y="805" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1160.56" y="815.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="61.7" y="581" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="64.70" y="591.5" ></text>
</g>
<g >
<title>Klass::java_mirror() const (4 samples, 0.17%)</title><rect x="86.0" y="581" width="2.1" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="89.03" y="591.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.13%)</title><rect x="1125.1" y="869" width="1.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1128.12" y="879.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.size (2 samples, 0.09%)</title><rect x="1123.6" y="997" width="1.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1126.60" y="1007.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageSafely (1 samples, 0.04%)</title><rect x="1111.4" y="853" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1114.43" y="863.5" ></text>
</g>
<g >
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.04%)</title><rect x="1179.9" y="853" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1182.86" y="863.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (3 samples, 0.13%)</title><rect x="1134.2" y="917" width="1.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1137.24" y="927.5" ></text>
</g>
<g >
<title>java/lang/Throwable.&lt;init&gt; (141 samples, 6.06%)</title><rect x="37.9" y="709" width="71.4" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="40.88" y="719.5" >java/lan..</text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (1 samples, 0.04%)</title><rect x="20.6" y="341" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="23.64" y="351.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.offer (167 samples, 7.17%)</title><rect x="913.2" y="709" width="84.7" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="916.25" y="719.5" >java/util..</text>
</g>
<g >
<title>RelocIterator::next() (1 samples, 0.04%)</title><rect x="1172.8" y="885" width="0.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1175.77" y="895.5" ></text>
</g>
<g >
<title>AdapterHandlerLibrary::create_native_wrapper(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="14.1" y="789" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="17.05" y="799.5" ></text>
</g>
<g >
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.04%)</title><rect x="1071.9" y="997" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1074.90" y="1007.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="16.1" y="917" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="19.08" y="927.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.04%)</title><rect x="104.3" y="549" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="107.28" y="559.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler.stopProfilers (2 samples, 0.09%)</title><rect x="1127.7" y="965" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1130.65" y="975.5" ></text>
</g>
<g >
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="1101.3" y="693" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1104.30" y="703.5" ></text>
</g>
<g >
<title>com/sun/jna/Native.free (1 samples, 0.04%)</title><rect x="19.1" y="693" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="22.12" y="703.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.getJsonValueAccessor (1 samples, 0.04%)</title><rect x="1128.2" y="517" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1131.16" y="527.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider.findContentValueSerializer (1 samples, 0.04%)</title><rect x="1128.2" y="629" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1131.16" y="639.5" ></text>
</g>
<g >
<title>EventMark::EventMark(char const*, ...) (1 samples, 0.04%)</title><rect x="17.6" y="581" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="20.60" y="591.5" ></text>
</g>
<g >
<title>Compile::current() (1 samples, 0.04%)</title><rect x="1162.1" y="549" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1165.12" y="559.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1084.6" y="821" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1087.57" y="831.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedCreatorCollector.collectCreators (1 samples, 0.04%)</title><rect x="1128.2" y="437" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1131.16" y="447.5" ></text>
</g>
<g >
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.04%)</title><rect x="1127.7" y="645" width="0.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1130.65" y="655.5" ></text>
</g>
<g >
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.04%)</title><rect x="1144.9" y="837" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1147.89" y="847.5" ></text>
</g>
<g >
<title>ConstantPoolCacheEntry::set_itable_call(Bytecodes::Code, Klass*, methodHandle const&amp;, int) (1 samples, 0.04%)</title><rect x="16.6" y="965" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="19.59" y="975.5" ></text>
</g>
<g >
<title>org/abcde/logging/log4j/RotatingLogFileWriter.printf (1 samples, 0.04%)</title><rect x="1111.4" y="885" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1114.43" y="895.5" ></text>
</g>
<g >
<title>sun/management/GarbageCollectorImpl.getObjectName (12 samples, 0.52%)</title><rect x="1102.3" y="677" width="6.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1105.31" y="687.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1086.1" y="773" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="1089.09" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1174.3" y="805" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1177.29" y="815.5" ></text>
</g>
<g >
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.04%)</title><rect x="1130.7" y="885" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1133.70" y="895.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1104.8" y="565" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1107.85" y="575.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1084.6" y="709" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1087.57" y="719.5" ></text>
</g>
<g >
<title>write (1 samples, 0.04%)</title><rect x="13.5" y="917" width="0.6" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="16.55" y="927.5" ></text>
</g>
<g >
<title>CompilerThread::env() (1 samples, 0.04%)</title><rect x="1162.1" y="517" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1165.12" y="527.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.construct (10 samples, 0.43%)</title><rect x="1103.3" y="597" width="5.1" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1106.32" y="607.5" ></text>
</g>
<g >
<title>Monitor::ILock(Thread*) (1 samples, 0.04%)</title><rect x="14.6" y="917" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="17.56" y="927.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.submit (5 samples, 0.21%)</title><rect x="1124.6" y="997" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1127.61" y="1007.5" ></text>
</g>
<g >
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="629" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="20.60" y="639.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (22 samples, 0.95%)</title><rect x="1142.9" y="901" width="11.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1145.86" y="911.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (2 samples, 0.09%)</title><rect x="753.6" y="661" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="756.58" y="671.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.siftUp (56 samples, 2.41%)</title><rect x="534.6" y="629" width="28.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="537.61" y="639.5" >ja..</text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.force (1 samples, 0.04%)</title><rect x="20.6" y="261" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="23.64" y="271.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.09%)</title><rect x="70.8" y="517" width="1.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="73.82" y="527.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedMain.main (2 samples, 0.09%)</title><rect x="1127.7" y="1077" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1130.65" y="1087.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.04%)</title><rect x="1086.1" y="469" width="0.5" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1089.09" y="479.5" ></text>
</g>
<g >
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.04%)</title><rect x="17.6" y="549" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="20.60" y="559.5" ></text>
</g>
<g >
<title>Node::in(unsigned int) const (1 samples, 0.04%)</title><rect x="1154.5" y="789" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1157.52" y="799.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.6" y="853" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1160.56" y="863.5" ></text>
</g>
<g >
<title>OtherRegionsTable::occ_fine() const (1 samples, 0.04%)</title><rect x="1133.7" y="901" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1136.74" y="911.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="567.1" y="565" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="570.05" y="575.5" ></text>
</g>
<g >
<title>AbsSeq::dsd() const (1 samples, 0.04%)</title><rect x="1132.7" y="837" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1135.72" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.04%)</title><rect x="1073.9" y="853" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1076.93" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1084.6" y="677" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1087.57" y="687.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="1173.8" y="917" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1176.78" y="927.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.selectAgain (1 samples, 0.04%)</title><rect x="14.1" y="981" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="17.05" y="991.5" ></text>
</g>
<g >
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="97.2" y="581" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="100.18" y="591.5" ></text>
</g>
<g >
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="1101.3" y="709" width="0.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="1104.30" y="719.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1114.94" y="879.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer$$Lambda$967/1804144567.test (1 samples, 0.04%)</title><rect x="1084.6" y="597" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1087.57" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (4 samples, 0.17%)</title><rect x="911.2" y="677" width="2.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="914.22" y="687.5" ></text>
</g>
<g >
<title>TypeAry::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1156.5" y="821" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1159.55" y="831.5" ></text>
</g>
<g >
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.04%)</title><rect x="1102.8" y="581" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1105.82" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1 samples, 0.04%)</title><rect x="17.1" y="901" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="20.10" y="911.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.04%)</title><rect x="1179.9" y="821" width="0.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1182.86" y="831.5" ></text>
</g>
<g >
<title>PhiNode::Opcode() const (1 samples, 0.04%)</title><rect x="1157.6" y="741" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1160.56" y="751.5" ></text>
</g>
<g >
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.04%)</title><rect x="21.2" y="133" width="0.5" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="24.15" y="143.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.close (2 samples, 0.09%)</title><rect x="21.2" y="277" width="1.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="24.15" y="287.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="14.6" y="901" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="17.56" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.04%)</title><rect x="1157.6" y="773" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1160.56" y="783.5" ></text>
</g>
<g >
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.04%)</title><rect x="1171.8" y="933" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1174.75" y="943.5" ></text>
</g>
<g >
<title>BasicMatcher::match(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1161.6" y="581" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1164.62" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.freeChunk (6 samples, 0.26%)</title><rect x="1067.8" y="741" width="3.1" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1070.84" y="751.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.write (1 samples, 0.04%)</title><rect x="1085.6" y="853" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1088.58" y="863.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (3 samples, 0.13%)</title><rect x="1125.1" y="901" width="1.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1128.12" y="911.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.report (1 samples, 0.04%)</title><rect x="1111.4" y="933" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1114.43" y="943.5" ></text>
</g>
<g >
<title>com/abcde/bench/jmh/api/profile/AbstractMicroProfiler.afterIteration (2 samples, 0.09%)</title><rect x="1127.7" y="949" width="1.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1130.65" y="959.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.04%)</title><rect x="1108.9" y="757" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1111.90" y="767.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pushNow (9 samples, 0.39%)</title><rect x="1028.8" y="741" width="4.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1031.81" y="751.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1157.6" y="789" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1160.56" y="799.5" ></text>
</g>
<g >
<title>org/abcde/internal/unsafe/UnsafeUtil.free (1 samples, 0.04%)</title><rect x="19.1" y="709" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="22.12" y="719.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$findFirst$4 (1 samples, 0.04%)</title><rect x="1099.8" y="677" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1102.78" y="687.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (11 samples, 0.47%)</title><rect x="11.5" y="1029" width="5.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="14.52" y="1039.5" ></text>
</g>
<g >
<title>BlockEnd::BlockEnd(ValueType*, ValueStack*, bool) (1 samples, 0.04%)</title><rect x="1165.7" y="757" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1168.67" y="767.5" ></text>
</g>
<g >
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.04%)</title><rect x="1165.7" y="773" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1168.67" y="783.5" ></text>
</g>
<g >
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.09%)</title><rect x="1179.4" y="933" width="1.0" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1182.36" y="943.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.probeNext (2 samples, 0.09%)</title><rect x="771.3" y="629" width="1.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="774.32" y="639.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.04%)</title><rect x="1157.6" y="757" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1160.56" y="767.5" ></text>
</g>
<g >
<title>Parse::maybe_add_predicate_after_if(Parse::Block*) (1 samples, 0.04%)</title><rect x="1162.1" y="661" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1165.12" y="671.5" ></text>
</g>
<g >
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.04%)</title><rect x="41.9" y="565" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="44.93" y="575.5" ></text>
</g>
<g >
<title>com/abcde/bench/model/util/JsonUtil.serializeJson (2 samples, 0.09%)</title><rect x="1127.7" y="885" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1130.65" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.04%)</title><rect x="17.1" y="853" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="20.10" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.indexOf (26 samples, 1.12%)</title><rect x="830.1" y="661" width="13.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="833.12" y="671.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.force (1 samples, 0.04%)</title><rect x="23.2" y="245" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="26.18" y="255.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="1179.9" y="805" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1182.86" y="815.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.add (36 samples, 1.55%)</title><rect x="1006.5" y="773" width="18.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1009.51" y="783.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink (1 samples, 0.04%)</title><rect x="1086.1" y="517" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1089.09" y="527.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle.submitIfRunnable (6 samples, 0.26%)</title><rect x="1124.6" y="1013" width="3.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1127.61" y="1023.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor.close0 (1 samples, 0.04%)</title><rect x="19.6" y="309" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="22.63" y="319.5" ></text>
</g>
<g >
<title>CodeHeapPool::get_memory_usage() (1 samples, 0.04%)</title><rect x="1163.1" y="805" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1166.14" y="815.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent0.getInt (3 samples, 0.13%)</title><rect x="1033.4" y="773" width="1.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1036.38" y="783.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (4 samples, 0.17%)</title><rect x="1121.6" y="1045" width="2.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1124.57" y="1055.5" ></text>
</g>
<g >
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (5 samples, 0.21%)</title><rect x="1154.0" y="885" width="2.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1157.01" y="895.5" ></text>
</g>
<g >
<title>__psynch_cvwait (2 samples, 0.09%)</title><rect x="1122.6" y="981" width="1.0" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1125.59" y="991.5" ></text>
</g>
<g >
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="357" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="27.19" y="367.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.reachabilityFence0 (1 samples, 0.04%)</title><rect x="1066.8" y="789" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1069.83" y="799.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.force (1 samples, 0.04%)</title><rect x="20.6" y="277" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="23.64" y="287.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (3 samples, 0.13%)</title><rect x="1125.1" y="837" width="1.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1128.12" y="847.5" ></text>
</g>
<g >
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1101.8" y="645" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1104.80" y="655.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass._creators (1 samples, 0.04%)</title><rect x="1128.2" y="453" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1131.16" y="463.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.04%)</title><rect x="1108.4" y="613" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1111.39" y="623.5" ></text>
</g>
<g >
<title>Compilation::build_hir() (7 samples, 0.30%)</title><rect x="1165.2" y="869" width="3.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1168.16" y="879.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1086.1" y="741" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1089.09" y="751.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (2 samples, 0.09%)</title><rect x="1070.9" y="853" width="1.0" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="1073.88" y="863.5" ></text>
</g>
<g >
<title>_pthread_start (121 samples, 5.20%)</title><rect x="1128.7" y="1061" width="61.3" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1131.67" y="1071.5" >_pthre..</text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (2 samples, 0.09%)</title><rect x="76.9" y="565" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="79.91" y="575.5" ></text>
</g>
<g >
<title>SafepointSynchronize::begin() (5 samples, 0.21%)</title><rect x="1176.8" y="965" width="2.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1179.82" y="975.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent.getInt (3 samples, 0.13%)</title><rect x="1033.4" y="789" width="1.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1036.38" y="799.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DefaultDatabaseManager.stopDatabase (10 samples, 0.43%)</title><rect x="19.6" y="677" width="5.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="22.63" y="687.5" ></text>
</g>
<g >
<title>java/lang/management/DefaultPlatformMBeanProvider$1.mbeanInterfaceNames (1 samples, 0.04%)</title><rect x="1099.8" y="661" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1102.78" y="671.5" ></text>
</g>
<g >
<title>sun/management/GarbageCollectorImpl.getCollectionTime (1 samples, 0.04%)</title><rect x="1110.4" y="885" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1113.42" y="895.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.poll (44 samples, 1.89%)</title><rect x="568.6" y="677" width="22.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="571.57" y="687.5" >j..</text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.size2SizeIdx (27 samples, 1.16%)</title><rect x="1011.1" y="757" width="13.7" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1014.07" y="767.5" ></text>
</g>
<g >
<title>Node::add_out(Node*) (1 samples, 0.04%)</title><rect x="1144.4" y="837" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1147.38" y="847.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 0.04%)</title><rect x="23.7" y="373" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="26.69" y="383.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.17%)</title><rect x="1166.7" y="773" width="2.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1169.68" y="783.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.04%)</title><rect x="1155.5" y="837" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1158.53" y="847.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_lir_list(LIR_List*) (1 samples, 0.04%)</title><rect x="1169.2" y="837" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1172.22" y="847.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.09%)</title><rect x="1161.6" y="725" width="1.0" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1164.62" y="735.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.shutdown (9 samples, 0.39%)</title><rect x="19.6" y="597" width="4.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="22.63" y="607.5" ></text>
</g>
<g >
<title>sun/nio/fs/AbstractFileSystemProvider.deleteIfExists (2 samples, 0.09%)</title><rect x="18.1" y="645" width="1.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="21.11" y="655.5" ></text>
</g>
<g >
<title>SignatureIterator::iterate_returntype() (1 samples, 0.04%)</title><rect x="16.6" y="933" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="19.59" y="943.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (5 samples, 0.21%)</title><rect x="1061.3" y="837" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1064.25" y="847.5" ></text>
</g>
<g >
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="21.2" y="181" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="24.15" y="191.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1162.1" y="565" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1165.12" y="575.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1172.3" y="917" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1175.26" y="927.5" ></text>
</g>
<g >
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="1089.6" y="821" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1092.64" y="831.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.close (2 samples, 0.09%)</title><rect x="21.2" y="261" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="24.15" y="271.5" ></text>
</g>
<g >
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1179.9" y="885" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1182.86" y="895.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions.activeTransactions (1 samples, 0.04%)</title><rect x="1086.6" y="885" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1089.60" y="895.5" ></text>
</g>
<g >
<title>JVM_FillInStackTrace (1 samples, 0.04%)</title><rect x="21.2" y="117" width="0.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="24.15" y="127.5" ></text>
</g>
<g >
<title>sun/nio/fs/PollingWatchService$PollingWatchKey$1.run (8 samples, 0.34%)</title><rect x="1111.9" y="981" width="4.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1114.94" y="991.5" ></text>
</g>
<g >
<title>MachNode::adr_type() const (1 samples, 0.04%)</title><rect x="1144.9" y="821" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1147.89" y="831.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter$$Lambda$986/1299321525.run (1 samples, 0.04%)</title><rect x="1111.4" y="981" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1114.43" y="991.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (1 samples, 0.04%)</title><rect x="844.3" y="709" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="847.31" y="719.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (3 samples, 0.13%)</title><rect x="101.7" y="533" width="1.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="104.74" y="543.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1165.2" y="821" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1168.16" y="831.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (61 samples, 2.62%)</title><rect x="1141.8" y="965" width="31.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1144.85" y="975.5" >Co..</text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1172.3" y="933" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1175.26" y="943.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="1127.7" y="741" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1130.65" y="751.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializer.serialize (1 samples, 0.04%)</title><rect x="1128.2" y="805" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1131.16" y="815.5" ></text>
</g>
<g >
<title>JVM_Sleep (18 samples, 0.77%)</title><rect x="1089.1" y="853" width="9.2" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="1092.13" y="863.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="567.1" y="533" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="570.05" y="543.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_thrpt_jmhStub (2,066 samples, 88.75%)</title><rect x="24.7" y="869" width="1047.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="27.70" y="879.5" >com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_thrpt_jmhStub</text>
</g>
<g >
<title>os::PlatformEvent::park(long) (2 samples, 0.09%)</title><rect x="15.6" y="933" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="18.58" y="943.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun (302 samples, 12.97%)</title><rect x="844.8" y="725" width="153.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="847.82" y="735.5" >io/netty/buffer/Poo..</text>
</g>
<g >
<title>java/lang/Object.hashCode (9 samples, 0.39%)</title><rect x="109.9" y="677" width="4.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="112.85" y="687.5" ></text>
</g>
<g >
<title>LinearScanWalker::LinearScanWalker(LinearScan*, Interval*, Interval*) (1 samples, 0.04%)</title><rect x="1170.7" y="821" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1173.74" y="831.5" ></text>
</g>
<g >
<title>StringTableLookupJchar::equals(WeakHandle&lt;(WeakHandleType)2&gt;*, bool*) (1 samples, 0.04%)</title><rect x="1106.4" y="437" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1109.37" y="447.5" ></text>
</g>
<g >
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.09%)</title><rect x="1123.6" y="1013" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1126.60" y="1023.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceForClose (1 samples, 0.04%)</title><rect x="20.6" y="357" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="23.64" y="367.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/EvictionTask.run (24 samples, 1.03%)</title><rect x="1072.4" y="933" width="12.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1075.41" y="943.5" ></text>
</g>
<g >
<title>itable stub (1 samples, 0.04%)</title><rect x="109.3" y="709" width="0.6" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="112.35" y="719.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (3 samples, 0.13%)</title><rect x="1134.2" y="965" width="1.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1137.24" y="975.5" ></text>
</g>
<g >
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1161.6" y="629" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1164.62" y="639.5" ></text>
</g>
<g >
<title>__gettimeofday (1 samples, 0.04%)</title><rect x="1090.1" y="805" width="0.6" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1093.15" y="815.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (11 samples, 0.47%)</title><rect x="1128.7" y="949" width="5.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1131.67" y="959.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPoolManager.getThreadPool (1 samples, 0.04%)</title><rect x="1127.1" y="981" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1130.15" y="991.5" ></text>
</g>
<g >
<title>sun/nio/ch/KQueue.poll (1 samples, 0.04%)</title><rect x="14.1" y="901" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="17.05" y="911.5" ></text>
</g>
<g >
<title>VMThread::evaluate_operation(VM_Operation*) (2 samples, 0.09%)</title><rect x="1179.4" y="965" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1182.36" y="975.5" ></text>
</g>
<g >
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.04%)</title><rect x="1142.4" y="693" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1145.35" y="703.5" ></text>
</g>
<g >
<title>SignatureIterator::parse_type() (1 samples, 0.04%)</title><rect x="16.6" y="917" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="19.59" y="927.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.lambda$asCallable$1 (76 samples, 3.26%)</title><rect x="1072.4" y="965" width="38.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1075.41" y="975.5" >org..</text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.13%)</title><rect x="1098.8" y="821" width="1.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1101.76" y="831.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.closeSwapper (1 samples, 0.04%)</title><rect x="19.6" y="469" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="22.63" y="479.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1098.3" y="741" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1101.26" y="751.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (7 samples, 0.30%)</title><rect x="1137.8" y="981" width="3.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1140.79" y="991.5" ></text>
</g>
<g >
<title>ReadStableMark(oopDesc*) (1 samples, 0.04%)</title><rect x="1126.6" y="885" width="0.5" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="1129.64" y="895.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.readNextEntry (4 samples, 0.17%)</title><rect x="1114.0" y="933" width="2.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1116.97" y="943.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/DetachedCheckpointLogEntryWriter.writeLogEntryHeader (1 samples, 0.04%)</title><rect x="23.7" y="501" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="26.69" y="511.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.run (13 samples, 0.56%)</title><rect x="1121.1" y="1061" width="6.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1124.07" y="1071.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.indexOf (11 samples, 0.47%)</title><rect x="757.1" y="645" width="5.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="760.13" y="655.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="16.6" y="997" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="19.59" y="1007.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (17 samples, 0.73%)</title><rect x="1100.8" y="805" width="8.6" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="1103.79" y="815.5" ></text>
</g>
<g >
<title>JavaThreadSleepState::JavaThreadSleepState(JavaThread*) (1 samples, 0.04%)</title><rect x="1089.1" y="837" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1092.13" y="847.5" ></text>
</g>
<g >
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.04%)</title><rect x="1123.6" y="917" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1126.60" y="927.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_types() (2 samples, 0.09%)</title><rect x="1141.8" y="837" width="1.1" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1144.85" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxCompute (37 samples, 1.59%)</title><rect x="894.5" y="693" width="18.7" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="897.49" y="703.5" ></text>
</g>
<g >
<title>GraphKit::add_predicate(int) (1 samples, 0.04%)</title><rect x="1162.1" y="645" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1165.12" y="655.5" ></text>
</g>
<g >
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="1084.1" y="821" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1087.06" y="831.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (13 samples, 0.56%)</title><rect x="1165.2" y="917" width="6.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1168.16" y="927.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (150 samples, 6.44%)</title><rect x="135.2" y="709" width="76.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="138.20" y="719.5" >io/netty..</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClass.getConstructors (1 samples, 0.04%)</title><rect x="1128.2" y="469" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1131.16" y="479.5" ></text>
</g>
<g >
<title>java/util/concurrent/ScheduledThreadPoolExecutor.canRunInCurrentRunState (1 samples, 0.04%)</title><rect x="1116.0" y="1013" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1119.00" y="1023.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (33 samples, 1.42%)</title><rect x="597.5" y="773" width="16.7" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="600.47" y="783.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory (1 samples, 0.04%)</title><rect x="17.1" y="693" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="20.10" y="703.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (2,157 samples, 92.65%)</title><rect x="17.6" y="1029" width="1093.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="20.60" y="1039.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.04%)</title><rect x="21.7" y="117" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="24.66" y="127.5" ></text>
</g>
<g >
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1156.5" y="853" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1159.55" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.nonVolatileRawCnt (3 samples, 0.13%)</title><rect x="1033.4" y="805" width="1.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1036.38" y="815.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="567.1" y="597" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="570.05" y="607.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.get (31 samples, 1.33%)</title><rect x="827.6" y="677" width="15.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="830.59" y="687.5" ></text>
</g>
<g >
<title>RegMask::SUBTRACT(RegMask const&amp;) (1 samples, 0.04%)</title><rect x="1147.9" y="837" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1150.93" y="847.5" ></text>
</g>
<g >
<title>__gettimeofday (1 samples, 0.04%)</title><rect x="1118.0" y="901" width="0.5" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="1121.02" y="911.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1105.4" y="565" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1108.35" y="575.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_intrinsics(ciMethod*, bool) (1 samples, 0.04%)</title><rect x="1167.7" y="741" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1170.70" y="751.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (6 samples, 0.26%)</title><rect x="127.1" y="725" width="3.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="130.09" y="735.5" ></text>
</g>
<g >
<title>ObjArrayAllocator::initialize(HeapWord*) const (8 samples, 0.34%)</title><rect x="72.9" y="517" width="4.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="75.85" y="527.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.04%)</title><rect x="17.1" y="869" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="20.10" y="879.5" ></text>
</g>
<g >
<title>java/nio/channels/spi/AbstractSelector.close (5 samples, 0.21%)</title><rect x="11.5" y="981" width="2.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="14.52" y="991.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="38.4" y="629" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="41.38" y="639.5" ></text>
</g>
<g >
<title>GrowableArray&lt;long&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.04%)</title><rect x="1168.7" y="837" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1171.71" y="847.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider._serialize (1 samples, 0.04%)</title><rect x="1128.2" y="821" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1131.16" y="831.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::decode&lt;oopDesc*&gt;(AccessInternal::EncodedType&lt;1097844ull, oopDesc*&gt;::type) (1 samples, 0.04%)</title><rect x="91.6" y="581" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="94.61" y="591.5" ></text>
</g>
<g >
<title>Parse::do_call() (3 samples, 0.13%)</title><rect x="1161.1" y="757" width="1.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1164.11" y="767.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.invoke (2,080 samples, 89.35%)</title><rect x="17.6" y="949" width="1054.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="20.60" y="959.5" >java/lang/reflect/Method.invoke</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.serializeFields (1 samples, 0.04%)</title><rect x="1128.2" y="789" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1131.16" y="799.5" ></text>
</g>
<g >
<title>ciBaseObject::ident() (1 samples, 0.04%)</title><rect x="1144.9" y="757" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1147.89" y="767.5" ></text>
</g>
<g >
<title>IntervalWalker::walk_to(IntervalState, int) (1 samples, 0.04%)</title><rect x="1169.7" y="805" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1172.73" y="815.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runPages (7 samples, 0.30%)</title><rect x="998.9" y="725" width="3.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1001.91" y="735.5" ></text>
</g>
<g >
<title>com/sun/management/internal/PlatformMBeanProviderImpl$1.nameToMBeanMap (13 samples, 0.56%)</title><rect x="1101.8" y="693" width="6.6" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="1104.80" y="703.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.allocate (736 samples, 31.62%)</title><rect x="217.8" y="709" width="373.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="220.82" y="719.5" >io/netty/buffer/PoolChunk.allocate</text>
</g>
<g >
<title>CodeHeap::allocated_capacity() const (1 samples, 0.04%)</title><rect x="1163.1" y="789" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1166.14" y="799.5" ></text>
</g>
<g >
<title>madvise (1 samples, 0.04%)</title><rect x="19.1" y="661" width="0.5" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="22.12" y="671.5" ></text>
</g>
<g >
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="17.1" y="725" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="20.10" y="735.5" ></text>
</g>
<g >
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (7 samples, 0.30%)</title><rect x="1129.7" y="917" width="3.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1132.68" y="927.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.opendir (2 samples, 0.09%)</title><rect x="1113.0" y="917" width="1.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1115.96" y="927.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1105.4" y="501" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1108.35" y="511.5" ></text>
</g>
<g >
<title>LinearScan::do_linear_scan() (3 samples, 0.13%)</title><rect x="1169.7" y="853" width="1.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1172.73" y="863.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2,080 samples, 89.35%)</title><rect x="17.6" y="917" width="1054.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="20.60" y="927.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1108.4" y="677" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1111.39" y="687.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue.offer (3 samples, 0.13%)</title><rect x="1125.1" y="933" width="1.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1128.12" y="943.5" ></text>
</g>
<g >
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="1126.6" y="933" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1129.64" y="943.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.opendir0 (2 samples, 0.09%)</title><rect x="1113.0" y="901" width="1.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1115.96" y="911.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="23.7" y="421" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="26.69" y="431.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (1 samples, 0.04%)</title><rect x="1154.5" y="805" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1157.52" y="815.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 0.04%)</title><rect x="24.2" y="453" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="27.19" y="463.5" ></text>
</g>
<g >
<title>jmm_GetLongAttribute (1 samples, 0.04%)</title><rect x="1109.9" y="869" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1112.91" y="879.5" ></text>
</g>
<g >
<title>nmethod::metadata_at(int) const (2 samples, 0.09%)</title><rect x="107.8" y="597" width="1.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="110.83" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.windowsSafeIOOperation (1 samples, 0.04%)</title><rect x="1086.1" y="613" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1089.09" y="623.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="1173.3" y="853" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1176.27" y="863.5" ></text>
</g>
<g >
<title>RegMask::find_first_elem() const (1 samples, 0.04%)</title><rect x="1152.0" y="853" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1154.98" y="863.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.39%)</title><rect x="1116.5" y="1029" width="4.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1119.50" y="1039.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore$$Lambda$1210/540065348.run (2 samples, 0.09%)</title><rect x="21.2" y="453" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="24.15" y="463.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.put (9 samples, 0.39%)</title><rect x="109.9" y="709" width="4.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="112.85" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1174.3" y="789" width="0.5" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="1177.29" y="799.5" ></text>
</g>
<g >
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.04%)</title><rect x="1162.1" y="677" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1165.12" y="687.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor.close (1 samples, 0.04%)</title><rect x="19.6" y="325" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="22.63" y="335.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1172.3" y="885" width="0.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1175.26" y="895.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.siftUpComparable (56 samples, 2.41%)</title><rect x="534.6" y="613" width="28.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="537.61" y="623.5" >ja..</text>
</g>
<g >
<title>java/lang/Long.valueOf (7 samples, 0.30%)</title><rect x="1002.5" y="725" width="3.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1005.46" y="735.5" ></text>
</g>
<g >
<title>com/abcde/bench/jmh/api/BaseBenchmark.tearDown (14 samples, 0.60%)</title><rect x="17.6" y="869" width="7.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="20.60" y="879.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (19 samples, 0.82%)</title><rect x="604.6" y="725" width="9.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="607.56" y="735.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (2 samples, 0.09%)</title><rect x="14.6" y="965" width="1.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="17.56" y="975.5" ></text>
</g>
<g >
<title>sun/nio/ch/SelectorImpl.implCloseSelector (5 samples, 0.21%)</title><rect x="11.5" y="965" width="2.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="14.52" y="975.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.visitStores (2 samples, 0.09%)</title><rect x="22.7" y="485" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="25.67" y="495.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.close (1 samples, 0.04%)</title><rect x="19.6" y="565" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="22.63" y="575.5" ></text>
</g>
<g >
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.04%)</title><rect x="1129.7" y="885" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1132.68" y="895.5" ></text>
</g>
<g >
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.04%)</title><rect x="1174.3" y="885" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1177.29" y="895.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.force (1 samples, 0.04%)</title><rect x="23.2" y="293" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="26.18" y="303.5" ></text>
</g>
<g >
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.04%)</title><rect x="1087.1" y="869" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1090.10" y="879.5" ></text>
</g>
<g >
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1171.8" y="917" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.75" y="927.5" ></text>
</g>
<g >
<title>org/abcde/function/ThrowingAction.executeAll (4 samples, 0.17%)</title><rect x="20.1" y="565" width="2.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="23.14" y="575.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (54 samples, 2.32%)</title><rect x="590.9" y="789" width="27.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="593.88" y="799.5" >i..</text>
</g>
<g >
<title>sun/misc/Unsafe.getInt (3 samples, 0.13%)</title><rect x="1033.4" y="757" width="1.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1036.38" y="767.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.monitor (46 samples, 1.98%)</title><rect x="1087.6" y="917" width="23.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1090.61" y="927.5" >o..</text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (6 samples, 0.26%)</title><rect x="1064.3" y="805" width="3.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1067.30" y="815.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.deleteDirectory (3 samples, 0.13%)</title><rect x="17.6" y="757" width="1.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="20.60" y="767.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (17 samples, 0.73%)</title><rect x="1181.4" y="949" width="8.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1184.38" y="959.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (3 samples, 0.13%)</title><rect x="105.3" y="533" width="1.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="108.29" y="543.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.close (5 samples, 0.21%)</title><rect x="11.5" y="997" width="2.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="14.52" y="1007.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1085.1" y="853" width="0.5" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="1088.08" y="863.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink0 (1 samples, 0.04%)</title><rect x="1086.1" y="501" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1089.09" y="511.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.09%)</title><rect x="1161.6" y="741" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1164.62" y="751.5" ></text>
</g>
<g >
<title>Method::print_short_name(outputStream*) (3 samples, 0.13%)</title><rect x="1163.6" y="885" width="1.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1166.64" y="895.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/entry/CheckpointLogVersionSelector.&lt;clinit&gt; (1 samples, 0.04%)</title><rect x="23.7" y="485" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="26.69" y="495.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="1165.2" y="805" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1168.16" y="815.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/BaseRegularBenchmark.onTearDown (14 samples, 0.60%)</title><rect x="17.6" y="853" width="7.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="20.60" y="863.5" ></text>
</g>
<g >
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.04%)</title><rect x="1168.2" y="613" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1171.20" y="623.5" ></text>
</g>
<g >
<title>Node_Array::operator[](unsigned int) const (1 samples, 0.04%)</title><rect x="1154.0" y="821" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1157.01" y="831.5" ></text>
</g>
<g >
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.04%)</title><rect x="1106.4" y="501" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1109.37" y="511.5" ></text>
</g>
<g >
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.04%)</title><rect x="14.1" y="933" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="17.05" y="943.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunkList.allocate (14 samples, 0.60%)</title><rect x="188.4" y="645" width="7.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="191.42" y="655.5" ></text>
</g>
<g >
<title>TypeInt::eq(Type const*) const (1 samples, 0.04%)</title><rect x="1156.5" y="741" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1159.55" y="751.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (2 samples, 0.09%)</title><rect x="40.9" y="613" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="43.92" y="623.5" ></text>
</g>
<g >
<title>all (2,328 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.04%)</title><rect x="15.1" y="933" width="0.5" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="18.07" y="943.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.closeSwapper (2 samples, 0.09%)</title><rect x="21.2" y="213" width="1.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="24.15" y="223.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (816 samples, 35.05%)</title><rect x="619.8" y="821" width="413.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="622.77" y="831.5" >io/netty/buffer/AbstractReferenceCountedByteBuf.handleRe..</text>
</g>
<g >
<title>__psynch_cvwait (3 samples, 0.13%)</title><rect x="1134.2" y="901" width="1.6" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1137.24" y="911.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.86%)</title><rect x="1074.4" y="853" width="10.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1077.43" y="863.5" ></text>
</g>
<g >
<title>__getdirentries64 (3 samples, 0.13%)</title><rect x="1114.5" y="869" width="1.5" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1117.48" y="879.5" ></text>
</g>
<g >
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (2 samples, 0.09%)</title><rect x="112.9" y="581" width="1.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="115.90" y="591.5" ></text>
</g>
<g >
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1142.4" y="773" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1145.35" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashIndex (4 samples, 0.17%)</title><rect x="760.7" y="629" width="2.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="763.68" y="639.5" ></text>
</g>
<g >
<title>Chunk::next() const (1 samples, 0.04%)</title><rect x="94.6" y="581" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="97.65" y="591.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.lambda$submit$0 (76 samples, 3.26%)</title><rect x="1072.4" y="997" width="38.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1075.41" y="1007.5" >org..</text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1108.4" y="629" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1111.39" y="639.5" ></text>
</g>
<g >
<title>JVM_InternString (3 samples, 0.13%)</title><rect x="1106.4" y="549" width="1.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="1109.37" y="559.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.lambda$deleteFile$1 (1 samples, 0.04%)</title><rect x="1086.1" y="581" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1089.09" y="591.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.doClose (2 samples, 0.09%)</title><rect x="21.2" y="293" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="24.15" y="303.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (1 samples, 0.04%)</title><rect x="531.6" y="613" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="534.57" y="623.5" ></text>
</g>
<g >
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.09%)</title><rect x="44.5" y="613" width="1.0" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="47.47" y="623.5" ></text>
</g>
<g >
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.09%)</title><rect x="1141.8" y="885" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1144.85" y="895.5" ></text>
</g>
<g >
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1101.3" y="645" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1104.30" y="655.5" ></text>
</g>
<g >
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.09%)</title><rect x="403.3" y="629" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="406.33" y="639.5" ></text>
</g>
<g >
<title>java/util/HashMap$Values.spliterator (1 samples, 0.04%)</title><rect x="1098.3" y="821" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1101.26" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapseRuns (4 samples, 0.17%)</title><rect x="1068.4" y="693" width="2.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1071.35" y="703.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunkList.allocate (736 samples, 31.62%)</title><rect x="217.8" y="725" width="373.1" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="220.82" y="735.5" >io/netty/buffer/PoolChunkList.allocate</text>
</g>
<g >
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.04%)</title><rect x="1172.8" y="933" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1175.77" y="943.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.parkUntilEvictionRequired (24 samples, 1.03%)</title><rect x="1072.4" y="901" width="12.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1075.41" y="911.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="1087.1" y="901" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1090.10" y="911.5" ></text>
</g>
<g >
<title>RegMask::SUBTRACT(RegMask const&amp;) (1 samples, 0.04%)</title><rect x="1146.4" y="853" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1149.41" y="863.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1,156 samples, 49.66%)</title><rect x="32.3" y="805" width="585.9" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="35.30" y="815.5" >io/netty/buffer/PooledByteBufAllocator.newDirectBuffer</text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.putVal (9 samples, 0.39%)</title><rect x="109.9" y="693" width="4.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="112.85" y="703.5" ></text>
</g>
<g >
<title>VMThread::loop() (11 samples, 0.47%)</title><rect x="1174.8" y="981" width="5.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1177.79" y="991.5" ></text>
</g>
<g >
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.04%)</title><rect x="1169.2" y="821" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1172.22" y="831.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.accept (16 samples, 0.69%)</title><rect x="1100.8" y="757" width="8.1" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="1103.79" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxFloor (36 samples, 1.55%)</title><rect x="787.5" y="677" width="18.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="790.54" y="687.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::check_out_of_memory() (1 samples, 0.04%)</title><rect x="70.3" y="533" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="73.32" y="543.5" ></text>
</g>
<g >
<title>java/util/HashMap$ValueSpliterator.tryAdvance (3 samples, 0.13%)</title><rect x="1098.8" y="725" width="1.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1101.76" y="735.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/results/ForkDirectory.registerPathFor (2 samples, 0.09%)</title><rect x="1127.7" y="901" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1130.65" y="911.5" ></text>
</g>
<g >
<title>GangWorker::loop() (12 samples, 0.52%)</title><rect x="1135.8" y="997" width="6.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1138.76" y="1007.5" ></text>
</g>
<g >
<title>Compile::Optimize() (14 samples, 0.60%)</title><rect x="1154.0" y="901" width="7.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1157.01" y="911.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapsePast (1 samples, 0.04%)</title><rect x="1069.9" y="677" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1072.87" y="687.5" ></text>
</g>
<g >
<title>Node::Node(unsigned int) (1 samples, 0.04%)</title><rect x="1160.1" y="805" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1163.09" y="815.5" ></text>
</g>
<g >
<title>org/abcde/graphdb/factory/module/GlobalModule$$Lambda$194/2136244682.apply (1 samples, 0.04%)</title><rect x="19.1" y="757" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="22.12" y="767.5" ></text>
</g>
<g >
<title>java/nio/file/Files.readAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="933" width="0.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1115.45" y="943.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="567.1" y="549" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="570.05" y="559.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedRunner.run (2 samples, 0.09%)</title><rect x="1127.7" y="1061" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1130.65" y="1071.5" ></text>
</g>
<g >
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1135.8" y="981" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1138.76" y="991.5" ></text>
</g>
<g >
<title>Parker::park(bool, long) (3 samples, 0.13%)</title><rect x="1122.1" y="997" width="1.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1125.08" y="1007.5" ></text>
</g>
<g >
<title>java/lang/invoke/LambdaForm$DMH/750505712.invokeStatic (1 samples, 0.04%)</title><rect x="1102.8" y="597" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1105.82" y="607.5" ></text>
</g>
<g >
<title>FieldType::get_array_info(Symbol*, FieldArrayInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1171.8" y="805" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.75" y="815.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="14.6" y="885" width="0.5" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="17.56" y="895.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.09%)</title><rect x="1179.4" y="917" width="1.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1182.36" y="927.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1101.3" y="629" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1104.30" y="639.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (1 samples, 0.04%)</title><rect x="21.7" y="149" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="24.66" y="159.5" ></text>
</g>
<g >
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="1101.8" y="677" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1104.80" y="687.5" ></text>
</g>
<g >
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.04%)</title><rect x="1166.2" y="741" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1169.18" y="751.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_unlink0 (1 samples, 0.04%)</title><rect x="1086.1" y="485" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1089.09" y="495.5" ></text>
</g>
<g >
<title>InlineTree::should_inline(ciMethod*, ciMethod*, int, ciCallProfile&amp;, WarmCallInfo*) (1 samples, 0.04%)</title><rect x="1161.6" y="613" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1164.62" y="623.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.04%)</title><rect x="19.6" y="357" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="22.63" y="367.5" ></text>
</g>
<g >
<title>org/abcde/kernel/database/DefaultForceOperation.flushAndForce (3 samples, 0.13%)</title><rect x="22.2" y="533" width="1.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="25.16" y="543.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.04%)</title><rect x="1168.2" y="709" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1171.20" y="719.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (16 samples, 0.69%)</title><rect x="1090.1" y="821" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1093.15" y="831.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.findFirst (4 samples, 0.17%)</title><rect x="1098.3" y="853" width="2.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1101.26" y="863.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.getGcStats (25 samples, 1.07%)</title><rect x="1098.3" y="901" width="12.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1101.26" y="911.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.removeAt (1 samples, 0.04%)</title><rect x="844.3" y="677" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="847.31" y="687.5" ></text>
</g>
<g >
<title>Thread::claim_oops_do_par_case(int) (1 samples, 0.04%)</title><rect x="1137.3" y="949" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1140.29" y="959.5" ></text>
</g>
<g >
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1098.3" y="773" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1101.26" y="783.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1161.6" y="677" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1164.62" y="687.5" ></text>
</g>
<g >
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.04%)</title><rect x="1162.1" y="581" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1165.12" y="591.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_readdir (3 samples, 0.13%)</title><rect x="1114.5" y="901" width="1.5" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="1117.48" y="911.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.04%)</title><rect x="17.6" y="533" width="0.5" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="20.60" y="543.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckpointerLifecycle.shutdown (4 samples, 0.17%)</title><rect x="22.2" y="581" width="2.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="25.16" y="591.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.73%)</title><rect x="1100.8" y="789" width="8.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1103.79" y="799.5" ></text>
</g>
<g >
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (7 samples, 0.30%)</title><rect x="1129.7" y="901" width="3.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1132.68" y="911.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (2 samples, 0.09%)</title><rect x="1127.7" y="1013" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1130.65" y="1023.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun0 (75 samples, 3.22%)</title><rect x="492.0" y="645" width="38.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="495.04" y="655.5" >io/..</text>
</g>
<g >
<title>ReadStableMark(oopDesc*) (1 samples, 0.04%)</title><rect x="111.4" y="629" width="0.5" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="114.37" y="639.5" ></text>
</g>
<g >
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="40.4" y="613" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="43.41" y="623.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer._findAndAddDynamic (1 samples, 0.04%)</title><rect x="1128.2" y="661" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1131.16" y="671.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (9 samples, 0.39%)</title><rect x="19.6" y="613" width="4.6" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="22.63" y="623.5" ></text>
</g>
<g >
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1144.9" y="853" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1147.89" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.begin (1 samples, 0.04%)</title><rect x="1108.9" y="773" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1111.90" y="783.5" ></text>
</g>
<g >
<title>Monitor::lock(Thread*) (1 samples, 0.04%)</title><rect x="14.6" y="933" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="17.56" y="943.5" ></text>
</g>
<g >
<title>__unlink (2 samples, 0.09%)</title><rect x="18.1" y="565" width="1.0" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="21.11" y="575.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (29 samples, 1.25%)</title><rect x="195.5" y="645" width="14.7" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="198.52" y="655.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,178 samples, 93.56%)</title><rect x="17.1" y="1061" width="1104.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="20.10" y="1071.5" >java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g >
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1159.1" y="805" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1162.08" y="815.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/transaction/monitor/KernelTransactionMonitor.getActiveTransactions (1 samples, 0.04%)</title><rect x="1086.6" y="901" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1089.60" y="911.5" ></text>
</g>
<g >
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.13%)</title><rect x="1136.3" y="981" width="1.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1139.27" y="991.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="549" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1130.65" y="559.5" ></text>
</g>
<g >
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1168.2" y="629" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1171.20" y="639.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="1123.6" y="981" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1126.60" y="991.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="1126.6" y="901" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1129.64" y="911.5" ></text>
</g>
<g >
<title>java/io/File.exists (1 samples, 0.04%)</title><rect x="23.7" y="357" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="26.69" y="367.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.put (64 samples, 2.75%)</title><rect x="497.6" y="629" width="32.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="500.61" y="639.5" >io..</text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.04%)</title><rect x="1126.6" y="949" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1129.64" y="959.5" ></text>
</g>
<g >
<title>BufferBlob::free(BufferBlob*) (1 samples, 0.04%)</title><rect x="1163.1" y="869" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1166.14" y="879.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="1101.3" y="597" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1104.30" y="607.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.remove (19 samples, 0.82%)</title><rect x="777.9" y="661" width="9.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="780.91" y="671.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.04%)</title><rect x="1148.4" y="869" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1151.44" y="879.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 0.09%)</title><rect x="10.0" y="1061" width="1.0" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.report (1 samples, 0.04%)</title><rect x="1111.4" y="901" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1114.43" y="911.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (12 samples, 0.52%)</title><rect x="70.8" y="533" width="6.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="73.82" y="543.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (7 samples, 0.30%)</title><rect x="1117.5" y="965" width="3.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1120.52" y="975.5" ></text>
</g>
<g >
<title>EnableIf&lt;HasDecorator&lt;1097844ull, MO_UNORDERED&gt;::value, oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::load_internal&lt;1097844ull, oopDesc*&gt;(void*) (4 samples, 0.17%)</title><rect x="89.6" y="549" width="2.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="92.58" y="559.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashIndex (2 samples, 0.09%)</title><rect x="389.6" y="629" width="1.1" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="392.65" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/WrappedByteBuf.release (7 samples, 0.30%)</title><rect x="1067.3" y="821" width="3.6" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1070.34" y="831.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ThreadExecutorMap$2.run (11 samples, 0.47%)</title><rect x="11.5" y="1045" width="5.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="14.52" y="1055.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.shutdown (1 samples, 0.04%)</title><rect x="19.1" y="789" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="22.12" y="799.5" ></text>
</g>
<g >
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (16 samples, 0.69%)</title><rect x="1100.8" y="773" width="8.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1103.79" y="783.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.isDirectory (1 samples, 0.04%)</title><rect x="1085.6" y="805" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1088.58" y="815.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.getInstance (10 samples, 0.43%)</title><rect x="1103.3" y="629" width="5.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1106.32" y="639.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter.lambda$start$0 (1 samples, 0.04%)</title><rect x="1111.4" y="965" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1114.43" y="975.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.04%)</title><rect x="1127.1" y="965" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1130.15" y="975.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.04%)</title><rect x="1086.1" y="821" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1089.09" y="831.5" ></text>
</g>
<g >
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1086.1" y="757" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1089.09" y="767.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.reportLeak (6 samples, 0.26%)</title><rect x="114.4" y="741" width="3.1" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="117.42" y="751.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.removeAt (19 samples, 0.82%)</title><rect x="762.7" y="645" width="9.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="765.71" y="655.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashIndex (45 samples, 1.93%)</title><rect x="504.2" y="613" width="22.8" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="507.20" y="623.5" >i..</text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="567.1" y="629" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="570.05" y="639.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="60.2" y="597" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="63.18" y="607.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stopDatabase (10 samples, 0.43%)</title><rect x="19.6" y="645" width="5.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="22.63" y="655.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (2 samples, 0.09%)</title><rect x="997.9" y="725" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1000.90" y="735.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (3 samples, 0.13%)</title><rect x="101.7" y="565" width="1.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="104.74" y="575.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.stat1 (1 samples, 0.04%)</title><rect x="1085.6" y="773" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1088.58" y="783.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="1084.6" y="757" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1087.57" y="767.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageTrackRecursion (1 samples, 0.04%)</title><rect x="1111.4" y="837" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1114.43" y="847.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.accept (1 samples, 0.04%)</title><rect x="1084.6" y="741" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1087.57" y="751.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1161.1" y="741" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1164.11" y="751.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.close (1 samples, 0.04%)</title><rect x="21.7" y="181" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="24.66" y="191.5" ></text>
</g>
<g >
<title>__gettimeofday (1 samples, 0.04%)</title><rect x="1075.4" y="805" width="0.6" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1078.45" y="815.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (3 samples, 0.13%)</title><rect x="1134.2" y="949" width="1.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1137.24" y="959.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="113.9" y="661" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="116.91" y="671.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue.poll (9 samples, 0.39%)</title><rect x="1116.5" y="1013" width="4.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1119.50" y="1023.5" ></text>
</g>
<g >
<title>NativeLookup::dll_load(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="14.1" y="757" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="17.05" y="767.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.6" y="869" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1160.56" y="879.5" ></text>
</g>
<g >
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.04%)</title><rect x="1168.2" y="725" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1171.20" y="735.5" ></text>
</g>
<g >
<title>Compile::BuildOopMaps() (1 samples, 0.04%)</title><rect x="1142.9" y="869" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1145.86" y="879.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 1.85%)</title><rect x="1141.8" y="917" width="21.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1144.85" y="927.5" >C..</text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.readdir (4 samples, 0.17%)</title><rect x="1114.0" y="917" width="2.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1116.97" y="927.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="1105.4" y="421" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1108.35" y="431.5" ></text>
</g>
<g >
<title>java/nio/file/Files.walkFileTree (3 samples, 0.13%)</title><rect x="17.6" y="725" width="1.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="20.60" y="735.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (3 samples, 0.13%)</title><rect x="1161.1" y="789" width="1.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1164.11" y="799.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.removeAt (13 samples, 0.56%)</title><rect x="781.0" y="645" width="6.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="783.95" y="655.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="1154.5" y="837" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1157.52" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/util/collection/CapacityLimitingBlockAllocatorDecorator.release (1 samples, 0.04%)</title><rect x="19.1" y="741" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="22.12" y="751.5" ></text>
</g>
<g >
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="597" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1130.65" y="607.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler.get (160 samples, 6.87%)</title><rect x="130.1" y="725" width="81.1" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="133.13" y="735.5" >io/netty/..</text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.close (1 samples, 0.04%)</title><rect x="21.7" y="197" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="24.66" y="207.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor$1.close (1 samples, 0.04%)</title><rect x="19.6" y="341" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="22.63" y="351.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.04%)</title><rect x="1169.2" y="773" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1172.22" y="783.5" ></text>
</g>
<g >
<title>ciMethod::ensure_method_data() (1 samples, 0.04%)</title><rect x="1167.2" y="725" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1170.19" y="735.5" ></text>
</g>
<g >
<title>__v2printf (1 samples, 0.04%)</title><rect x="17.6" y="501" width="0.5" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="20.60" y="511.5" ></text>
</g>
<g >
<title>JVM_DefineClassWithSource (1 samples, 0.04%)</title><rect x="1127.7" y="629" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1130.65" y="639.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.push (10 samples, 0.43%)</title><rect x="1028.3" y="757" width="5.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1031.31" y="767.5" ></text>
</g>
<g >
<title>SafepointBlob (1 samples, 0.04%)</title><rect x="187.9" y="645" width="0.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="190.91" y="655.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.getAvailRunByOffset (1 samples, 0.04%)</title><rect x="1068.4" y="661" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="1071.35" y="671.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/DetachedCheckpointLogEntryWriter.writeCheckPointEntry (1 samples, 0.04%)</title><rect x="23.7" y="517" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="26.69" y="527.5" ></text>
</g>
<g >
<title>BacktraceBuilder::expand(Thread*) (31 samples, 1.33%)</title><rect x="62.2" y="581" width="15.7" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="65.21" y="591.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.closeSwapper (1 samples, 0.04%)</title><rect x="20.1" y="357" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="23.14" y="367.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1084.6" y="661" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1087.57" y="671.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (3 samples, 0.13%)</title><rect x="1134.2" y="933" width="1.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1137.24" y="943.5" ></text>
</g>
<g >
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.04%)</title><rect x="24.2" y="565" width="0.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="27.19" y="575.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="14.1" y="837" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="17.05" y="847.5" ></text>
</g>
<g >
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="373" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="27.19" y="383.5" ></text>
</g>
<g >
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1171.2" y="837" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1174.25" y="847.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/AllocateAndFree.allocateAndFree (2,054 samples, 88.23%)</title><rect x="29.8" y="853" width="1041.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="32.77" y="863.5" >com/abcde/bench/micro/benchmarks/cluster/raft/AllocateAndFree.allocateAndFree</text>
</g>
<g >
<title>io/netty/util/Recycler$DefaultHandle.recycle (16 samples, 0.69%)</title><rect x="1025.3" y="773" width="8.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1028.27" y="783.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stopAllDatabases (10 samples, 0.43%)</title><rect x="19.6" y="725" width="5.1" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="22.63" y="735.5" ></text>
</g>
<g >
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.04%)</title><rect x="39.9" y="629" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="42.91" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.04%)</title><rect x="17.1" y="821" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="20.10" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runPages (5 samples, 0.21%)</title><rect x="310.1" y="661" width="2.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="313.07" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.04%)</title><rect x="1102.3" y="581" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1105.31" y="591.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1168.2" y="757" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1171.20" y="767.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.09%)</title><rect x="1123.6" y="949" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1126.60" y="959.5" ></text>
</g>
<g >
<title>g1_post_barrier_slow (1 samples, 0.04%)</title><rect x="1073.9" y="837" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1076.93" y="847.5" ></text>
</g>
<g >
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1086.6" y="869" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1089.60" y="879.5" ></text>
</g>
<g >
<title>_block_invoke.modules (4 samples, 0.17%)</title><rect x="1177.3" y="901" width="2.1" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1180.33" y="911.5" ></text>
</g>
<g >
<title>__psynch_cvwait (3 samples, 0.13%)</title><rect x="1175.3" y="917" width="1.5" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="1178.30" y="927.5" ></text>
</g>
<g >
<title>G1Analytics::predict_object_copy_time_ms(unsigned long, bool) const (1 samples, 0.04%)</title><rect x="1130.2" y="885" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1133.19" y="895.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1172.3" y="901" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1175.26" y="911.5" ></text>
</g>
<g >
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1160.1" y="821" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1163.09" y="831.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (6 samples, 0.26%)</title><rect x="1118.0" y="933" width="3.1" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1121.02" y="943.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.siftUp (147 samples, 6.31%)</title><rect x="923.4" y="693" width="74.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="926.38" y="703.5" >java/uti..</text>
</g>
<g >
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1108.4" y="661" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1111.39" y="671.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.toInternal (6 samples, 0.26%)</title><rect x="527.0" y="613" width="3.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="530.01" y="623.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.close (1 samples, 0.04%)</title><rect x="19.6" y="437" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="22.63" y="447.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (2 samples, 0.09%)</title><rect x="567.6" y="645" width="1.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="570.56" y="655.5" ></text>
</g>
<g >
<title>Monitor::IUnlock(bool) (1 samples, 0.04%)</title><rect x="1133.2" y="917" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1136.23" y="927.5" ></text>
</g>
<g >
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="1102.3" y="565" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1105.31" y="575.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="1069.4" y="629" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1072.36" y="639.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.remove (1 samples, 0.04%)</title><rect x="1068.9" y="629" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1071.86" y="639.5" ></text>
</g>
<g >
<title>ObjectConstant::constant_value() const (1 samples, 0.04%)</title><rect x="1166.2" y="725" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1169.18" y="735.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun (1 samples, 0.04%)</title><rect x="1070.4" y="693" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1073.38" y="703.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.free (675 samples, 28.99%)</title><rect x="682.6" y="789" width="342.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="685.62" y="799.5" >io/netty/buffer/PoolArena.free</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.13%)</title><rect x="1161.1" y="885" width="1.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="1164.11" y="895.5" ></text>
</g>
<g >
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="567.1" y="501" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="570.05" y="511.5" ></text>
</g>
<g >
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.04%)</title><rect x="1171.8" y="853" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1174.75" y="863.5" ></text>
</g>
<g >
<title>java/lang/invoke/LambdaForm$DMH/257062385.invokeStatic (1 samples, 0.04%)</title><rect x="24.2" y="517" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="27.19" y="527.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.13%)</title><rect x="1125.1" y="885" width="1.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1128.12" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.13%)</title><rect x="1098.8" y="773" width="1.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1101.76" y="783.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$$Lambda$201/1773865473.apply (15 samples, 0.64%)</title><rect x="1101.3" y="741" width="7.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1104.30" y="751.5" ></text>
</g>
<g >
<title>DirectiveSet::should_inline(ciMethod*) (1 samples, 0.04%)</title><rect x="1166.7" y="725" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1169.68" y="735.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1098.3" y="757" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1101.26" y="767.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.04%)</title><rect x="24.2" y="581" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="27.19" y="591.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (3 samples, 0.13%)</title><rect x="1159.6" y="885" width="1.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1162.59" y="895.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="21.2" y="149" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="24.15" y="159.5" ></text>
</g>
<g >
<title>ObjArrayKlass::allocate(int, Thread*) (9 samples, 0.39%)</title><rect x="63.7" y="565" width="4.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="66.73" y="575.5" ></text>
</g>
<g >
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (2 samples, 0.09%)</title><rect x="112.9" y="597" width="1.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="115.90" y="607.5" ></text>
</g>
<g >
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) (1 samples, 0.04%)</title><rect x="1162.1" y="629" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1165.12" y="639.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.setCanonicalName (4 samples, 0.17%)</title><rect x="1105.9" y="581" width="2.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1108.86" y="591.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.indexOf (60 samples, 2.58%)</title><rect x="412.0" y="645" width="30.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="414.95" y="655.5" >ja..</text>
</g>
<g >
<title>java/lang/Thread.sleep (2 samples, 0.09%)</title><rect x="15.6" y="981" width="1.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="18.58" y="991.5" ></text>
</g>
<g >
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.04%)</title><rect x="13.5" y="933" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="16.55" y="943.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_jfr_sampler() (1 samples, 0.04%)</title><rect x="66.8" y="501" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="69.77" y="511.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1101.3" y="677" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1104.30" y="687.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/EditionModuleBackedAbstractBenchmark.benchmarkTearDown (14 samples, 0.60%)</title><rect x="17.6" y="837" width="7.1" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="20.60" y="847.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1127.7" y="789" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1130.65" y="799.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1173.3" y="869" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1176.27" y="879.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.indexOf (6 samples, 0.26%)</title><rect x="777.9" y="645" width="3.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="780.91" y="655.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (8 samples, 0.34%)</title><rect x="1020.7" y="741" width="4.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1023.70" y="751.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsField (1 samples, 0.04%)</title><rect x="1128.2" y="773" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1131.16" y="783.5" ></text>
</g>
<g >
<title>java/nio/ByteBuffer.allocateDirect (1 samples, 0.04%)</title><rect x="17.1" y="741" width="0.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="20.10" y="751.5" ></text>
</g>
<g >
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1162.6" y="885" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1165.63" y="895.5" ></text>
</g>
<g >
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.04%)</title><rect x="1162.1" y="597" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1165.12" y="607.5" ></text>
</g>
<g >
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.04%)</title><rect x="14.1" y="949" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="17.05" y="959.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.track0 (162 samples, 6.96%)</title><rect x="37.4" y="757" width="82.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="40.37" y="767.5" >io/netty/..</text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocateNormal (1 samples, 0.04%)</title><rect x="17.1" y="789" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="20.10" y="799.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ull&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.04%)</title><rect x="42.4" y="613" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="45.44" y="623.5" ></text>
</g>
<g >
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1167.2" y="661" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1170.19" y="671.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1101.3" y="613" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1104.30" y="623.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.09%)</title><rect x="1159.6" y="869" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1162.59" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runFirstBestFit (12 samples, 0.52%)</title><rect x="465.2" y="677" width="6.1" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="468.17" y="687.5" ></text>
</g>
<g >
<title>LinearScanWalker::activate_current() (1 samples, 0.04%)</title><rect x="1170.2" y="805" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1173.23" y="815.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.printf (1 samples, 0.04%)</title><rect x="1111.4" y="869" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1114.43" y="879.5" ></text>
</g>
<g >
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="661" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="20.60" y="671.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.hasNext (4 samples, 0.17%)</title><rect x="1114.0" y="949" width="2.0" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1116.97" y="959.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (8 samples, 0.34%)</title><rect x="614.2" y="773" width="4.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="617.19" y="783.5" ></text>
</g>
<g >
<title>PerfLongVariant::sample() (1 samples, 0.04%)</title><rect x="1180.4" y="949" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1183.37" y="959.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.04%)</title><rect x="1086.6" y="853" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1089.60" y="863.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (1 samples, 0.04%)</title><rect x="23.2" y="309" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="26.18" y="319.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.newChunk (1 samples, 0.04%)</title><rect x="17.1" y="773" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="20.10" y="783.5" ></text>
</g>
<g >
<title>Compilation::emit_lir() (3 samples, 0.13%)</title><rect x="1169.7" y="869" width="1.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1172.73" y="879.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (23 samples, 0.99%)</title><rect x="96.2" y="597" width="11.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="99.17" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapsePast (54 samples, 2.32%)</title><rect x="816.9" y="709" width="27.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="819.94" y="719.5" >i..</text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (4 samples, 0.17%)</title><rect x="40.4" y="629" width="2.0" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="43.41" y="639.5" ></text>
</g>
<g >
<title>CodeBlob::is_zombie() const (1 samples, 0.04%)</title><rect x="99.2" y="565" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="102.21" y="575.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="23.7" y="469" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="26.69" y="479.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="1127.7" y="725" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1130.65" y="735.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="14.1" y="853" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="17.05" y="863.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmarksForked (2 samples, 0.09%)</title><rect x="1127.7" y="1045" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1130.65" y="1055.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunkList.free (6 samples, 0.26%)</title><rect x="1067.8" y="725" width="3.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1070.84" y="735.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler.runIteration (2 samples, 0.09%)</title><rect x="1127.7" y="981" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1130.65" y="991.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapseNext (3 samples, 0.13%)</title><rect x="1068.4" y="677" width="1.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1071.35" y="687.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.put (84 samples, 3.61%)</title><rect x="850.4" y="693" width="42.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="853.40" y="703.5" >io/n..</text>
</g>
<g >
<title>EnableIf&lt;!(AccessInternal::MustConvertCompressedOop&lt;1097844ull, oopDesc*&gt;::value), oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::decode_internal&lt;1097844ull, oopDesc*&gt;(oopDesc*) (1 samples, 0.04%)</title><rect x="89.1" y="565" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="92.07" y="575.5" ></text>
</g>
<g >
<title>ScopeDesc::decode_body() (1 samples, 0.04%)</title><rect x="1173.3" y="885" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1176.27" y="895.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (2 samples, 0.09%)</title><rect x="18.1" y="629" width="1.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="21.11" y="639.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (13 samples, 0.56%)</title><rect x="1165.2" y="933" width="6.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1168.16" y="943.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pop (7 samples, 0.30%)</title><rect x="131.6" y="709" width="3.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="134.65" y="719.5" ></text>
</g>
<g >
<title>IndexSet::initialize(unsigned int) (1 samples, 0.04%)</title><rect x="1153.0" y="853" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1156.00" y="863.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (72 samples, 3.09%)</title><rect x="751.0" y="677" width="36.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="754.05" y="687.5" >io/..</text>
</g>
<g >
<title>org/apache/commons/io/file/DeletingPathVisitor.visitFile (2 samples, 0.09%)</title><rect x="18.1" y="693" width="1.0" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="21.11" y="703.5" ></text>
</g>
<g >
<title>VM_Operation::evaluate() (2 samples, 0.09%)</title><rect x="1179.4" y="949" width="1.0" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1182.36" y="959.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/IdGenerator$Delegate.close (2 samples, 0.09%)</title><rect x="21.2" y="405" width="1.0" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="24.15" y="415.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.04%)</title><rect x="99.7" y="549" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="102.72" y="559.5" ></text>
</g>
<g >
<title>sun/nio/fs/AbstractFileSystemProvider.delete (1 samples, 0.04%)</title><rect x="1086.1" y="549" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1089.09" y="559.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (1 samples, 0.04%)</title><rect x="1084.6" y="837" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1087.57" y="847.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.forEachDatabase (10 samples, 0.43%)</title><rect x="19.6" y="709" width="5.1" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="22.63" y="719.5" ></text>
</g>
<g >
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.04%)</title><rect x="1168.2" y="645" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1171.20" y="655.5" ></text>
</g>
<g >
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.04%)</title><rect x="1172.8" y="965" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="1175.77" y="975.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="72.3" y="501" width="0.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="75.35" y="511.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createUntypedSerializer (1 samples, 0.04%)</title><rect x="1128.2" y="597" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1131.16" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.recycle (17 samples, 0.73%)</title><rect x="1024.8" y="789" width="8.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1027.76" y="799.5" ></text>
</g>
<g >
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (1 samples, 0.04%)</title><rect x="14.1" y="917" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="17.05" y="927.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor$1.close (1 samples, 0.04%)</title><rect x="21.7" y="85" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="24.66" y="95.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (17 samples, 0.73%)</title><rect x="1181.4" y="965" width="8.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1184.38" y="975.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.freeChunk (635 samples, 27.28%)</title><rect x="684.1" y="773" width="321.9" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="687.14" y="783.5" >io/netty/buffer/PoolArena.freeChunk</text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (6 samples, 0.26%)</title><rect x="1165.7" y="821" width="3.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1168.67" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cache (9 samples, 0.39%)</title><rect x="1006.5" y="757" width="4.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1009.51" y="767.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (2 samples, 0.09%)</title><rect x="1127.7" y="997" width="1.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1130.65" y="1007.5" ></text>
</g>
<g >
<title>java/util/concurrent/TimeUnit.sleep (19 samples, 0.82%)</title><rect x="1088.6" y="901" width="9.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1091.63" y="911.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1105.4" y="517" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1108.35" y="527.5" ></text>
</g>
<g >
<title>java/nio/file/Files.getLastModifiedTime (1 samples, 0.04%)</title><rect x="1112.4" y="949" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1115.45" y="959.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (2 samples, 0.09%)</title><rect x="1161.6" y="693" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1164.62" y="703.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1104.8" y="549" width="0.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1107.85" y="559.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.close (2 samples, 0.09%)</title><rect x="21.2" y="309" width="1.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="24.15" y="319.5" ></text>
</g>
<g >
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.04%)</title><rect x="1127.7" y="693" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1130.65" y="703.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1173.8" y="949" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1176.78" y="959.5" ></text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine.flushAndForce (3 samples, 0.13%)</title><rect x="22.2" y="517" width="1.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="25.16" y="527.5" ></text>
</g>
<g >
<title>io/netty/buffer/SimpleLeakAwareByteBuf.release (14 samples, 0.60%)</title><rect x="1063.8" y="837" width="7.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1066.79" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (2 samples, 0.09%)</title><rect x="129.1" y="693" width="1.0" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="132.12" y="703.5" ></text>
</g>
<g >
<title>CallStaticJavaDirectNode::oper_input_base() const (1 samples, 0.04%)</title><rect x="1145.4" y="869" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1148.40" y="879.5" ></text>
</g>
<g >
<title>GrowableArray&lt;Interval*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.04%)</title><rect x="1170.7" y="805" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1173.74" y="815.5" ></text>
</g>
<g >
<title>__psynch_cvwait (4 samples, 0.17%)</title><rect x="1118.5" y="901" width="2.1" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1121.53" y="911.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="93.1" y="597" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="96.13" y="607.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/IdGenerator$Delegate.checkpoint (2 samples, 0.09%)</title><rect x="22.7" y="421" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="25.67" y="431.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.parkEvictor (21 samples, 0.90%)</title><rect x="1073.9" y="885" width="10.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1076.93" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.allocateDirect (1 samples, 0.04%)</title><rect x="17.1" y="757" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="20.10" y="767.5" ></text>
</g>
<g >
<title>com/sun/management/internal/PlatformMBeanProviderImpl$4.mbeanInterfaceNames (1 samples, 0.04%)</title><rect x="1101.8" y="629" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1104.80" y="639.5" ></text>
</g>
<g >
<title>Agent_OnAttach (1 samples, 0.04%)</title><rect x="1174.3" y="917" width="0.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1177.29" y="927.5" ></text>
</g>
<g >
<title>__block_descriptor_tmp (7 samples, 0.30%)</title><rect x="1137.8" y="965" width="3.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1140.79" y="975.5" ></text>
</g>
<g >
<title>sun/misc/Unsafe.putIntVolatile (1 samples, 0.04%)</title><rect x="20.1" y="325" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="23.14" y="335.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool$$Lambda$726/2106743111.call (76 samples, 3.26%)</title><rect x="1072.4" y="981" width="38.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1075.41" y="991.5" >org..</text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.04%)</title><rect x="1108.4" y="693" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1111.39" y="703.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (2 samples, 0.09%)</title><rect x="38.9" y="629" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="41.89" y="639.5" ></text>
</g>
<g >
<title>GrowableArray&lt;ciTypeFlow::JsrRecord*&gt;::GrowableArray(int, int, ciTypeFlow::JsrRecord* const&amp;, bool, MemoryType) (1 samples, 0.04%)</title><rect x="1141.8" y="805" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1144.85" y="815.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.04%)</title><rect x="1168.2" y="693" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1171.20" y="703.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.getAvailRunByOffset (36 samples, 1.55%)</title><rect x="731.3" y="693" width="18.2" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="734.28" y="703.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.04%)</title><rect x="1164.1" y="853" width="0.6" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1167.15" y="863.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (1 samples, 0.04%)</title><rect x="20.6" y="325" width="0.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="23.64" y="335.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1120.6" y="917" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1123.56" y="927.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/AsyncProfiler.onMeasurementFinished (2 samples, 0.09%)</title><rect x="1127.7" y="933" width="1.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1130.65" y="943.5" ></text>
</g>
<g >
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.04%)</title><rect x="1098.3" y="805" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1101.26" y="815.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.continuouslySweepPages (24 samples, 1.03%)</title><rect x="1072.4" y="917" width="12.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1075.41" y="927.5" ></text>
</g>
<g >
<title>StatSampler::collect_sample() (1 samples, 0.04%)</title><rect x="1180.4" y="965" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1183.37" y="975.5" ></text>
</g>
<g >
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="1102.3" y="645" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1105.31" y="655.5" ></text>
</g>
<g >
<title>os::is_MP() (1 samples, 0.04%)</title><rect x="1089.6" y="805" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1092.64" y="815.5" ></text>
</g>
<g >
<title>Parker::park(bool, long) (18 samples, 0.77%)</title><rect x="1074.9" y="821" width="9.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1077.94" y="831.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1141.3" y="981" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1144.34" y="991.5" ></text>
</g>
<g >
<title>Node_Array::map(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1160.6" y="853" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1163.60" y="863.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1105.4" y="469" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1108.35" y="479.5" ></text>
</g>
<g >
<title>java/lang/Thread.sleep (18 samples, 0.77%)</title><rect x="1089.1" y="869" width="9.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1092.13" y="879.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.04%)</title><rect x="1155.0" y="853" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1158.03" y="863.5" ></text>
</g>
<g >
<title>frame::sender_for_entry_frame(RegisterMap*) const (4 samples, 0.17%)</title><rect x="101.2" y="581" width="2.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="104.24" y="591.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.close (1 samples, 0.04%)</title><rect x="19.6" y="517" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="22.63" y="527.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="805" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="17.05" y="815.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (13 samples, 0.56%)</title><rect x="1165.2" y="901" width="6.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1168.16" y="911.5" ></text>
</g>
<g >
<title>WatcherThread::sleep() const (17 samples, 0.73%)</title><rect x="1181.4" y="981" width="8.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1184.38" y="991.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (7 samples, 0.30%)</title><rect x="1067.3" y="789" width="3.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1070.34" y="799.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (2 samples, 0.09%)</title><rect x="22.7" y="341" width="1.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="25.67" y="351.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (14 samples, 0.60%)</title><rect x="397.3" y="661" width="7.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="400.25" y="671.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="567.1" y="581" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="570.05" y="591.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/AsyncProfiler.stopAsync (2 samples, 0.09%)</title><rect x="1127.7" y="917" width="1.0" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1130.65" y="927.5" ></text>
</g>
<g >
<title>Matcher::xform(Node*, int) (2 samples, 0.09%)</title><rect x="1143.9" y="869" width="1.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1146.87" y="879.5" ></text>
</g>
<g >
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.04%)</title><rect x="1161.1" y="677" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.11" y="687.5" ></text>
</g>
<g >
<title>WatcherThread::run() (19 samples, 0.82%)</title><rect x="1180.4" y="997" width="9.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1183.37" y="1007.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="1135.8" y="949" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1138.76" y="959.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.doSingle (2 samples, 0.09%)</title><rect x="1127.7" y="1029" width="1.0" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1130.65" y="1039.5" ></text>
</g>
<g >
<title>java/nio/file/Files.isDirectory (1 samples, 0.04%)</title><rect x="1085.6" y="821" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1088.58" y="831.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool$$Lambda$727/1631388206.call (76 samples, 3.26%)</title><rect x="1072.4" y="1013" width="38.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1075.41" y="1023.5" >org..</text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.stop (10 samples, 0.43%)</title><rect x="19.6" y="757" width="5.1" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="22.63" y="767.5" ></text>
</g>
<g >
<title>IndexSet::clear() (1 samples, 0.04%)</title><rect x="1153.5" y="853" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1156.51" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.get (24 samples, 1.03%)</title><rect x="737.4" y="677" width="12.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="740.36" y="687.5" ></text>
</g>
<g >
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="837" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1114.94" y="847.5" ></text>
</g>
<g >
<title>Compilation::install_code(int) (1 samples, 0.04%)</title><rect x="1171.2" y="885" width="0.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1174.25" y="895.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._addCreators (1 samples, 0.04%)</title><rect x="1128.2" y="485" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1131.16" y="495.5" ></text>
</g>
<g >
<title>GraphBuilder::if_null(ValueType*, Instruction::Condition) (1 samples, 0.04%)</title><rect x="1166.2" y="773" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1169.18" y="783.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (10 samples, 0.43%)</title><rect x="805.8" y="693" width="5.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="808.79" y="703.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (2 samples, 0.09%)</title><rect x="14.6" y="981" width="1.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="17.56" y="991.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1084.6" y="613" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1087.57" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.04%)</title><rect x="23.7" y="389" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="26.69" y="399.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.stat (1 samples, 0.04%)</title><rect x="1085.6" y="789" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1088.58" y="799.5" ></text>
</g>
<g >
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.04%)</title><rect x="1123.6" y="933" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1126.60" y="943.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAllUnchecked (2 samples, 0.09%)</title><rect x="21.2" y="357" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="24.15" y="367.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (6 samples, 0.26%)</title><rect x="127.1" y="709" width="3.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="130.09" y="719.5" ></text>
</g>
<g >
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.04%)</title><rect x="13.5" y="949" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="16.55" y="959.5" ></text>
</g>
<g >
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.04%)</title><rect x="1171.2" y="869" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1174.25" y="879.5" ></text>
</g>
<g >
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.04%)</title><rect x="19.6" y="373" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="22.63" y="383.5" ></text>
</g>
<g >
<title>VMThread::run() (11 samples, 0.47%)</title><rect x="1174.8" y="997" width="5.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1177.79" y="1007.5" ></text>
</g>
<g >
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="1109.9" y="837" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1112.91" y="847.5" ></text>
</g>
<g >
<title>Unique_Node_List::pop() (1 samples, 0.04%)</title><rect x="1157.1" y="869" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1160.05" y="879.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="1123.6" y="965" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1126.60" y="975.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.siftUpComparable (143 samples, 6.14%)</title><rect x="925.4" y="677" width="72.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="928.41" y="687.5" >java/uti..</text>
</g>
<g >
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1084.6" y="773" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1087.57" y="783.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.computeChunkOffset (1 samples, 0.04%)</title><rect x="22.7" y="277" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="25.67" y="287.5" ></text>
</g>
<g >
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.04%)</title><rect x="1167.7" y="709" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1170.70" y="719.5" ></text>
</g>
<g >
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1144.9" y="805" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1147.89" y="815.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1086.1" y="725" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1089.09" y="735.5" ></text>
</g>
<g >
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1161.1" y="661" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1164.11" y="671.5" ></text>
</g>
<g >
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1151.5" y="853" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1154.48" y="863.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="1122.1" y="1029" width="1.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1125.08" y="1039.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="24.2" y="293" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="27.19" y="303.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (160 samples, 6.87%)</title><rect x="130.1" y="741" width="81.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="133.13" y="751.5" >io/netty/..</text>
</g>
<g >
<title>org/abcde/internal/id/BufferingIdGenerator.close (2 samples, 0.09%)</title><rect x="21.2" y="421" width="1.0" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="24.15" y="431.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (1 samples, 0.04%)</title><rect x="19.6" y="405" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="22.63" y="415.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="67.8" y="501" width="0.5" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="70.78" y="511.5" ></text>
</g>
<g >
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1127.7" y="773" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1130.65" y="783.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (9 samples, 0.39%)</title><rect x="563.0" y="661" width="4.6" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="566.00" y="671.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (2 samples, 0.09%)</title><rect x="1068.9" y="645" width="1.0" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="1071.86" y="655.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.run (46 samples, 1.98%)</title><rect x="1087.6" y="933" width="23.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1090.61" y="943.5" >o..</text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapseNext (182 samples, 7.82%)</title><rect x="724.7" y="709" width="92.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="727.69" y="719.5" >io/netty/bu..</text>
</g>
<g >
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.04%)</title><rect x="1174.3" y="933" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1177.29" y="943.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (3 samples, 0.13%)</title><rect x="1161.1" y="773" width="1.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1164.11" y="783.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory.getPlatformMXBeans (23 samples, 0.99%)</title><rect x="1098.3" y="869" width="11.6" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1101.26" y="879.5" ></text>
</g>
<g >
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="565" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1130.65" y="575.5" ></text>
</g>
<g >
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1142.4" y="725" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1145.35" y="735.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.17%)</title><rect x="104.8" y="549" width="2.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="107.79" y="559.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (33 samples, 1.42%)</title><rect x="597.5" y="757" width="16.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="600.47" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.reuse (6 samples, 0.26%)</title><rect x="127.1" y="741" width="3.0" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="130.09" y="751.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.force (1 samples, 0.04%)</title><rect x="23.2" y="277" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="26.18" y="287.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.getAvailRunByOffset (49 samples, 2.10%)</title><rect x="818.5" y="693" width="24.8" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="821.46" y="703.5" >i..</text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_opendir0 (2 samples, 0.09%)</title><rect x="1113.0" y="885" width="1.0" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="1115.96" y="895.5" ></text>
</g>
<g >
<title>MethodMatcher::match(Symbol*, Symbol*, MethodMatcher::Mode) const (1 samples, 0.04%)</title><rect x="1161.6" y="549" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1164.62" y="559.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.lambda$flush$0 (2 samples, 0.09%)</title><rect x="22.7" y="453" width="1.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="25.67" y="463.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (4 samples, 0.17%)</title><rect x="89.6" y="565" width="2.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="92.58" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (2 samples, 0.09%)</title><rect x="843.3" y="693" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="846.30" y="703.5" ></text>
</g>
<g >
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.04%)</title><rect x="41.9" y="581" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="44.93" y="591.5" ></text>
</g>
<g >
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.04%)</title><rect x="1169.2" y="805" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1172.22" y="815.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.initialValue (3 samples, 0.13%)</title><rect x="127.6" y="693" width="1.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="130.59" y="703.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.close (1 samples, 0.04%)</title><rect x="19.6" y="533" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="22.63" y="543.5" ></text>
</g>
<g >
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1150.0" y="837" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1152.96" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (179 samples, 7.69%)</title><rect x="120.5" y="773" width="90.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="123.50" y="783.5" >io/netty/b..</text>
</g>
<g >
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1168.2" y="597" width="0.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="1171.20" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAllUnchecked (2 samples, 0.09%)</title><rect x="21.2" y="373" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="24.15" y="383.5" ></text>
</g>
<g >
<title>java/nio/file/Files.deleteIfExists (2 samples, 0.09%)</title><rect x="18.1" y="661" width="1.0" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="21.11" y="671.5" ></text>
</g>
<g >
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1153.5" y="869" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1156.51" y="879.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifecycleAdapter$5.shutdown (1 samples, 0.04%)</title><rect x="19.1" y="773" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="22.12" y="783.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DefaultDatabaseManager.stopDatabase (10 samples, 0.43%)</title><rect x="19.6" y="661" width="5.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="22.63" y="671.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.lambda$profile$3 (1 samples, 0.04%)</title><rect x="1086.1" y="677" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1089.09" y="687.5" ></text>
</g>
<g >
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1144.9" y="789" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1147.89" y="799.5" ></text>
</g>
<g >
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="1171.8" y="837" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1174.75" y="847.5" ></text>
</g>
<g >
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1171.8" y="901" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1174.75" y="911.5" ></text>
</g>
<g >
<title>sun/management/spi/PlatformMBeanProvider$PlatformComponent.getMBeans (14 samples, 0.60%)</title><rect x="1101.8" y="709" width="7.1" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="1104.80" y="719.5" ></text>
</g>
<g >
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="1126.6" y="917" width="0.5" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1129.64" y="927.5" ></text>
</g>
<g >
<title>java/nio/file/Files.newDirectoryStream (2 samples, 0.09%)</title><rect x="1113.0" y="949" width="1.0" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="1115.96" y="959.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.04%)</title><rect x="1179.9" y="837" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="1182.86" y="847.5" ></text>
</g>
<g >
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="567.1" y="517" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="570.05" y="527.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.04%)</title><rect x="1066.3" y="725" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1069.32" y="735.5" ></text>
</g>
<g >
<title>java/util/Collections$SetFromMap.add (10 samples, 0.43%)</title><rect x="109.3" y="725" width="5.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="112.35" y="735.5" ></text>
</g>
<g >
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.04%)</title><rect x="1172.8" y="949" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1175.77" y="959.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapseNext (4 samples, 0.17%)</title><rect x="1000.4" y="709" width="2.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1003.43" y="719.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="16.6" y="981" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="19.59" y="991.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,159 samples, 49.79%)</title><rect x="30.8" y="837" width="587.4" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="33.78" y="847.5" >io/netty/buffer/AbstractByteBufAllocator.directBuffer</text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink0 (2 samples, 0.09%)</title><rect x="18.1" y="597" width="1.0" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="21.11" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.collapseRuns (246 samples, 10.57%)</title><rect x="720.1" y="725" width="124.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="723.13" y="735.5" >io/netty/buffer..</text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores$$Lambda$1203/431333268.accept (2 samples, 0.09%)</title><rect x="22.7" y="469" width="1.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="25.67" y="479.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.13%)</title><rect x="101.7" y="549" width="1.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="104.74" y="559.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxCompute (4 samples, 0.17%)</title><rect x="530.1" y="629" width="2.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="533.05" y="639.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.release (55 samples, 2.36%)</title><rect x="1033.4" y="821" width="27.9" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1036.38" y="831.5" >i..</text>
</g>
<g >
<title>Unique_Node_List::pop() (1 samples, 0.04%)</title><rect x="1160.6" y="869" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1163.60" y="879.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.6" y="821" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1160.56" y="831.5" ></text>
</g>
<g >
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="95.7" y="597" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="98.66" y="607.5" ></text>
</g>
<g >
<title>GraphBuilder::build_graph_for_intrinsic(ciMethod*, bool) (1 samples, 0.04%)</title><rect x="1167.7" y="725" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1170.70" y="735.5" ></text>
</g>
<g >
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.04%)</title><rect x="1156.5" y="757" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1159.55" y="767.5" ></text>
</g>
<g >
<title>Compilation::emit_code_body() (2 samples, 0.09%)</title><rect x="1168.7" y="869" width="1.0" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1171.71" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (111 samples, 4.77%)</title><rect x="749.5" y="693" width="56.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="752.53" y="703.5" >io/ne..</text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.track (162 samples, 6.96%)</title><rect x="37.4" y="773" width="82.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="40.37" y="783.5" >io/netty/..</text>
</g>
<g >
<title>IntervalWalker::walk_to(int) (2 samples, 0.09%)</title><rect x="1169.7" y="821" width="1.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1172.73" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="14.1" y="677" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="17.05" y="687.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor.close0 (1 samples, 0.04%)</title><rect x="21.7" y="53" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="24.66" y="63.5" ></text>
</g>
<g >
<title>Method::result_type() const (1 samples, 0.04%)</title><rect x="16.6" y="949" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="19.59" y="959.5" ></text>
</g>
<g >
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 0.04%)</title><rect x="1111.9" y="773" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1114.94" y="783.5" ></text>
</g>
<g >
<title>RegisterHumongousWithInCSetFastTestClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1179.4" y="885" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1182.36" y="895.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.doClose (1 samples, 0.04%)</title><rect x="19.6" y="549" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="22.63" y="559.5" ></text>
</g>
<g >
<title>PhaseCFG::global_code_motion() (1 samples, 0.04%)</title><rect x="1144.9" y="869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1147.89" y="879.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2,080 samples, 89.35%)</title><rect x="17.6" y="933" width="1054.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="20.60" y="943.5" >jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1086.1" y="789" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1089.09" y="799.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.04%)</title><rect x="1087.1" y="853" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1090.10" y="863.5" ></text>
</g>
<g >
<title>frame::interpreter_frame_bcp() const (1 samples, 0.04%)</title><rect x="95.2" y="597" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="98.15" y="607.5" ></text>
</g>
<g >
<title>sun/management/Util.newObjectName (10 samples, 0.43%)</title><rect x="1103.3" y="645" width="5.1" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1106.32" y="655.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (1 samples, 0.04%)</title><rect x="17.1" y="981" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="20.10" y="991.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.04%)</title><rect x="1084.6" y="693" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1087.57" y="703.5" ></text>
</g>
<g >
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1084.6" y="629" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1087.57" y="639.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.close (2 samples, 0.09%)</title><rect x="20.1" y="405" width="1.1" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="23.14" y="415.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="110.9" y="629" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="113.87" y="639.5" ></text>
</g>
<g >
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1171.8" y="885" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1174.75" y="895.5" ></text>
</g>
<g >
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1102.3" y="597" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="1105.31" y="607.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.deleteDirectory (3 samples, 0.13%)</title><rect x="17.6" y="821" width="1.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="20.60" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.free (6 samples, 0.26%)</title><rect x="1067.8" y="709" width="3.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1070.84" y="719.5" ></text>
</g>
<g >
<title>CompileTask::print(outputStream*, char const*, bool, bool) (3 samples, 0.13%)</title><rect x="1163.6" y="917" width="1.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1166.64" y="927.5" ></text>
</g>
<g >
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1127.7" y="485" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1130.65" y="495.5" ></text>
</g>
<g >
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1142.4" y="741" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1145.35" y="751.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ull&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="1106.4" y="405" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1109.37" y="415.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._createSerializer2 (1 samples, 0.04%)</title><rect x="1128.2" y="565" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1131.16" y="575.5" ></text>
</g>
<g >
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1142.4" y="709" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1145.35" y="719.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="110.9" y="613" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="113.87" y="623.5" ></text>
</g>
<g >
<title>__gettimeofday (1 samples, 0.04%)</title><rect x="15.6" y="917" width="0.5" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="18.58" y="927.5" ></text>
</g>
<g >
<title>free_medium (1 samples, 0.04%)</title><rect x="19.1" y="677" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="22.12" y="687.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1073.4" y="885" width="0.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1076.42" y="895.5" ></text>
</g>
<g >
<title>SafepointBlob (1 samples, 0.04%)</title><rect x="11.0" y="1061" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="14.01" y="1071.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1101.3" y="661" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1104.30" y="671.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.unmap (2 samples, 0.09%)</title><rect x="21.2" y="245" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="24.15" y="255.5" ></text>
</g>
<g >
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1142.4" y="789" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1145.35" y="799.5" ></text>
</g>
<g >
<title>BacktraceBuilder::push(Method*, int, Thread*) (30 samples, 1.29%)</title><rect x="77.9" y="597" width="15.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="80.92" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.04%)</title><rect x="17.1" y="837" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="20.10" y="847.5" ></text>
</g>
<g >
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.04%)</title><rect x="1108.4" y="597" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1111.39" y="607.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/SelectedSelectionKeySetSelector.selectNow (1 samples, 0.04%)</title><rect x="14.1" y="965" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="17.05" y="975.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.offer (61 samples, 2.62%)</title><rect x="532.1" y="645" width="30.9" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="535.08" y="655.5" >ja..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="14.1" y="693" width="0.5" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="17.05" y="703.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache.flushAndForce (1 samples, 0.04%)</title><rect x="22.2" y="485" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="25.16" y="495.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (65 samples, 2.79%)</title><rect x="1141.8" y="981" width="33.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1144.85" y="991.5" >Ja..</text>
</g>
<g >
<title>java/lang/management/ManagementFactory.lambda$getPlatformMXBeans$3 (15 samples, 0.64%)</title><rect x="1101.3" y="725" width="7.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1104.30" y="735.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckPointerImpl.doCheckPoint (4 samples, 0.17%)</title><rect x="22.2" y="549" width="2.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="25.16" y="559.5" ></text>
</g>
<g >
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.04%)</title><rect x="21.7" y="165" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="24.66" y="175.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1116.5" y="965" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1119.50" y="975.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (1 samples, 0.04%)</title><rect x="22.2" y="437" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="25.16" y="447.5" ></text>
</g>
<g >
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1144.4" y="805" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1147.38" y="815.5" ></text>
</g>
<g >
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.04%)</title><rect x="1105.4" y="357" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1108.35" y="367.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.scheduleDueTasks (8 samples, 0.34%)</title><rect x="1123.6" y="1029" width="4.1" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1126.60" y="1039.5" ></text>
</g>
<g >
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.04%)</title><rect x="1162.6" y="901" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1165.63" y="911.5" ></text>
</g>
<g >
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1168.2" y="677" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1171.20" y="687.5" ></text>
</g>
<g >
<title>__vfprintf (1 samples, 0.04%)</title><rect x="17.6" y="485" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="20.60" y="495.5" ></text>
</g>
<g >
<title>Unsafe_DefineAnonymousClass_impl(JNIEnv_*, _jclass*, _jbyteArray*, _jobjectArray*, unsigned char**, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="405" width="0.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="27.19" y="415.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1144.4" y="789" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1147.38" y="799.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.force (1 samples, 0.04%)</title><rect x="20.6" y="293" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="23.64" y="303.5" ></text>
</g>
<g >
<title>Method::bci_from(unsigned char*) const (2 samples, 0.09%)</title><rect x="93.6" y="597" width="1.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="96.63" y="607.5" ></text>
</g>
<g >
<title>Matcher::match() (3 samples, 0.13%)</title><rect x="1143.4" y="885" width="1.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1146.37" y="895.5" ></text>
</g>
<g >
<title>thread_start (121 samples, 5.20%)</title><rect x="1128.7" y="1077" width="61.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="1131.67" y="1087.5" >thread..</text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.13%)</title><rect x="1161.1" y="821" width="1.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1164.11" y="831.5" ></text>
</g>
<g >
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="613" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="20.60" y="623.5" ></text>
</g>
<g >
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="1117.0" y="965" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1120.01" y="975.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1136.8" y="917" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1139.78" y="927.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.flushAndCloseWithoutFail (2 samples, 0.09%)</title><rect x="21.2" y="229" width="1.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="24.15" y="239.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.flushAndCloseWithoutFail (1 samples, 0.04%)</title><rect x="19.6" y="485" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="22.63" y="495.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (141 samples, 6.06%)</title><rect x="37.9" y="677" width="71.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="40.88" y="687.5" >java/lan..</text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="14.1" y="725" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="17.05" y="735.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.unmap (1 samples, 0.04%)</title><rect x="19.6" y="501" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="22.63" y="511.5" ></text>
</g>
<g >
<title>JVM_IHashCode (8 samples, 0.34%)</title><rect x="109.9" y="661" width="4.0" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="112.85" y="671.5" ></text>
</g>
<g >
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.04%)</title><rect x="1173.3" y="901" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1176.27" y="911.5" ></text>
</g>
<g >
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.13%)</title><rect x="1098.8" y="805" width="1.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1101.76" y="815.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/util/collection/CachingOffHeapBlockAllocator.release (1 samples, 0.04%)</title><rect x="19.1" y="725" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="22.12" y="735.5" ></text>
</g>
<g >
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1160.1" y="853" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1163.09" y="863.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (2 samples, 0.09%)</title><rect x="1127.7" y="837" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1130.65" y="847.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.indexOf (24 samples, 1.03%)</title><rect x="737.4" y="661" width="12.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="740.36" y="671.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1 samples, 0.04%)</title><rect x="17.1" y="965" width="0.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="20.10" y="975.5" ></text>
</g>
<g >
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1105.4" y="581" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1108.35" y="591.5" ></text>
</g>
<g >
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (1 samples, 0.04%)</title><rect x="1173.3" y="917" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1176.27" y="927.5" ></text>
</g>
<g >
<title>sun/nio/fs/PollingWatchService$PollingWatchKey.poll (8 samples, 0.34%)</title><rect x="1111.9" y="965" width="4.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1114.94" y="975.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (121 samples, 5.20%)</title><rect x="1128.7" y="1029" width="61.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1131.67" y="1039.5" >thread..</text>
</g>
<g >
<title>org/abcde/io/fs/DefaultFileSystemAbstraction.deleteFile (1 samples, 0.04%)</title><rect x="1086.1" y="645" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1089.09" y="655.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor.confirmShutdown (4 samples, 0.17%)</title><rect x="14.6" y="997" width="2.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="17.56" y="1007.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1171.2" y="821" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1174.25" y="831.5" ></text>
</g>
<g >
<title>Thread::call_run() (121 samples, 5.20%)</title><rect x="1128.7" y="1013" width="61.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1131.67" y="1023.5" >Thread..</text>
</g>
<g >
<title>java/io/FileDescriptor.close (1 samples, 0.04%)</title><rect x="21.7" y="69" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="24.66" y="79.5" ></text>
</g>
<g >
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1142.4" y="821" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1145.35" y="831.5" ></text>
</g>
<g >
<title>Compile::Output() (1 samples, 0.04%)</title><rect x="1142.9" y="885" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1145.86" y="895.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.flushAndCloseWithoutFail (2 samples, 0.09%)</title><rect x="20.1" y="373" width="1.1" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="23.14" y="383.5" ></text>
</g>
<g >
<title>JavaThread::run() (65 samples, 2.79%)</title><rect x="1141.8" y="997" width="33.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1144.85" y="1007.5" >Ja..</text>
</g>
<g >
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.04%)</title><rect x="1173.3" y="933" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1176.27" y="943.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.lastPage (3 samples, 0.13%)</title><rect x="893.0" y="709" width="1.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="895.97" y="719.5" ></text>
</g>
<g >
<title>rcmd_af.canonnamebuf (2 samples, 0.09%)</title><rect x="1113.0" y="869" width="1.0" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1115.96" y="879.5" ></text>
</g>
<g >
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.04%)</title><rect x="1142.9" y="853" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1145.86" y="863.5" ></text>
</g>
<g >
<title>Java_java_lang_Throwable_fillInStackTrace (140 samples, 6.01%)</title><rect x="38.4" y="661" width="70.9" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="41.38" y="671.5" >Java_jav..</text>
</g>
<g >
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.17%)</title><rect x="1150.5" y="869" width="2.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1153.46" y="879.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.04%)</title><rect x="23.7" y="325" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="26.69" y="335.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.17%)</title><rect x="66.3" y="549" width="2.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="69.26" y="559.5" ></text>
</g>
<g >
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="24.2" y="277" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="27.19" y="287.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1142.4" y="805" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1145.35" y="815.5" ></text>
</g>
<g >
<title>java/util/concurrent/AbstractExecutorService.submit (3 samples, 0.13%)</title><rect x="1125.1" y="965" width="1.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1128.12" y="975.5" ></text>
</g>
<g >
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1161.1" y="709" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1164.11" y="719.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="821" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="17.05" y="831.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1127.7" y="501" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1130.65" y="511.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (19 samples, 0.82%)</title><rect x="1074.9" y="837" width="9.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1077.94" y="847.5" ></text>
</g>
<g >
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.04%)</title><rect x="1171.8" y="869" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1174.75" y="879.5" ></text>
</g>
<g >
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.04%)</title><rect x="1147.9" y="853" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1150.93" y="863.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.close (2 samples, 0.09%)</title><rect x="20.1" y="421" width="1.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="23.14" y="431.5" ></text>
</g>
<g >
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="597" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="20.60" y="607.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer._findSerializer (1 samples, 0.04%)</title><rect x="1128.2" y="677" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1131.16" y="687.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle.lambda$new$0 (6 samples, 0.26%)</title><rect x="1084.6" y="933" width="3.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="1087.57" y="943.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.collectAll (1 samples, 0.04%)</title><rect x="1128.2" y="501" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1131.16" y="511.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="1158.6" y="853" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1161.57" y="863.5" ></text>
</g>
<g >
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (4 samples, 0.17%)</title><rect x="1177.3" y="933" width="2.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1180.33" y="943.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (152 samples, 6.53%)</title><rect x="37.4" y="741" width="77.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="40.37" y="751.5" >io/netty..</text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.04%)</title><rect x="1109.9" y="853" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1112.91" y="863.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.remove (120 samples, 5.15%)</title><rect x="404.3" y="661" width="60.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="407.35" y="671.5" >java/u..</text>
</g>
<g >
<title>Parse::do_all_blocks() (3 samples, 0.13%)</title><rect x="1161.1" y="869" width="1.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1164.11" y="879.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/indexed/IndexedIdGenerator.checkpoint (2 samples, 0.09%)</title><rect x="22.7" y="405" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="25.67" y="415.5" ></text>
</g>
<g >
<title>TypeInt::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1156.5" y="805" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1159.55" y="815.5" ></text>
</g>
<g >
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="1102.3" y="549" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1105.31" y="559.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor$$Lambda$725/1535068379.run (46 samples, 1.98%)</title><rect x="1087.6" y="949" width="23.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1090.61" y="959.5" >o..</text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (7 samples, 0.30%)</title><rect x="73.4" y="501" width="3.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="76.36" y="511.5" ></text>
</g>
<g >
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.04%)</title><rect x="24.2" y="501" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="27.19" y="511.5" ></text>
</g>
<g >
<title>jio_vsnprintf (1 samples, 0.04%)</title><rect x="17.6" y="565" width="0.5" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="20.60" y="575.5" ></text>
</g>
<g >
<title>_pthread_body (121 samples, 5.20%)</title><rect x="1128.7" y="1045" width="61.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1131.67" y="1055.5" >_pthre..</text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.newDirectoryStream (2 samples, 0.09%)</title><rect x="1113.0" y="933" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1115.96" y="943.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ull&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="1167.2" y="613" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1170.19" y="623.5" ></text>
</g>
<g >
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.04%)</title><rect x="24.2" y="485" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="27.19" y="495.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1171.8" y="773" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1174.75" y="783.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabaseManagementServiceImpl.shutdown (11 samples, 0.47%)</title><rect x="19.1" y="821" width="5.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="22.12" y="831.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="61.7" y="565" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="64.70" y="575.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (11 samples, 0.47%)</title><rect x="11.5" y="1061" width="5.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="14.52" y="1071.5" ></text>
</g>
<g >
<title>CardTable::clear(MemRegion) (1 samples, 0.04%)</title><rect x="1135.8" y="965" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1138.76" y="975.5" ></text>
</g>
<g >
<title>CodeBuffer::free_blob() (1 samples, 0.04%)</title><rect x="1163.1" y="885" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1166.14" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (5 samples, 0.21%)</title><rect x="734.8" y="677" width="2.6" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="737.83" y="687.5" ></text>
</g>
<g >
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.04%)</title><rect x="24.2" y="533" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="27.19" y="543.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.free (6 samples, 0.26%)</title><rect x="1067.8" y="757" width="3.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1070.84" y="767.5" ></text>
</g>
<g >
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1168.7" y="821" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1171.71" y="831.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,178 samples, 93.56%)</title><rect x="17.1" y="1045" width="1104.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="20.10" y="1055.5" >java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g >
<title>os::sleep(Thread*, long, bool) (2 samples, 0.09%)</title><rect x="15.6" y="949" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="18.58" y="959.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.04%)</title><rect x="1127.7" y="661" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1130.65" y="671.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1086.1" y="837" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1089.09" y="847.5" ></text>
</g>
<g >
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (4 samples, 0.17%)</title><rect x="1131.2" y="885" width="2.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1134.20" y="895.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.tryFinalRelease0 (52 samples, 2.23%)</title><rect x="1034.9" y="805" width="26.4" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1037.90" y="815.5" >i..</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (2 samples, 0.09%)</title><rect x="1127.7" y="869" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1130.65" y="879.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="62.7" y="565" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="65.71" y="575.5" ></text>
</g>
<g >
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.04%)</title><rect x="17.6" y="693" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="20.60" y="703.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1105.4" y="533" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1108.35" y="543.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.reportGauge (1 samples, 0.04%)</title><rect x="1111.4" y="917" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1114.43" y="927.5" ></text>
</g>
<g >
<title>CompiledMethod::is_compiled() const (1 samples, 0.04%)</title><rect x="42.9" y="613" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="45.95" y="623.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.04%)</title><rect x="1158.6" y="837" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1161.57" y="847.5" ></text>
</g>
<g >
<title>Klass::klass_holder() const (1 samples, 0.04%)</title><rect x="1104.3" y="581" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1107.34" y="591.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.closeAll (1 samples, 0.04%)</title><rect x="14.1" y="997" width="0.5" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="17.05" y="1007.5" ></text>
</g>
<g >
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (52 samples, 2.23%)</title><rect x="1034.9" y="789" width="26.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1037.90" y="799.5" >j..</text>
</g>
<g >
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.04%)</title><rect x="113.4" y="565" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="116.40" y="575.5" ></text>
</g>
<g >
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1167.2" y="645" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1170.19" y="655.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (3 samples, 0.13%)</title><rect x="99.7" y="565" width="1.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="102.72" y="575.5" ></text>
</g>
<g >
<title>StatSamplerTask::task() (1 samples, 0.04%)</title><rect x="1180.9" y="981" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1183.88" y="991.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.removeAvailRun (2 samples, 0.09%)</title><rect x="1068.9" y="661" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1071.86" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="14.1" y="709" width="0.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="17.05" y="719.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.createSerializer (1 samples, 0.04%)</title><rect x="1128.2" y="581" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1131.16" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/SimpleLeakAwareByteBuf.closeLeak (6 samples, 0.26%)</title><rect x="1064.3" y="821" width="3.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1067.30" y="831.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (11 samples, 0.47%)</title><rect x="1128.7" y="965" width="5.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1131.67" y="975.5" ></text>
</g>
<g >
<title>nmethod::oops_do_marking_prologue() (1 samples, 0.04%)</title><rect x="1176.8" y="917" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1179.82" y="927.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1105.4" y="485" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1108.35" y="495.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::run_service() (14 samples, 0.60%)</title><rect x="1128.7" y="981" width="7.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1131.67" y="991.5" ></text>
</g>
<g >
<title>java_lang_String::equals(oopDesc*, unsigned short*, int) (1 samples, 0.04%)</title><rect x="1106.4" y="421" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1109.37" y="431.5" ></text>
</g>
<g >
<title>ciMethod::get_flow_analysis() (2 samples, 0.09%)</title><rect x="1141.8" y="869" width="1.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1144.85" y="879.5" ></text>
</g>
<g >
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="1105.4" y="405" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1108.35" y="415.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="1124.1" y="933" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1127.11" y="943.5" ></text>
</g>
<g >
<title>java/lang/Thread.run (2,202 samples, 94.59%)</title><rect x="11.5" y="1077" width="1116.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="14.52" y="1087.5" >java/lang/Thread.run</text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.13%)</title><rect x="1166.7" y="757" width="1.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1169.68" y="767.5" ></text>
</g>
<g >
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 0.04%)</title><rect x="1174.3" y="869" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1177.29" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.allocateRun (729 samples, 31.31%)</title><rect x="221.4" y="693" width="369.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="224.37" y="703.5" >io/netty/buffer/PoolChunk.allocateRun</text>
</g>
<g >
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.04%)</title><rect x="1143.9" y="853" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1146.87" y="863.5" ></text>
</g>
<g >
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1111.9" y="805" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1114.94" y="815.5" ></text>
</g>
<g >
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.04%)</title><rect x="567.1" y="485" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="570.05" y="495.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.profile (3 samples, 0.13%)</title><rect x="1085.1" y="869" width="1.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1088.08" y="879.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeTypedFields (1 samples, 0.04%)</title><rect x="1128.2" y="693" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1131.16" y="703.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.04%)</title><rect x="1169.2" y="789" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1172.22" y="799.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.04%)</title><rect x="24.2" y="597" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="27.19" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.close (1 samples, 0.04%)</title><rect x="19.6" y="453" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="22.63" y="463.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (124 samples, 5.33%)</title><rect x="46.0" y="613" width="62.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="48.99" y="623.5" >java_l..</text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="100.2" y="549" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="103.22" y="559.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (1 samples, 0.04%)</title><rect x="108.8" y="645" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="111.84" y="655.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.13%)</title><rect x="1161.1" y="805" width="1.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1164.11" y="815.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (3 samples, 0.13%)</title><rect x="66.8" y="533" width="1.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="69.77" y="543.5" ></text>
</g>
<g >
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (6 samples, 0.26%)</title><rect x="1165.7" y="837" width="3.0" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1168.67" y="847.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1105.4" y="549" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1108.35" y="559.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.collect (19 samples, 0.82%)</title><rect x="1100.3" y="853" width="9.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1103.28" y="863.5" ></text>
</g>
<g >
<title>SafepointMechanism::local_poll_armed(JavaThread*) (2 samples, 0.09%)</title><rect x="112.9" y="613" width="1.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="115.90" y="623.5" ></text>
</g>
<g >
<title>java/nio/file/Files.delete (1 samples, 0.04%)</title><rect x="1086.1" y="565" width="0.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="1089.09" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.free (625 samples, 26.85%)</title><rect x="689.2" y="741" width="316.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="692.21" y="751.5" >io/netty/buffer/PoolChunk.free</text>
</g>
<g >
<title>stat64 (1 samples, 0.04%)</title><rect x="23.7" y="309" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="26.69" y="319.5" ></text>
</g>
<g >
<title>Symbol::as_quoted_ascii() const (1 samples, 0.04%)</title><rect x="1163.6" y="853" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1166.64" y="863.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.13%)</title><rect x="110.4" y="645" width="1.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="113.36" y="655.5" ></text>
</g>
<g >
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.04%)</title><rect x="24.2" y="549" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="27.19" y="559.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.13%)</title><rect x="1161.1" y="901" width="1.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1164.11" y="911.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 1.85%)</title><rect x="1141.8" y="933" width="21.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1144.85" y="943.5" >C..</text>
</g>
<g >
<title>org/abcde/io/fs/DefaultFileSystemAbstraction.mkdirs (1 samples, 0.04%)</title><rect x="1085.6" y="837" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1088.58" y="847.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.visitFileTree (3 samples, 0.13%)</title><rect x="17.6" y="741" width="1.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="20.60" y="751.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findSerializerByAnnotations (1 samples, 0.04%)</title><rect x="1128.2" y="549" width="0.5" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="1131.16" y="559.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (1 samples, 0.04%)</title><rect x="22.2" y="421" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="25.16" y="431.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.13%)</title><rect x="1098.8" y="741" width="1.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1101.76" y="751.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (11 samples, 0.47%)</title><rect x="19.1" y="805" width="5.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="22.12" y="815.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.force (1 samples, 0.04%)</title><rect x="23.2" y="261" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="26.18" y="271.5" ></text>
</g>
<g >
<title>Copy::fill_to_memory_atomic(void*, unsigned long, unsigned char) (1 samples, 0.04%)</title><rect x="17.1" y="645" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="20.10" y="655.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.04%)</title><rect x="1086.1" y="709" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1089.09" y="719.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.lambda$extractRelevantProfiles$6 (1 samples, 0.04%)</title><rect x="1084.6" y="581" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1087.57" y="591.5" ></text>
</g>
<g >
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1144.9" y="773" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1147.89" y="783.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="1116.5" y="949" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1119.50" y="959.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.04%)</title><rect x="1127.7" y="709" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1130.65" y="719.5" ></text>
</g>
<g >
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.04%)</title><rect x="1145.9" y="869" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1148.90" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,159 samples, 49.79%)</title><rect x="30.8" y="821" width="587.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="33.78" y="831.5" >io/netty/buffer/AbstractByteBufAllocator.directBuffer</text>
</g>
<g >
<title>OrderAccess::fence() (2 samples, 0.09%)</title><rect x="111.9" y="645" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="114.88" y="655.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="341" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="27.19" y="351.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.submit (5 samples, 0.21%)</title><rect x="1124.6" y="981" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1127.61" y="991.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (2 samples, 0.09%)</title><rect x="112.9" y="645" width="1.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="115.90" y="655.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="1171.2" y="805" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1174.25" y="815.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/Logger.isEnabled (1 samples, 0.04%)</title><rect x="134.7" y="693" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="137.69" y="703.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/indexed/IndexedIdGenerator.close (2 samples, 0.09%)</title><rect x="21.2" y="389" width="1.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="24.15" y="399.5" ></text>
</g>
<g >
<title>org/abcde/kernel/database/Database.stop (10 samples, 0.43%)</title><rect x="19.6" y="629" width="5.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="22.63" y="639.5" ></text>
</g>
<g >
<title>SafepointSynchronize::do_cleanup_tasks() (5 samples, 0.21%)</title><rect x="1176.8" y="949" width="2.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1179.82" y="959.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.&lt;init&gt; (10 samples, 0.43%)</title><rect x="1103.3" y="613" width="5.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1106.32" y="623.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.splitLargeRun (190 samples, 8.16%)</title><rect x="471.3" y="677" width="96.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="474.25" y="687.5" >io/netty/bu..</text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.findExistingProfiles (1 samples, 0.04%)</title><rect x="1084.6" y="869" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1087.57" y="879.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="71.8" y="517" width="1.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="74.84" y="527.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.13%)</title><rect x="1098.8" y="757" width="1.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1101.76" y="767.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2,080 samples, 89.35%)</title><rect x="17.6" y="901" width="1054.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="20.60" y="911.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g >
<title>sun/nio/fs/UnixFileAttributeViews$Basic.readAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="901" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1115.45" y="911.5" ></text>
</g>
<g >
<title>PhaseCCP::analyze() (2 samples, 0.09%)</title><rect x="1156.5" y="885" width="1.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1159.55" y="895.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (3 samples, 0.13%)</title><rect x="1161.1" y="853" width="1.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1164.11" y="863.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (930 samples, 39.95%)</title><rect x="119.5" y="789" width="471.4" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="122.48" y="799.5" >io/netty/buffer/PoolArena.allocate</text>
</g>
<g >
<title>__gettimeofday (2 samples, 0.09%)</title><rect x="1181.4" y="917" width="1.0" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1184.38" y="927.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1 samples, 0.04%)</title><rect x="17.1" y="933" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="20.10" y="943.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithType (1 samples, 0.04%)</title><rect x="1128.2" y="757" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1131.16" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.isSubpage (1 samples, 0.04%)</title><rect x="1006.0" y="757" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1009.01" y="767.5" ></text>
</g>
<g >
<title>ciTypeFlow::JsrSet::JsrSet(Arena*, int) (1 samples, 0.04%)</title><rect x="1141.8" y="821" width="0.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1144.85" y="831.5" ></text>
</g>
<g >
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1156.5" y="773" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1159.55" y="783.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.04%)</title><rect x="1063.8" y="821" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1066.79" y="831.5" ></text>
</g>
<g >
<title>MemoryPool::record_peak_memory_usage() (1 samples, 0.04%)</title><rect x="1163.1" y="821" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1166.14" y="831.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (2,080 samples, 89.35%)</title><rect x="17.6" y="997" width="1054.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="20.60" y="1007.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (9 samples, 0.39%)</title><rect x="103.3" y="581" width="4.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="106.26" y="591.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (4 samples, 0.17%)</title><rect x="1177.3" y="917" width="2.1" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1180.33" y="927.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedCreatorCollector.collect (1 samples, 0.04%)</title><rect x="1128.2" y="421" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1131.16" y="431.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (1 samples, 0.04%)</title><rect x="1112.4" y="805" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1115.45" y="815.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.04%)</title><rect x="1147.9" y="869" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1150.93" y="879.5" ></text>
</g>
<g >
<title>StringTable::intern(oopDesc*, Thread*) (3 samples, 0.13%)</title><rect x="1106.4" y="533" width="1.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1109.37" y="543.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.close (4 samples, 0.17%)</title><rect x="20.1" y="533" width="2.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="23.14" y="543.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.force (1 samples, 0.04%)</title><rect x="20.6" y="309" width="0.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="23.64" y="319.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1108.4" y="645" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="1111.39" y="655.5" ></text>
</g>
<g >
<title>G1ParScanThreadStateSet::G1ParScanThreadStateSet(G1CollectedHeap*, unsigned int, unsigned long) (1 samples, 0.04%)</title><rect x="1179.9" y="901" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1182.86" y="911.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.77%)</title><rect x="1100.8" y="837" width="9.1" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1103.79" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.tcacheAllocateSmall (1 samples, 0.04%)</title><rect x="17.1" y="805" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="20.10" y="815.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.04%)</title><rect x="17.1" y="1013" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="20.10" y="1023.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (2 samples, 0.09%)</title><rect x="22.7" y="373" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="25.67" y="383.5" ></text>
</g>
<g >
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.04%)</title><rect x="17.6" y="677" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="20.60" y="687.5" ></text>
</g>
<g >
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.04%)</title><rect x="1132.7" y="869" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1135.72" y="879.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixPath.hasDotOrDotDot (1 samples, 0.04%)</title><rect x="1084.6" y="517" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1087.57" y="527.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (7 samples, 0.30%)</title><rect x="1007.0" y="741" width="3.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1010.02" y="751.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.indexOf (1 samples, 0.04%)</title><rect x="1068.4" y="629" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1071.35" y="639.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.04%)</title><rect x="1084.6" y="725" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1087.57" y="735.5" ></text>
</g>
<g >
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.09%)</title><rect x="1146.9" y="869" width="1.0" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1149.92" y="879.5" ></text>
</g>
<g >
<title>MemoryService::track_memory_pool_usage(MemoryPool*) (1 samples, 0.04%)</title><rect x="1163.1" y="837" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1166.14" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.put (1 samples, 0.04%)</title><rect x="1126.6" y="965" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="1129.64" y="975.5" ></text>
</g>
<g >
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.09%)</title><rect x="1102.3" y="629" width="1.0" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1105.31" y="639.5" ></text>
</g>
<g >
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.04%)</title><rect x="1171.8" y="821" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1174.75" y="831.5" ></text>
</g>
<g >
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.04%)</title><rect x="1174.3" y="949" width="0.5" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1177.29" y="959.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_Throughput (2,080 samples, 89.35%)</title><rect x="17.6" y="885" width="1054.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="20.60" y="895.5" >com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_Throughput</text>
</g>
<g >
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (34 samples, 1.46%)</title><rect x="60.7" y="597" width="17.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="63.69" y="607.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1154.5" y="853" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1157.52" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::idom(unsigned int) const (1 samples, 0.04%)</title><rect x="1154.5" y="821" width="0.5" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1157.52" y="831.5" ></text>
</g>
<g >
<title>[unknown_Java] (3 samples, 0.13%)</title><rect x="10.0" y="1077" width="1.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1161.6" y="661" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1164.62" y="671.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAll (2 samples, 0.09%)</title><rect x="21.2" y="341" width="1.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="24.15" y="351.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.probeNext (5 samples, 0.21%)</title><rect x="390.7" y="629" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="393.66" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunkList.free (625 samples, 26.85%)</title><rect x="689.2" y="757" width="316.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="692.21" y="767.5" >io/netty/buffer/PoolChunkList.free</text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.13%)</title><rect x="1098.8" y="789" width="1.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1101.76" y="799.5" ></text>
</g>
<g >
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.04%)</title><rect x="1171.2" y="853" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1174.25" y="863.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="14.1" y="869" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="17.05" y="879.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (141 samples, 6.06%)</title><rect x="37.9" y="693" width="71.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="40.88" y="703.5" >java/lan..</text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.closeIntFD (4 samples, 0.17%)</title><rect x="11.5" y="933" width="2.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="14.52" y="943.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixPath.relativize (1 samples, 0.04%)</title><rect x="1084.6" y="549" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1087.57" y="559.5" ></text>
</g>
<g >
<title>Monitor::IUnlock(bool) (1 samples, 0.04%)</title><rect x="1116.5" y="917" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1119.50" y="927.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (1 samples, 0.04%)</title><rect x="22.7" y="309" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="25.67" y="319.5" ></text>
</g>
<g >
<title>os::sleep(Thread*, long, bool) (17 samples, 0.73%)</title><rect x="1089.6" y="837" width="8.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1092.64" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun (143 samples, 6.14%)</title><rect x="490.5" y="661" width="72.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="493.52" y="671.5" >io/netty..</text>
</g>
<g >
<title>JVM_FillInStackTrace (139 samples, 5.97%)</title><rect x="38.4" y="645" width="70.4" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="41.38" y="655.5" >JVM_Fil..</text>
</g>
<g >
<title>java/util/concurrent/FutureTask.runAndReset (10 samples, 0.43%)</title><rect x="1110.9" y="1013" width="5.1" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1113.93" y="1023.5" ></text>
</g>
<g >
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (1 samples, 0.04%)</title><rect x="1172.8" y="901" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1175.77" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (148 samples, 6.36%)</title><rect x="135.2" y="693" width="75.0" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="138.20" y="703.5" >io/netty..</text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckPointerImpl.forceCheckPoint (4 samples, 0.17%)</title><rect x="22.2" y="565" width="2.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="25.16" y="575.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.21%)</title><rect x="1154.0" y="869" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1157.01" y="879.5" ></text>
</g>
<g >
<title>sun/nio/ch/KQueueSelectorImpl.implClose (4 samples, 0.17%)</title><rect x="11.5" y="949" width="2.0" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="14.52" y="959.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.removeAt (45 samples, 1.93%)</title><rect x="442.4" y="645" width="22.8" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="445.36" y="655.5" >j..</text>
</g>
<g >
<title>G1CollectedHeap::register_humongous_regions_with_cset() (1 samples, 0.04%)</title><rect x="1179.4" y="901" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1182.36" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.17%)</title><rect x="1157.6" y="885" width="2.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1160.56" y="895.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (17 samples, 0.73%)</title><rect x="1145.4" y="885" width="8.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1148.40" y="895.5" ></text>
</g>
<g >
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (3 samples, 0.13%)</title><rect x="1163.6" y="933" width="1.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1166.64" y="943.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPoolManager.getThreadPool (1 samples, 0.04%)</title><rect x="1127.1" y="997" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1130.15" y="1007.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (1 samples, 0.04%)</title><rect x="22.7" y="325" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="25.67" y="335.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.04%)</title><rect x="1164.7" y="821" width="0.5" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1167.66" y="831.5" ></text>
</g>
<g >
<title>Symbol::print_symbol_on(outputStream*) const (3 samples, 0.13%)</title><rect x="1163.6" y="869" width="1.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1166.64" y="879.5" ></text>
</g>
<g >
<title>G1ContiguousSpace::free() const (1 samples, 0.04%)</title><rect x="1098.3" y="709" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1101.26" y="719.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxCompute (2 samples, 0.09%)</title><rect x="567.6" y="661" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="570.56" y="671.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/BufferingIdGenerator.checkpoint (2 samples, 0.09%)</title><rect x="22.7" y="437" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="25.67" y="447.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.lstat0 (1 samples, 0.04%)</title><rect x="1112.4" y="853" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1115.45" y="863.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="63.2" y="565" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="66.22" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdx (2 samples, 0.09%)</title><rect x="567.6" y="677" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="570.56" y="687.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.delete (1 samples, 0.04%)</title><rect x="1086.1" y="661" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="1089.09" y="671.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.04%)</title><rect x="1171.8" y="789" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1174.75" y="799.5" ></text>
</g>
<g >
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="581" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1130.65" y="591.5" ></text>
</g>
<g >
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.09%)</title><rect x="1141.8" y="901" width="1.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1144.85" y="911.5" ></text>
</g>
<g >
<title>java/lang/Thread.sleep (19 samples, 0.82%)</title><rect x="1088.6" y="885" width="9.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1091.63" y="895.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1170.7" y="789" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1173.74" y="799.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.closeStoreFile (4 samples, 0.17%)</title><rect x="20.1" y="485" width="2.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="23.14" y="495.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.deallocate (7 samples, 0.30%)</title><rect x="1067.3" y="773" width="3.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1070.34" y="783.5" ></text>
</g>
<g >
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.09%)</title><rect x="1136.8" y="965" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1139.78" y="975.5" ></text>
</g>
<g >
<title>java/util/PriorityQueue.remove (1 samples, 0.04%)</title><rect x="844.3" y="693" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="847.31" y="703.5" ></text>
</g>
<g >
<title>TypeInt::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1159.1" y="821" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1162.08" y="831.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.cleanDirectory (3 samples, 0.13%)</title><rect x="17.6" y="805" width="1.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="20.60" y="815.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/transaction/monitor/TransactionMonitor.run (1 samples, 0.04%)</title><rect x="1086.6" y="917" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="1089.60" y="927.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.04%)</title><rect x="1144.4" y="821" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1147.38" y="831.5" ></text>
</g>
<g >
<title>Parker::park(bool, long) (5 samples, 0.21%)</title><rect x="1118.0" y="917" width="2.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1121.02" y="927.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun0 (84 samples, 3.61%)</title><rect x="850.4" y="709" width="42.6" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="853.40" y="719.5" >io/n..</text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.deallocate (816 samples, 35.05%)</title><rect x="619.8" y="805" width="413.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="622.77" y="815.5" >io/netty/buffer/PooledByteBuf.deallocate</text>
</g>
<g >
<title>java/lang/ClassLoader.defineClass (1 samples, 0.04%)</title><rect x="1127.7" y="677" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1130.65" y="687.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="533" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1130.65" y="543.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.04%)</title><rect x="1142.4" y="757" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1145.35" y="767.5" ></text>
</g>
<g >
<title>__psynch_cvwait (15 samples, 0.64%)</title><rect x="1182.4" y="917" width="7.6" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1185.40" y="927.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.profile (4 samples, 0.17%)</title><rect x="1084.6" y="885" width="2.0" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1087.57" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.04%)</title><rect x="1086.1" y="853" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1089.09" y="863.5" ></text>
</g>
<g >
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1171.8" y="757" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1174.75" y="767.5" ></text>
</g>
<g >
<title>MemoryService::track_code_cache_memory_usage() (1 samples, 0.04%)</title><rect x="1163.1" y="853" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1166.14" y="863.5" ></text>
</g>
<g >
<title>_vsnprintf (1 samples, 0.04%)</title><rect x="17.6" y="517" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="20.60" y="527.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.lambda$closeStoreFile$3 (2 samples, 0.09%)</title><rect x="21.2" y="437" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="24.15" y="447.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashIndex (2 samples, 0.09%)</title><rect x="842.3" y="645" width="1.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="845.29" y="655.5" ></text>
</g>
<g >
<title>LinearScan::allocate_registers() (3 samples, 0.13%)</title><rect x="1169.7" y="837" width="1.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1172.73" y="847.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1141.8" y="789" width="0.6" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1144.85" y="799.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/WarmupAvailabilityListener.doProfile (4 samples, 0.17%)</title><rect x="1084.6" y="901" width="2.0" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1087.57" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1154.0" y="853" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1157.01" y="863.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (60 samples, 2.58%)</title><rect x="1141.8" y="949" width="30.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1144.85" y="959.5" >Co..</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1116.5" y="981" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1119.50" y="991.5" ></text>
</g>
<g >
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (11 samples, 0.47%)</title><rect x="1110.9" y="1029" width="5.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1113.93" y="1039.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.sizeClass (1 samples, 0.04%)</title><rect x="1006.0" y="773" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1009.01" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashIndex (3 samples, 0.13%)</title><rect x="891.5" y="677" width="1.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="894.45" y="687.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (7 samples, 0.30%)</title><rect x="1067.3" y="805" width="3.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1070.34" y="815.5" ></text>
</g>
<g >
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1107.4" y="517" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1110.38" y="527.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="21.2" y="165" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="24.15" y="175.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (9 samples, 0.39%)</title><rect x="1111.4" y="997" width="4.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1114.43" y="1007.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2,080 samples, 89.35%)</title><rect x="17.6" y="965" width="1054.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="20.60" y="975.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>os::PlatformEvent::park(long) (3 samples, 0.13%)</title><rect x="1175.3" y="933" width="1.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1178.30" y="943.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 0.04%)</title><rect x="24.2" y="437" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="27.19" y="447.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.growSize (5 samples, 0.21%)</title><rect x="888.9" y="677" width="2.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="891.92" y="687.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer$$Lambda$983/1587026401.accept (1 samples, 0.04%)</title><rect x="1086.1" y="693" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1089.09" y="703.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.insertAvailRun0 (1 samples, 0.04%)</title><rect x="1070.4" y="677" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1073.38" y="687.5" ></text>
</g>
<g >
<title>Compilation::generate_exception_handler_table() (1 samples, 0.04%)</title><rect x="1168.7" y="853" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1171.71" y="863.5" ></text>
</g>
<g >
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="1098.3" y="837" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1101.26" y="847.5" ></text>
</g>
<g >
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.04%)</title><rect x="1166.2" y="757" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1169.18" y="767.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (1 samples, 0.04%)</title><rect x="23.2" y="325" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="26.18" y="335.5" ></text>
</g>
<g >
<title>Arena::Amalloc_D(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1143.9" y="837" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1146.87" y="847.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="933" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1114.94" y="943.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="517" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1130.65" y="527.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.get (1 samples, 0.04%)</title><rect x="1068.4" y="645" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1071.35" y="655.5" ></text>
</g>
<g >
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.04%)</title><rect x="19.6" y="421" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="22.63" y="431.5" ></text>
</g>
<g >
<title>Intrinsic::visit(InstructionVisitor*) (1 samples, 0.04%)</title><rect x="1167.7" y="693" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1170.70" y="703.5" ></text>
</g>
<g >
<title>Parse::do_call() (3 samples, 0.13%)</title><rect x="1161.1" y="837" width="1.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1164.11" y="847.5" ></text>
</g>
<g >
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="100.7" y="549" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="103.73" y="559.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1173.8" y="901" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1176.78" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.put (1 samples, 0.04%)</title><rect x="1070.4" y="661" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1073.38" y="671.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (24 samples, 1.03%)</title><rect x="602.0" y="741" width="12.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="605.03" y="751.5" ></text>
</g>
<g >
<title>os::strdup(char const*, MemoryType) (1 samples, 0.04%)</title><rect x="1164.7" y="853" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1167.66" y="863.5" ></text>
</g>
<g >
<title>org/abcde/util/concurrent/Runnables.runAll (4 samples, 0.17%)</title><rect x="20.1" y="469" width="2.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="23.14" y="479.5" ></text>
</g>
<g >
<title>stat64 (1 samples, 0.04%)</title><rect x="1085.6" y="757" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1088.58" y="767.5" ></text>
</g>
<g >
<title>find_lowest_bit(unsigned int) (1 samples, 0.04%)</title><rect x="1152.0" y="837" width="0.5" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="1154.98" y="847.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (14 samples, 0.60%)</title><rect x="1128.7" y="997" width="7.1" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1131.67" y="1007.5" ></text>
</g>
<g >
<title>ConNode::Opcode() const (1 samples, 0.04%)</title><rect x="1143.4" y="869" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1146.37" y="879.5" ></text>
</g>
<g >
<title>java/nio/file/Files.walkFileTree (3 samples, 0.13%)</title><rect x="17.6" y="709" width="1.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="20.60" y="719.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="14.1" y="885" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="17.05" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runPages (2 samples, 0.09%)</title><rect x="754.6" y="661" width="1.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="757.60" y="671.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (3 samples, 0.13%)</title><rect x="1125.1" y="917" width="1.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1128.12" y="927.5" ></text>
</g>
<g >
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1136.8" y="949" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1139.78" y="959.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1127.7" y="757" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1130.65" y="767.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="1087.1" y="885" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1090.10" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxFloor (4 samples, 0.17%)</title><rect x="530.1" y="645" width="2.0" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="533.05" y="655.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1099.8" y="709" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1102.78" y="719.5" ></text>
</g>
<g >
<title>os::dll_load(char const*, char*, int) (1 samples, 0.04%)</title><rect x="14.1" y="741" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="17.05" y="751.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1084.6" y="789" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1087.57" y="799.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.04%)</title><rect x="1168.2" y="661" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1171.20" y="671.5" ></text>
</g>
<g >
<title>__gettimeofday (1 samples, 0.04%)</title><rect x="1122.1" y="981" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="1125.08" y="991.5" ></text>
</g>
<g >
<title>SignatureStream::as_symbol_or_null() (1 samples, 0.04%)</title><rect x="1161.1" y="645" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1164.11" y="655.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1161.6" y="645" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1164.62" y="655.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stopInstances (10 samples, 0.43%)</title><rect x="19.6" y="773" width="5.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="22.63" y="783.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithType (1 samples, 0.04%)</title><rect x="1128.2" y="741" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1131.16" y="751.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.readAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="917" width="0.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1115.45" y="927.5" ></text>
</g>
<g >
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.13%)</title><rect x="1148.9" y="869" width="1.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1151.94" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (7 samples, 0.30%)</title><rect x="306.5" y="661" width="3.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="309.52" y="671.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="325" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="27.19" y="335.5" ></text>
</g>
<g >
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1146.4" y="869" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1149.41" y="879.5" ></text>
</g>
<g >
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.04%)</title><rect x="24.2" y="469" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="27.19" y="479.5" ></text>
</g>
<g >
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.04%)</title><rect x="1136.8" y="901" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1139.78" y="911.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ull&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.04%)</title><rect x="61.2" y="581" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="64.19" y="591.5" ></text>
</g>
<g >
<title>java/lang/String.intern (3 samples, 0.13%)</title><rect x="1106.4" y="565" width="1.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1109.37" y="575.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.09%)</title><rect x="1166.7" y="741" width="1.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1169.68" y="751.5" ></text>
</g>
<g >
<title>java/lang/Long.equals (4 samples, 0.17%)</title><rect x="778.9" y="629" width="2.1" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="781.93" y="639.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory0 (1 samples, 0.04%)</title><rect x="17.1" y="677" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="20.10" y="687.5" ></text>
</g>
<g >
<title>itable stub (1 samples, 0.04%)</title><rect x="1108.4" y="581" width="0.5" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="1111.39" y="591.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.04%)</title><rect x="1156.0" y="821" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1159.04" y="831.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (8 samples, 0.34%)</title><rect x="1117.0" y="981" width="4.1" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1120.01" y="991.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2,080 samples, 89.35%)</title><rect x="17.6" y="981" width="1054.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="20.60" y="991.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.13%)</title><rect x="1125.1" y="949" width="1.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1128.12" y="959.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.04%)</title><rect x="17.1" y="1029" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="20.10" y="1039.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.indexOf (57 samples, 2.45%)</title><rect x="364.3" y="645" width="28.9" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="367.30" y="655.5" >io..</text>
</g>
<g >
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="821" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1114.94" y="831.5" ></text>
</g>
<g >
<title>OtherRegionsTable::occupied() const (1 samples, 0.04%)</title><rect x="1133.7" y="917" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1136.74" y="927.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1161.1" y="725" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1164.11" y="735.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1084.6" y="805" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1087.57" y="815.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (1 samples, 0.04%)</title><rect x="1086.1" y="533" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1089.09" y="543.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunkList.allocate (8 samples, 0.34%)</title><rect x="170.2" y="661" width="4.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="173.17" y="671.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="1179.9" y="773" width="0.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="1182.86" y="783.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/DeletingPathVisitor.visitFile (2 samples, 0.09%)</title><rect x="18.1" y="677" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="21.11" y="687.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (13 samples, 0.56%)</title><rect x="70.3" y="549" width="6.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="73.32" y="559.5" ></text>
</g>
<g >
<title>OrderAccess::acquire() (1 samples, 0.04%)</title><rect x="112.9" y="565" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="115.90" y="575.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithoutTypeInfo (1 samples, 0.04%)</title><rect x="1128.2" y="725" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1131.16" y="735.5" ></text>
</g>
<g >
<title>PhaseIFG::init(unsigned int) (2 samples, 0.09%)</title><rect x="1152.5" y="869" width="1.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1155.49" y="879.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixPath.relativize (1 samples, 0.04%)</title><rect x="1084.6" y="533" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1087.57" y="543.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.unmap (2 samples, 0.09%)</title><rect x="20.1" y="389" width="1.1" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="23.14" y="399.5" ></text>
</g>
<g >
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.04%)</title><rect x="1170.2" y="773" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1173.23" y="783.5" ></text>
</g>
<g >
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (7 samples, 0.30%)</title><rect x="88.1" y="581" width="3.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="91.06" y="591.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (2 samples, 0.09%)</title><rect x="210.2" y="693" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="213.21" y="703.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="1105.4" y="437" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1108.35" y="447.5" ></text>
</g>
<g >
<title>io/netty/buffer/SizeClasses.pages2pageIdxFloor (37 samples, 1.59%)</title><rect x="894.5" y="709" width="18.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="897.49" y="719.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.computeChunkOffset (1 samples, 0.04%)</title><rect x="22.2" y="405" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="25.16" y="415.5" ></text>
</g>
<g >
<title>org/abcde/internal/unsafe/UnsafeUtil.putIntVolatile (1 samples, 0.04%)</title><rect x="20.1" y="341" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="23.14" y="351.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.6" y="837" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1160.56" y="847.5" ></text>
</g>
<g >
<title>sun/management/GarbageCollectorImpl.getCollectionCount (1 samples, 0.04%)</title><rect x="1109.9" y="885" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1112.91" y="895.5" ></text>
</g>
<g >
<title>__fcntl (1 samples, 0.04%)</title><rect x="20.6" y="213" width="0.6" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="23.64" y="223.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.flushAndForce (1 samples, 0.04%)</title><rect x="22.2" y="469" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="25.16" y="479.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/BasicBeanDescription.findJsonValueAccessor (1 samples, 0.04%)</title><rect x="1128.2" y="533" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1131.16" y="543.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/DetachedCheckpointAppender.checkPoint (1 samples, 0.04%)</title><rect x="23.7" y="533" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="26.69" y="543.5" ></text>
</g>
<g >
<title>java/lang/invoke/LambdaForm$MH/1623388836.invoke (2 samples, 0.09%)</title><rect x="1102.3" y="613" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1105.31" y="623.5" ></text>
</g>
<g >
<title>Java_sun_nio_ch_FileDispatcherImpl_force0 (1 samples, 0.04%)</title><rect x="20.6" y="229" width="0.6" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="23.64" y="239.5" ></text>
</g>
<g >
<title>RegMask::is_misaligned_pair() const (1 samples, 0.04%)</title><rect x="1150.0" y="853" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1152.96" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (85 samples, 3.65%)</title><rect x="167.1" y="677" width="43.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="170.13" y="687.5" >io/n..</text>
</g>
<g >
<title>CodeCache::find_blob(void*) (5 samples, 0.21%)</title><rect x="104.3" y="565" width="2.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="107.28" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.tcacheAllocateNormal (749 samples, 32.17%)</title><rect x="211.2" y="757" width="379.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="214.23" y="767.5" >io/netty/buffer/PoolArena.tcacheAllocateNormal</text>
</g>
<g >
<title>DirectiveSet::should_inline(ciMethod*) (1 samples, 0.04%)</title><rect x="1161.6" y="597" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1164.62" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (1 samples, 0.04%)</title><rect x="22.2" y="453" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="25.16" y="463.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.close (4 samples, 0.17%)</title><rect x="20.1" y="501" width="2.1" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="23.14" y="511.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.04%)</title><rect x="17.1" y="885" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="20.10" y="895.5" ></text>
</g>
<g >
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.04%)</title><rect x="1165.2" y="853" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1168.16" y="863.5" ></text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine.shutdown (4 samples, 0.17%)</title><rect x="20.1" y="581" width="2.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="23.14" y="591.5" ></text>
</g>
<g >
<title>BasicMatcher::match(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1166.7" y="709" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1169.68" y="719.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory (1 samples, 0.04%)</title><rect x="17.1" y="709" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="20.10" y="719.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (3 samples, 0.13%)</title><rect x="1175.3" y="949" width="1.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1178.30" y="959.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/impl/PropertySerializerMap.findAndAddSecondarySerializer (1 samples, 0.04%)</title><rect x="1128.2" y="645" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1131.16" y="655.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1159.1" y="853" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1162.08" y="863.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.lstat (1 samples, 0.04%)</title><rect x="1112.4" y="869" width="0.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1115.45" y="879.5" ></text>
</g>
<g >
<title>JvmtiDeferredEvent::post() (1 samples, 0.04%)</title><rect x="1173.3" y="949" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1176.27" y="959.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.run (1 samples, 0.04%)</title><rect x="17.1" y="997" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="20.10" y="1007.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1173.8" y="933" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1176.78" y="943.5" ></text>
</g>
<g >
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.04%)</title><rect x="1111.9" y="789" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1114.94" y="799.5" ></text>
</g>
<g >
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.04%)</title><rect x="1156.5" y="837" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1159.55" y="847.5" ></text>
</g>
<g >
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.04%)</title><rect x="1159.1" y="837" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1162.08" y="847.5" ></text>
</g>
<g >
<title>frame::interpreter_frame_bcp() const (1 samples, 0.04%)</title><rect x="45.5" y="613" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="48.48" y="623.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1136.8" y="933" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1139.78" y="943.5" ></text>
</g>
<g >
<title>ciTypeFlow::do_flow() (2 samples, 0.09%)</title><rect x="1141.8" y="853" width="1.1" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1144.85" y="863.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1121.1" y="1045" width="0.5" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1124.07" y="1055.5" ></text>
</g>
<g >
<title>org/abcde/internal/index/label/NativeTokenScanStore.shutdown (1 samples, 0.04%)</title><rect x="19.6" y="581" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="22.63" y="591.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.09%)</title><rect x="1155.5" y="853" width="1.0" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1158.53" y="863.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (2 samples, 0.09%)</title><rect x="804.8" y="645" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="807.78" y="655.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.cleanup (5 samples, 0.21%)</title><rect x="11.5" y="1013" width="2.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="14.52" y="1023.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.delete (3 samples, 0.13%)</title><rect x="17.6" y="773" width="1.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="20.60" y="783.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18 samples, 0.77%)</title><rect x="1100.8" y="821" width="9.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1103.79" y="831.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1159.1" y="869" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1162.08" y="879.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.26%)</title><rect x="1165.7" y="789" width="3.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1168.67" y="799.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$200/2018676780.test (1 samples, 0.04%)</title><rect x="1099.8" y="693" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1102.78" y="703.5" ></text>
</g>
<g >
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.04%)</title><rect x="1162.1" y="613" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1165.12" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1174.3" y="821" width="0.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1177.29" y="831.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (2 samples, 0.09%)</title><rect x="106.8" y="565" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="109.81" y="575.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (131 samples, 5.63%)</title><rect x="42.4" y="629" width="66.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="45.44" y="639.5" >java_la..</text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (4 samples, 0.17%)</title><rect x="1064.8" y="741" width="2.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1067.80" y="751.5" ></text>
</g>
<g >
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="389" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="27.19" y="399.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (1 samples, 0.04%)</title><rect x="17.1" y="949" width="0.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="20.10" y="959.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.04%)</title><rect x="21.7" y="101" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="24.66" y="111.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileAttributes.get (1 samples, 0.04%)</title><rect x="1112.4" y="885" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1115.45" y="895.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.04%)</title><rect x="23.7" y="341" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="26.69" y="351.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.13%)</title><rect x="1098.8" y="837" width="1.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1101.76" y="847.5" ></text>
</g>
<g >
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="109.9" y="645" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="112.85" y="655.5" ></text>
</g>
<g >
<title>ResourceBitMap::ResourceBitMap(unsigned long) (1 samples, 0.04%)</title><rect x="1165.2" y="837" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1168.16" y="847.5" ></text>
</g>
<g >
<title>ScopedFenceGeneral&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.04%)</title><rect x="41.9" y="549" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="44.93" y="559.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (1 samples, 0.04%)</title><rect x="1128.2" y="709" width="0.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1131.16" y="719.5" ></text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine$$Lambda$1208/2012512365.apply (4 samples, 0.17%)</title><rect x="20.1" y="549" width="2.1" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="23.14" y="559.5" ></text>
</g>
<g >
<title>ConcurrentHashTable&lt;WeakHandle&lt;(WeakHandleType)2&gt;, StringTableConfig, (MemoryType)9&gt;::Node* ConcurrentHashTable&lt;WeakHandle&lt;(WeakHandleType)2&gt;, StringTableConfig, (MemoryType)9&gt;::get_node&lt;StringTableLookupJchar&gt;(ConcurrentHashTable&lt;WeakHandle&lt;(WeakHandleType)2&gt;, StringTableConfig, (MemoryType)9&gt;::Bucket const*, StringTableLookupJchar&amp;, bool*, unsigned long*) const (1 samples, 0.04%)</title><rect x="1106.4" y="453" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1109.37" y="463.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle$$Lambda$895/1355138594.run (6 samples, 0.26%)</title><rect x="1084.6" y="949" width="3.0" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1087.57" y="959.5" ></text>
</g>
<g >
<title>CompileQueue::get() (1 samples, 0.04%)</title><rect x="1172.3" y="949" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1175.26" y="959.5" ></text>
</g>
<g >
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.04%)</title><rect x="41.9" y="597" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="44.93" y="607.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.run (5 samples, 0.21%)</title><rect x="14.1" y="1013" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="17.05" y="1023.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::has_node(Node*) const (1 samples, 0.04%)</title><rect x="1154.0" y="837" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1157.01" y="847.5" ></text>
</g>
<g >
<title>NativeLookup::lookup_critical_entry(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="14.1" y="773" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="17.05" y="783.5" ></text>
</g>
<g >
<title>java/lang/System.nanoTime (1 samples, 0.04%)</title><rect x="1088.1" y="901" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1091.12" y="911.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1086.1" y="805" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1089.09" y="815.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="917" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1114.94" y="927.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (6 samples, 0.26%)</title><rect x="1165.7" y="853" width="3.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1168.67" y="863.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1174.3" y="837" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1177.29" y="847.5" ></text>
</g>
<g >
<title>rcmd_af.canonnamebuf (4 samples, 0.17%)</title><rect x="11.5" y="917" width="2.0" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="14.52" y="927.5" ></text>
</g>
<g >
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.09%)</title><rect x="1173.3" y="965" width="1.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1176.27" y="975.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$TraceRecord.&lt;init&gt; (142 samples, 6.10%)</title><rect x="37.4" y="725" width="71.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="40.37" y="735.5" >io/netty..</text>
</g>
<g >
<title>readdir$INODE64 (3 samples, 0.13%)</title><rect x="1114.5" y="885" width="1.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1117.48" y="895.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/BackgroundTask.run (24 samples, 1.03%)</title><rect x="1072.4" y="949" width="12.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1075.41" y="959.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (1 samples, 0.04%)</title><rect x="22.7" y="293" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="25.67" y="303.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (2,080 samples, 89.35%)</title><rect x="17.6" y="1013" width="1054.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="20.60" y="1023.5" >java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g >
<title>Profiler::run(Arguments&amp;) (1 samples, 0.04%)</title><rect x="1174.3" y="901" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1177.29" y="911.5" ></text>
</g>
<g >
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.04%)</title><rect x="1161.1" y="693" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1164.11" y="703.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.close (2 samples, 0.09%)</title><rect x="21.2" y="325" width="1.0" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="24.15" y="335.5" ></text>
</g>
<g >
<title>JNI_OnLoad (1 samples, 0.04%)</title><rect x="1114.0" y="901" width="0.5" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1116.97" y="911.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.forceDelete (3 samples, 0.13%)</title><rect x="17.6" y="789" width="1.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="20.60" y="799.5" ></text>
</g>
<g >
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.04%)</title><rect x="1163.1" y="901" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1166.14" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.remove (167 samples, 7.17%)</title><rect x="312.6" y="661" width="84.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="315.60" y="671.5" >io/netty/..</text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.04%)</title><rect x="1156.0" y="837" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1159.04" y="847.5" ></text>
</g>
<g >
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="1144.4" y="853" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1147.38" y="863.5" ></text>
</g>
<g >
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, bool) (1 samples, 0.04%)</title><rect x="1174.3" y="853" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1177.29" y="863.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter.report (1 samples, 0.04%)</title><rect x="1111.4" y="949" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1114.43" y="959.5" ></text>
</g>
<g >
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.04%)</title><rect x="19.6" y="389" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="22.63" y="399.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (8 samples, 0.34%)</title><rect x="1117.0" y="997" width="4.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1120.01" y="1007.5" ></text>
</g>
<g >
<title>jshort_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1107.9" y="581" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1110.89" y="591.5" ></text>
</g>
<g >
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1159.1" y="789" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1162.08" y="799.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.04%)</title><rect x="24.2" y="309" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="27.19" y="319.5" ></text>
</g>
<g >
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="44.0" y="613" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="46.96" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="23.7" y="453" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="26.69" y="463.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedCreatorCollector._findPotentialFactories (1 samples, 0.04%)</title><rect x="1128.2" y="405" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1131.16" y="415.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="1111.9" y="949" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1114.94" y="959.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.toArray (1 samples, 0.04%)</title><rect x="1084.6" y="853" width="0.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1087.57" y="863.5" ></text>
</g>
<g >
<title>CompiledIC::set_to_clean(bool) (1 samples, 0.04%)</title><rect x="1123.6" y="901" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1126.60" y="911.5" ></text>
</g>
<g >
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1156.5" y="789" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1159.55" y="799.5" ></text>
</g>
<g >
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="43.5" y="613" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="46.45" y="623.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_lstat0 (1 samples, 0.04%)</title><rect x="1112.4" y="837" width="0.6" height="15.0" fill="rgb(230,95,95)" rx="2" ry="2" />
<text  x="1115.45" y="847.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stop (10 samples, 0.43%)</title><rect x="19.6" y="741" width="5.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="22.63" y="751.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory.getGarbageCollectorMXBeans (23 samples, 0.99%)</title><rect x="1098.3" y="885" width="11.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1101.26" y="895.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.hashCode (2 samples, 0.09%)</title><rect x="389.6" y="613" width="1.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="392.65" y="623.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.removeAll (1 samples, 0.04%)</title><rect x="16.6" y="1013" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="19.59" y="1023.5" ></text>
</g>
<g >
<title>rcmd_af.canonnamebuf (1 samples, 0.04%)</title><rect x="19.6" y="293" width="0.5" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="22.63" y="303.5" ></text>
</g>
<g >
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 0.04%)</title><rect x="1172.8" y="917" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1175.77" y="927.5" ></text>
</g>
<g >
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.04%)</title><rect x="1105.4" y="373" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1108.35" y="383.5" ></text>
</g>
<g >
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1179.9" y="869" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1182.86" y="879.5" ></text>
</g>
<g >
<title>java/lang/Enum.ordinal (1 samples, 0.04%)</title><rect x="1010.6" y="741" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="1013.57" y="751.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (7 samples, 0.30%)</title><rect x="97.7" y="581" width="3.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="100.69" y="591.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (11 samples, 0.47%)</title><rect x="1128.7" y="933" width="5.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1131.67" y="943.5" ></text>
</g>
<g >
<title>Unsafe_DefineAnonymousClass0(JNIEnv_*, _jobject*, _jclass*, _jbyteArray*, _jobjectArray*) (1 samples, 0.04%)</title><rect x="24.2" y="421" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="27.19" y="431.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.26%)</title><rect x="1165.7" y="805" width="3.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1168.67" y="815.5" ></text>
</g>
<g >
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (2 samples, 0.09%)</title><rect x="112.9" y="629" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="115.90" y="639.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.remove (33 samples, 1.42%)</title><rect x="755.6" y="661" width="16.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="758.61" y="671.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.force0 (1 samples, 0.04%)</title><rect x="20.6" y="245" width="0.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="23.64" y="255.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (874 samples, 37.54%)</title><rect x="618.2" y="837" width="443.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="621.25" y="847.5" >io/netty/buffer/AbstractReferenceCountedByteBuf.release</text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.deleteFile (1 samples, 0.04%)</title><rect x="1086.1" y="629" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1089.09" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runPages (6 samples, 0.26%)</title><rect x="810.9" y="693" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="813.86" y="703.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.09%)</title><rect x="1158.1" y="869" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1161.07" y="879.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1084.6" y="645" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="1087.57" y="655.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.04%)</title><rect x="1116.5" y="933" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1119.50" y="943.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="885" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1114.94" y="895.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider.findTypedValueSerializer (1 samples, 0.04%)</title><rect x="1127.7" y="821" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1130.65" y="831.5" ></text>
</g>
<g >
<title>StrongRootsScope::StrongRootsScope(unsigned int) (1 samples, 0.04%)</title><rect x="1176.8" y="933" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1179.82" y="943.5" ></text>
</g>
<g >
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (3 samples, 0.13%)</title><rect x="1163.6" y="901" width="1.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1166.64" y="911.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runOffset (1 samples, 0.04%)</title><rect x="1069.9" y="661" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1072.87" y="671.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadLocalRandom.nextSeed (3 samples, 0.13%)</title><rect x="118.0" y="725" width="1.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="120.96" y="735.5" ></text>
</g>
<g >
<title>DirectNativeCallWrapper::get_resolve_call_stub(bool) const (1 samples, 0.04%)</title><rect x="1123.6" y="885" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1126.60" y="895.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_unlink0 (2 samples, 0.09%)</title><rect x="18.1" y="581" width="1.0" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="21.11" y="591.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.13%)</title><rect x="1122.1" y="1013" width="1.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1125.08" y="1023.5" ></text>
</g>
<g >
<title>Unsafe_SetMemory0(JNIEnv_*, _jobject*, _jobject*, long, long, signed char) (1 samples, 0.04%)</title><rect x="17.1" y="661" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="20.10" y="671.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.flushAndForce (2 samples, 0.09%)</title><rect x="22.7" y="357" width="1.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="25.67" y="367.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1098.3" y="725" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1101.26" y="735.5" ></text>
</g>
<g >
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.04%)</title><rect x="1174.3" y="965" width="0.5" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1177.29" y="975.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createAndCacheUntypedSerializer (1 samples, 0.04%)</title><rect x="1128.2" y="613" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1131.16" y="623.5" ></text>
</g>
<g >
<title>java/util/Collections$SetFromMap.remove (4 samples, 0.17%)</title><rect x="1064.8" y="773" width="2.0" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1067.80" y="783.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1111.9" y="901" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1114.94" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (5 samples, 0.21%)</title><rect x="1064.3" y="789" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1067.30" y="799.5" ></text>
</g>
<g >
<title>bool ConcurrentHashTable&lt;WeakHandle&lt;(WeakHandleType)2&gt;, StringTableConfig, (MemoryType)9&gt;::get&lt;StringTableLookupJchar, StringTableGet&gt;(Thread*, StringTableLookupJchar&amp;, StringTableGet&amp;, bool*) (1 samples, 0.04%)</title><rect x="1106.4" y="485" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1109.37" y="495.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (2 samples, 0.09%)</title><rect x="22.7" y="389" width="1.0" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="25.67" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.30%)</title><rect x="1117.5" y="949" width="3.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1120.52" y="959.5" ></text>
</g>
<g >
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.04%)</title><rect x="1127.7" y="613" width="0.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="1130.65" y="623.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.lambda$closeStoreFile$2 (2 samples, 0.09%)</title><rect x="20.1" y="437" width="1.1" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="23.14" y="447.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="567.1" y="645" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="570.05" y="655.5" ></text>
</g>
<g >
<title>java/lang/Long.equals (20 samples, 0.86%)</title><rect x="432.2" y="629" width="10.2" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="435.23" y="639.5" ></text>
</g>
<g >
<title>ciReceiverTypeData::translate_receiver_data_from(ProfileData const*) (1 samples, 0.04%)</title><rect x="1167.2" y="677" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1170.19" y="687.5" ></text>
</g>
<g >
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.04%)</title><rect x="1144.9" y="885" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1147.89" y="895.5" ></text>
</g>
<g >
<title>__psynch_cvwait (15 samples, 0.64%)</title><rect x="1090.7" y="805" width="7.6" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1093.65" y="815.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.tick (8 samples, 0.34%)</title><rect x="1123.6" y="1045" width="4.1" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1126.60" y="1055.5" ></text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (2 samples, 0.09%)</title><rect x="92.1" y="581" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="95.11" y="591.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager$$Lambda$1187/1375570179.accept (10 samples, 0.43%)</title><rect x="19.6" y="693" width="5.1" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="22.63" y="703.5" ></text>
</g>
<g >
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1160.1" y="837" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1163.09" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore$$Lambda$1209/1447293328.run (2 samples, 0.09%)</title><rect x="20.1" y="453" width="1.1" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="23.14" y="463.5" ></text>
</g>
<g >
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="1164.7" y="837" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.66" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/monitoring/DatabaseEventListeners.databaseShutdown (1 samples, 0.04%)</title><rect x="24.2" y="613" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="27.19" y="623.5" ></text>
</g>
<g >
<title>io/netty/util/collection/IntObjectHashMap.removeAt (8 samples, 0.34%)</title><rect x="393.2" y="645" width="4.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="396.20" y="655.5" ></text>
</g>
<g >
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.04%)</title><rect x="1157.1" y="853" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1160.05" y="863.5" ></text>
</g>
<g >
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.04%)</title><rect x="21.2" y="197" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="24.15" y="207.5" ></text>
</g>
<g >
<title>WeakHandle&lt;(WeakHandleType)2&gt;* ConcurrentHashTable&lt;WeakHandle&lt;(WeakHandleType)2&gt;, StringTableConfig, (MemoryType)9&gt;::internal_get&lt;StringTableLookupJchar&gt;(Thread*, StringTableLookupJchar&amp;, bool*) (1 samples, 0.04%)</title><rect x="1106.4" y="469" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1109.37" y="479.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/WarmupAvailabilityListener$$Lambda$977/1680866464.run (4 samples, 0.17%)</title><rect x="1084.6" y="917" width="2.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1087.57" y="927.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (749 samples, 32.17%)</title><rect x="211.2" y="773" width="379.7" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="214.23" y="783.5" >io/netty/buffer/PoolArena.allocate</text>
</g>
<g >
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (1 samples, 0.04%)</title><rect x="17.1" y="917" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="20.10" y="927.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.04%)</title><rect x="66.8" y="517" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="69.77" y="527.5" ></text>
</g>
<g >
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1101.8" y="661" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1104.80" y="671.5" ></text>
</g>
<g >
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1156.5" y="869" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1159.55" y="879.5" ></text>
</g>
<g >
<title>Compilation::compile_java_method() (12 samples, 0.52%)</title><rect x="1165.2" y="885" width="6.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1168.16" y="895.5" ></text>
</g>
<g >
<title>JVM_Sleep (2 samples, 0.09%)</title><rect x="15.6" y="965" width="1.0" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="18.58" y="975.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 0.09%)</title><rect x="1161.6" y="709" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1164.62" y="719.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1104.8" y="533" width="0.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1107.85" y="543.5" ></text>
</g>
<g >
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.04%)</title><rect x="1180.4" y="981" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1183.37" y="991.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadLocalRandom.nextInt (4 samples, 0.17%)</title><rect x="117.5" y="741" width="2.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="120.46" y="751.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (11 samples, 0.47%)</title><rect x="772.3" y="661" width="5.6" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="775.34" y="671.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (71 samples, 3.05%)</title><rect x="174.2" y="661" width="36.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="177.23" y="671.5" >jav..</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.typedValueSerializer (1 samples, 0.04%)</title><rect x="1127.7" y="805" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1130.65" y="815.5" ></text>
</g>
<g >
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="567.1" y="613" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="570.05" y="623.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.closeStore (4 samples, 0.17%)</title><rect x="20.1" y="517" width="2.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="23.14" y="527.5" ></text>
</g>
<g >
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1159.6" y="853" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1162.59" y="863.5" ></text>
</g>
<g >
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="1105.4" y="389" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1108.35" y="399.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (2 samples, 0.09%)</title><rect x="14.6" y="949" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="17.56" y="959.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.04%)</title><rect x="1169.2" y="853" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1172.22" y="863.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (3 samples, 0.13%)</title><rect x="1175.3" y="965" width="1.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1178.30" y="975.5" ></text>
</g>
<g >
<title>Unsafe_Unpark(JNIEnv_*, _jobject*, _jobject*) (3 samples, 0.13%)</title><rect x="1125.1" y="853" width="1.5" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1128.12" y="863.5" ></text>
</g>
</g>
</svg>
