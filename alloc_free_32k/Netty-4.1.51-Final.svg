<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1141" > </text>
<g id="frames">
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.09%)</title><rect x="1166.9" y="677" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1169.86" y="687.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1153.0" y="853" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1155.98" y="863.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (2 samples, 0.09%)</title><rect x="1132.9" y="853" width="1.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1135.93" y="863.5" ></text>
</g>
<g >
<title>G1AllocRegion::retire_internal(HeapRegion*, bool) (1 samples, 0.04%)</title><rect x="1118.5" y="421" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1121.53" y="431.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1108.2" y="805" width="0.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1111.25" y="815.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider.findPrimaryPropertySerializer (1 samples, 0.04%)</title><rect x="1133.4" y="453" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1136.44" y="463.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/LocalNetworkPlatform$$Lambda$1183/965496419.run (1 samples, 0.04%)</title><rect x="12.6" y="789" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="15.57" y="799.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.04%)</title><rect x="161.2" y="581" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="164.16" y="591.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="1118.5" y="453" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1121.53" y="463.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1109.8" y="821" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1112.79" y="831.5" ></text>
</g>
<g >
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1140.6" y="997" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1143.64" y="1007.5" ></text>
</g>
<g >
<title>java/util/Collections$SetFromMap.remove (5 samples, 0.22%)</title><rect x="1081.5" y="789" width="2.6" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1084.51" y="799.5" ></text>
</g>
<g >
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1120.1" y="661" width="0.5" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1123.07" y="671.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (1 samples, 0.04%)</title><rect x="1109.3" y="549" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1112.28" y="559.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1110.8" y="837" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1113.82" y="847.5" ></text>
</g>
<g >
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (4 samples, 0.17%)</title><rect x="52.2" y="629" width="2.0" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="55.16" y="639.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (60 samples, 2.61%)</title><rect x="1146.3" y="965" width="30.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1149.30" y="975.5" >Co..</text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="1124.2" y="1029" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1127.19" y="1039.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl$Closer.run (1 samples, 0.04%)</title><rect x="16.2" y="117" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="19.17" y="127.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="14.1" y="341" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="17.11" y="351.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="293" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="17.11" y="303.5" ></text>
</g>
<g >
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="162.7" y="613" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="165.71" y="623.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1129.8" y="949" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1132.84" y="959.5" ></text>
</g>
<g >
<title>java/nio/file/Files.walkFileTree (2 samples, 0.09%)</title><rect x="13.1" y="725" width="1.0" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="16.08" y="735.5" ></text>
</g>
<g >
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 0.04%)</title><rect x="1180.2" y="885" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1183.23" y="895.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (1 samples, 0.04%)</title><rect x="218.7" y="661" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="221.75" y="671.5" ></text>
</g>
<g >
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="10.5" y="1061" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="13.51" y="1071.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (113 samples, 4.92%)</title><rect x="903.1" y="741" width="58.1" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="906.10" y="751.5" >io/net..</text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1181.3" y="933" width="0.5" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="1184.26" y="943.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.lambda$asCallable$1 (49 samples, 2.14%)</title><rect x="1095.9" y="981" width="25.2" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="1098.91" y="991.5" >o..</text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.04%)</title><rect x="12.1" y="837" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="15.06" y="847.5" ></text>
</g>
<g >
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1167.9" y="565" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1170.89" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.trim (2 samples, 0.09%)</title><rect x="576.6" y="693" width="1.0" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="579.61" y="703.5" ></text>
</g>
<g >
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1109.3" y="773" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1112.28" y="783.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.48%)</title><rect x="1171.5" y="949" width="5.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1174.49" y="959.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1173.0" y="661" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1176.03" y="671.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1132.4" y="821" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1135.41" y="831.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (5 samples, 0.22%)</title><rect x="1138.1" y="949" width="2.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1141.07" y="959.5" ></text>
</g>
<g >
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="613" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="15.57" y="623.5" ></text>
</g>
<g >
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1168.4" y="677" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1171.41" y="687.5" ></text>
</g>
<g >
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (5 samples, 0.22%)</title><rect x="157.6" y="613" width="2.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="160.56" y="623.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileAttributes.get (1 samples, 0.04%)</title><rect x="1121.6" y="901" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1124.62" y="911.5" ></text>
</g>
<g >
<title>MemAllocator::finish(HeapWord*) const (1 samples, 0.04%)</title><rect x="17.2" y="421" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="20.20" y="431.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (2 samples, 0.09%)</title><rect x="151.9" y="597" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="154.91" y="607.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool$$Lambda$727/1127653066.call (49 samples, 2.14%)</title><rect x="1095.9" y="1029" width="25.2" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1098.91" y="1039.5" >o..</text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.delete (1 samples, 0.04%)</title><rect x="1109.3" y="677" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1112.28" y="687.5" ></text>
</g>
<g >
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="11.0" y="1061" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="14.03" y="1071.5" ></text>
</g>
<g >
<title>PhaseIFG::init(unsigned int) (1 samples, 0.04%)</title><rect x="1150.4" y="869" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1153.41" y="879.5" ></text>
</g>
<g >
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.04%)</title><rect x="1173.0" y="325" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1176.03" y="335.5" ></text>
</g>
<g >
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) (1 samples, 0.04%)</title><rect x="1156.6" y="869" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1159.58" y="879.5" ></text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;574518ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (7 samples, 0.31%)</title><rect x="215.2" y="613" width="3.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="218.15" y="623.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/transaction/monitor/TransactionMonitor.run (1 samples, 0.04%)</title><rect x="1109.8" y="933" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1112.79" y="943.5" ></text>
</g>
<g >
<title>SafepointMechanism::block_if_requested(JavaThread*) (1 samples, 0.04%)</title><rect x="51.6" y="629" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="54.65" y="639.5" ></text>
</g>
<g >
<title>io/netty/channel/DefaultChannelPipeline.fireChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="965" width="0.6" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="14.54" y="975.5" ></text>
</g>
<g >
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.04%)</title><rect x="1146.3" y="741" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1149.30" y="751.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="1128.8" y="997" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1131.81" y="1007.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (119 samples, 5.19%)</title><rect x="830.6" y="661" width="61.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="833.60" y="671.5" >java/l..</text>
</g>
<g >
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.04%)</title><rect x="1147.3" y="869" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1150.32" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.04%)</title><rect x="12.1" y="885" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="15.06" y="895.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (199 samples, 8.67%)</title><rect x="797.7" y="709" width="102.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="800.69" y="719.5" >io/netty/uti..</text>
</g>
<g >
<title>SpinPause (1 samples, 0.04%)</title><rect x="1182.8" y="981" width="0.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1185.80" y="991.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.04%)</title><rect x="1124.2" y="1045" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1127.19" y="1055.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.force0 (1 samples, 0.04%)</title><rect x="17.7" y="341" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="20.71" y="351.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (2 samples, 0.09%)</title><rect x="1088.7" y="661" width="1.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1091.71" y="671.5" ></text>
</g>
<g >
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.04%)</title><rect x="1164.3" y="821" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1167.29" y="831.5" ></text>
</g>
<g >
<title>nmethod::metadata_addr_at(int) const (2 samples, 0.09%)</title><rect x="210.5" y="597" width="1.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="213.52" y="607.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/IdGenerator$Delegate.close (3 samples, 0.13%)</title><rect x="15.7" y="421" width="1.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="18.66" y="431.5" ></text>
</g>
<g >
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.04%)</title><rect x="1131.9" y="965" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1134.90" y="975.5" ></text>
</g>
<g >
<title>JavaThread::active() (1 samples, 0.04%)</title><rect x="56.3" y="629" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="59.27" y="639.5" ></text>
</g>
<g >
<title>VectorSet::test_set(unsigned int) (1 samples, 0.04%)</title><rect x="1169.9" y="869" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1172.95" y="879.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.09%)</title><rect x="1159.2" y="869" width="1.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1162.15" y="879.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider._serialize (1 samples, 0.04%)</title><rect x="1133.4" y="837" width="0.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1136.44" y="847.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="14.1" y="245" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="17.11" y="255.5" ></text>
</g>
<g >
<title>PhaseCFG::global_code_motion() (3 samples, 0.13%)</title><rect x="1149.9" y="885" width="1.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1152.90" y="895.5" ></text>
</g>
<g >
<title>JVM_FillInStackTrace (1 samples, 0.04%)</title><rect x="15.7" y="133" width="0.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="18.66" y="143.5" ></text>
</g>
<g >
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="109.7" y="469" width="0.6" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="112.75" y="479.5" ></text>
</g>
<g >
<title>VMThread::run() (6 samples, 0.26%)</title><rect x="1180.7" y="1013" width="3.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1183.75" y="1023.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1108.2" y="725" width="0.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1111.25" y="735.5" ></text>
</g>
<g >
<title>Java_java_lang_Throwable_fillInStackTrace (333 samples, 14.51%)</title><rect x="48.6" y="677" width="171.2" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="51.56" y="687.5" >Java_java_lang_Throwab..</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1129.8" y="965" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1132.84" y="975.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1181.8" y="933" width="0.5" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1184.77" y="943.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1158.6" y="629" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1161.64" y="639.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="98.4" y="517" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="101.44" y="527.5" ></text>
</g>
<g >
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.04%)</title><rect x="1147.3" y="885" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1150.32" y="895.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/transaction/monitor/KernelTransactionMonitor.getActiveTransactions (1 samples, 0.04%)</title><rect x="1109.8" y="917" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1112.79" y="927.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1181.8" y="965" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1184.77" y="975.5" ></text>
</g>
<g >
<title>compiler_barrier() (1 samples, 0.04%)</title><rect x="54.7" y="645" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="57.73" y="655.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="1108.2" y="773" width="0.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1111.25" y="783.5" ></text>
</g>
<g >
<title>MemAllocator::finish(HeapWord*) const (2 samples, 0.09%)</title><rect x="107.7" y="533" width="1.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="110.69" y="543.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCursor.close (1 samples, 0.04%)</title><rect x="19.3" y="341" width="0.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="22.25" y="351.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (3 samples, 0.13%)</title><rect x="1082.5" y="757" width="1.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1085.54" y="767.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.04%)</title><rect x="1160.7" y="837" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1163.69" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.set (5 samples, 0.22%)</title><rect x="276.3" y="709" width="2.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="279.34" y="719.5" ></text>
</g>
<g >
<title>Universe::should_fill_in_stack_trace(Handle) (2 samples, 0.09%)</title><rect x="58.8" y="629" width="1.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="61.85" y="639.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabaseManagementServiceImpl.shutdown (11 samples, 0.48%)</title><rect x="14.1" y="837" width="5.7" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="17.11" y="847.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/AbstractRaftBenchmark.shutdown (1 samples, 0.04%)</title><rect x="12.6" y="837" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="15.57" y="847.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_unlink0 (2 samples, 0.09%)</title><rect x="13.1" y="597" width="1.0" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="16.08" y="607.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.lstat (1 samples, 0.04%)</title><rect x="1121.6" y="885" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1124.62" y="895.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent.directBufferAddress (8 samples, 0.35%)</title><rect x="559.1" y="661" width="4.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="562.12" y="671.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$DefaultHandle.recycle (39 samples, 1.70%)</title><rect x="992.0" y="789" width="20.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="995.05" y="799.5" ></text>
</g>
<g >
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.04%)</title><rect x="1146.3" y="629" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1149.30" y="639.5" ></text>
</g>
<g >
<title>Matcher::xform(Node*, int) (3 samples, 0.13%)</title><rect x="1147.8" y="885" width="1.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1150.84" y="895.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.09%)</title><rect x="1163.8" y="869" width="1.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1166.78" y="879.5" ></text>
</g>
<g >
<title>IndexSet::initialize(unsigned int) (1 samples, 0.04%)</title><rect x="1150.4" y="853" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1153.41" y="863.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (11 samples, 0.48%)</title><rect x="14.1" y="821" width="5.7" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="17.11" y="831.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="709" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1161.64" y="719.5" ></text>
</g>
<g >
<title>sun/nio/fs/AbstractFileSystemProvider.deleteIfExists (2 samples, 0.09%)</title><rect x="13.1" y="661" width="1.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="16.08" y="671.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedRunner.run (3 samples, 0.13%)</title><rect x="1132.4" y="1077" width="1.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1135.41" y="1087.5" ></text>
</g>
<g >
<title>BacktraceBuilder::expand(Thread*) (51 samples, 2.22%)</title><rect x="90.7" y="597" width="26.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="93.72" y="607.5" >B..</text>
</g>
<g >
<title>ConcurrentGCThread::run() (13 samples, 0.57%)</title><rect x="1134.0" y="1013" width="6.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1136.96" y="1023.5" ></text>
</g>
<g >
<title>PhaseCFG::build_cfg() (1 samples, 0.04%)</title><rect x="1149.4" y="885" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1152.38" y="895.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1182.3" y="917" width="0.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1185.29" y="927.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.04%)</title><rect x="1129.8" y="901" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1132.84" y="911.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="11.5" y="773" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="14.54" y="783.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckpointerLifecycle.shutdown (5 samples, 0.22%)</title><rect x="17.2" y="597" width="2.6" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="20.20" y="607.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1129.3" y="885" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1132.33" y="895.5" ></text>
</g>
<g >
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.04%)</title><rect x="229.0" y="581" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="232.03" y="591.5" ></text>
</g>
<g >
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.04%)</title><rect x="1168.9" y="821" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1171.92" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.initBuf (55 samples, 2.40%)</title><rect x="535.0" y="709" width="28.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="537.96" y="719.5" >i..</text>
</g>
<g >
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.04%)</title><rect x="1172.0" y="821" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1175.00" y="831.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1166.3" y="821" width="0.6" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="1169.35" y="831.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.close (3 samples, 0.13%)</title><rect x="15.7" y="293" width="1.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="18.66" y="303.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1157.1" y="853" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1160.09" y="863.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="789" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1176.03" y="799.5" ></text>
</g>
<g >
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.04%)</title><rect x="53.7" y="549" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="56.70" y="559.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="15.7" y="101" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="18.66" y="111.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1173.0" y="501" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1176.03" y="511.5" ></text>
</g>
<g >
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (20 samples, 0.87%)</title><rect x="197.2" y="597" width="10.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="200.15" y="607.5" ></text>
</g>
<g >
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 0.13%)</title><rect x="1124.7" y="1029" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1127.70" y="1039.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_unlink0 (1 samples, 0.04%)</title><rect x="1109.3" y="501" width="0.5" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1112.28" y="511.5" ></text>
</g>
<g >
<title>frame::sender_for_entry_frame(RegisterMap*) const (5 samples, 0.22%)</title><rect x="194.6" y="597" width="2.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="197.58" y="607.5" ></text>
</g>
<g >
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (5 samples, 0.22%)</title><rect x="227.0" y="613" width="2.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="229.98" y="623.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.serializeFields (1 samples, 0.04%)</title><rect x="1133.4" y="565" width="0.6" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1136.44" y="575.5" ></text>
</g>
<g >
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="597" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1170.89" y="607.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore$$Lambda$1210/1928280018.run (3 samples, 0.13%)</title><rect x="15.7" y="469" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="18.66" y="479.5" ></text>
</g>
<g >
<title>Atomic::LoadImpl&lt;void volatile*, Atomic::PlatformLoad&lt;8ul&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.04%)</title><rect x="53.7" y="533" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="56.70" y="543.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="1129.3" y="981" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1132.33" y="991.5" ></text>
</g>
<g >
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (3 samples, 0.13%)</title><rect x="1135.0" y="917" width="1.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1137.98" y="927.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeysOptimized (1 samples, 0.04%)</title><rect x="12.1" y="981" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="15.06" y="991.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (381 samples, 16.60%)</title><rect x="704.1" y="741" width="195.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="707.12" y="751.5" >io/netty/util/internal/Ob..</text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.profileName (1 samples, 0.04%)</title><rect x="1108.8" y="853" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1111.76" y="863.5" ></text>
</g>
<g >
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1146.3" y="693" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1149.30" y="703.5" ></text>
</g>
<g >
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.04%)</title><rect x="1180.2" y="981" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1183.23" y="991.5" ></text>
</g>
<g >
<title>Node::add_out(Node*) (1 samples, 0.04%)</title><rect x="1148.4" y="757" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1151.35" y="767.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="1110.8" y="821" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1113.82" y="831.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_low_memory_detector() (2 samples, 0.09%)</title><rect x="106.1" y="517" width="1.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="109.15" y="527.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1109.3" y="805" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1112.28" y="815.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (23 samples, 1.00%)</title><rect x="1146.8" y="917" width="11.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1149.81" y="927.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (132 samples, 5.75%)</title><rect x="900.0" y="757" width="67.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="903.01" y="767.5" >io/nett..</text>
</g>
<g >
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="1061" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1166.9" y="597" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1169.86" y="607.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation() (5 samples, 0.22%)</title><rect x="104.6" y="533" width="2.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="107.61" y="543.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/impl/PropertySerializerMap.findAndAddPrimarySerializer (1 samples, 0.04%)</title><rect x="1133.4" y="469" width="0.6" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1136.44" y="479.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.force (1 samples, 0.04%)</title><rect x="17.7" y="389" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="20.71" y="399.5" ></text>
</g>
<g >
<title>jni_GetArrayLength (1 samples, 0.04%)</title><rect x="14.6" y="309" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="17.63" y="319.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.add (11 samples, 0.48%)</title><rect x="1085.6" y="757" width="5.7" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1088.63" y="767.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.close (3 samples, 0.13%)</title><rect x="15.7" y="325" width="1.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="18.66" y="335.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (364 samples, 15.86%)</title><rect x="47.0" y="757" width="187.2" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="50.02" y="767.5" >io/netty/util/ResourceLe..</text>
</g>
<g >
<title>ciMethod::get_flow_analysis() (1 samples, 0.04%)</title><rect x="1166.3" y="789" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1169.35" y="799.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.parkUntilEvictionRequired (24 samples, 1.05%)</title><rect x="1095.9" y="917" width="12.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1098.91" y="927.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.04%)</title><rect x="1129.8" y="869" width="0.6" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1132.84" y="879.5" ></text>
</g>
<g >
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.04%)</title><rect x="1151.4" y="901" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1154.44" y="911.5" ></text>
</g>
<g >
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1166.9" y="565" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1169.86" y="575.5" ></text>
</g>
<g >
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.04%)</title><rect x="53.7" y="565" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="56.70" y="575.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (4 samples, 0.17%)</title><rect x="149.9" y="581" width="2.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="152.85" y="591.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.04%)</title><rect x="1131.4" y="901" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1134.39" y="911.5" ></text>
</g>
<g >
<title>Node_Array::remove(unsigned int) (1 samples, 0.04%)</title><rect x="1156.6" y="837" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1159.58" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.09%)</title><rect x="1126.2" y="1013" width="1.1" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1129.24" y="1023.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/CsvOutput.stop (1 samples, 0.04%)</title><rect x="14.1" y="661" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="17.11" y="671.5" ></text>
</g>
<g >
<title>com/abcde/bench/jmh/api/BaseBenchmark.tearDown (14 samples, 0.61%)</title><rect x="12.6" y="885" width="7.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="15.57" y="895.5" ></text>
</g>
<g >
<title>Symbol::print_symbol_on(outputStream*) const (1 samples, 0.04%)</title><rect x="1171.0" y="885" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1173.98" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.2" y="789" width="0.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1183.23" y="799.5" ></text>
</g>
<g >
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1141.2" y="997" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1144.15" y="1007.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink0 (2 samples, 0.09%)</title><rect x="13.1" y="613" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="16.08" y="623.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (12 samples, 0.52%)</title><rect x="179.7" y="565" width="6.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="182.67" y="575.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.needReport (2 samples, 0.09%)</title><rect x="234.2" y="741" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="237.17" y="751.5" ></text>
</g>
<g >
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1132.9" y="661" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1135.93" y="671.5" ></text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine$$Lambda$1208/879103220.apply (3 samples, 0.13%)</title><rect x="15.7" y="565" width="1.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="18.66" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1,162 samples, 50.63%)</title><rect x="33.7" y="821" width="597.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="36.65" y="831.5" >io/netty/buffer/PooledByteBufAllocator.newDirectBuffer</text>
</g>
<g >
<title>GenerateOopMap::interp_bb(BasicBlock*) (1 samples, 0.04%)</title><rect x="1173.5" y="773" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1176.55" y="783.5" ></text>
</g>
<g >
<title>sun/misc/Unsafe.getInt (1 samples, 0.04%)</title><rect x="1016.7" y="773" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1019.73" y="783.5" ></text>
</g>
<g >
<title>com/sun/management/internal/PlatformMBeanProviderImpl$1.nameToMBeanMap (3 samples, 0.13%)</title><rect x="1118.5" y="709" width="1.6" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1121.53" y="719.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="11.0" y="1077" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="14.03" y="1087.5" ></text>
</g>
<g >
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.04%)</title><rect x="1166.9" y="549" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1169.86" y="559.5" ></text>
</g>
<g >
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.04%)</title><rect x="1149.9" y="869" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1152.90" y="879.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.04%)</title><rect x="1120.6" y="597" width="0.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="1123.59" y="607.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="1118.0" y="709" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1121.02" y="719.5" ></text>
</g>
<g >
<title>ObjArrayAllocator::initialize(HeapWord*) const (9 samples, 0.39%)</title><rect x="110.3" y="533" width="4.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="113.26" y="543.5" ></text>
</g>
<g >
<title>CodeBlob::is_compiled() const (1 samples, 0.04%)</title><rect x="177.1" y="581" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="180.10" y="591.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1159.7" y="837" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1162.66" y="847.5" ></text>
</g>
<g >
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.04%)</title><rect x="1174.6" y="789" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1177.58" y="799.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1108.2" y="661" width="0.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1111.25" y="671.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (8 samples, 0.35%)</title><rect x="110.8" y="517" width="4.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="113.78" y="527.5" ></text>
</g>
<g >
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.13%)</title><rect x="1169.4" y="917" width="1.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1172.43" y="927.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAll (3 samples, 0.13%)</title><rect x="15.7" y="357" width="1.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="18.66" y="367.5" ></text>
</g>
<g >
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelInactive (1 samples, 0.04%)</title><rect x="11.5" y="917" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="14.54" y="927.5" ></text>
</g>
<g >
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.04%)</title><rect x="1129.3" y="853" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1132.33" y="863.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.96%)</title><rect x="1096.9" y="869" width="11.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1099.94" y="879.5" ></text>
</g>
<g >
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.04%)</title><rect x="1126.2" y="805" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1129.24" y="815.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (1 samples, 0.04%)</title><rect x="577.1" y="661" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="580.12" y="671.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="837" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1129.24" y="847.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (8 samples, 0.35%)</title><rect x="1134.0" y="981" width="4.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1136.96" y="991.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.implDelete (2 samples, 0.09%)</title><rect x="13.1" y="645" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="16.08" y="655.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.04%)</title><rect x="1132.9" y="549" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1135.93" y="559.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DefaultDatabaseManager.stopDatabase (10 samples, 0.44%)</title><rect x="14.6" y="693" width="5.2" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="17.63" y="703.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="15.7" y="53" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="18.66" y="63.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (16 samples, 0.70%)</title><rect x="185.8" y="565" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="188.84" y="575.5" ></text>
</g>
<g >
<title>EnableIf&lt;!(AccessInternal::MustConvertCompressedOop&lt;1097844ull, oopDesc*&gt;::value), oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::decode_internal&lt;1097844ull, oopDesc*&gt;(oopDesc*) (1 samples, 0.04%)</title><rect x="138.5" y="597" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="141.54" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.allocateDirect (1 samples, 0.04%)</title><rect x="12.1" y="789" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="15.06" y="799.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler.stopProfilers (2 samples, 0.09%)</title><rect x="1132.9" y="981" width="1.1" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1135.93" y="991.5" ></text>
</g>
<g >
<title>io/netty/handler/codec/ByteToMessageDecoder.channelInputClosed (1 samples, 0.04%)</title><rect x="11.5" y="837" width="0.6" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="14.54" y="847.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.04%)</title><rect x="1148.4" y="837" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1151.35" y="847.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1189.0" y="949" width="0.5" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1191.97" y="959.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.stop (1 samples, 0.04%)</title><rect x="14.1" y="677" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="17.11" y="687.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.defineClass (1 samples, 0.04%)</title><rect x="11.5" y="693" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="14.54" y="703.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (84 samples, 3.66%)</title><rect x="587.9" y="805" width="43.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="590.92" y="815.5" >io/n..</text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_thrpt_jmhStub (2,093 samples, 91.20%)</title><rect x="19.8" y="885" width="1076.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="22.77" y="895.5" >com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_thrpt_jmhStub</text>
</g>
<g >
<title>ConstantPool::tag_at(int) const (1 samples, 0.04%)</title><rect x="11.5" y="533" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="14.54" y="543.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.visitStores (3 samples, 0.13%)</title><rect x="18.2" y="501" width="1.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="21.23" y="511.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (143 samples, 6.23%)</title><rect x="818.3" y="677" width="73.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="821.26" y="687.5" >io/netty..</text>
</g>
<g >
<title>java/lang/reflect/Executable.getGenericParameterTypes (1 samples, 0.04%)</title><rect x="1133.4" y="245" width="0.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1136.44" y="255.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="693" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1176.03" y="703.5" ></text>
</g>
<g >
<title>PhaseChaitin::yank(Node*, Block*, Node_List*, Node_List*) (1 samples, 0.04%)</title><rect x="1156.6" y="853" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1159.58" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.04%)</title><rect x="1117.0" y="853" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1119.99" y="863.5" ></text>
</g>
<g >
<title>jio_vsnprintf (1 samples, 0.04%)</title><rect x="1180.7" y="949" width="0.6" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1183.75" y="959.5" ></text>
</g>
<g >
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.13%)</title><rect x="98.9" y="533" width="1.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="101.95" y="543.5" ></text>
</g>
<g >
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.04%)</title><rect x="11.5" y="661" width="0.6" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="14.54" y="671.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::load&lt;oopDesc*&gt;(void*) (5 samples, 0.22%)</title><rect x="147.3" y="581" width="2.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="150.28" y="591.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.04%)</title><rect x="14.6" y="421" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="17.63" y="431.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (2 samples, 0.09%)</title><rect x="18.2" y="341" width="1.1" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="21.23" y="351.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.04%)</title><rect x="1132.9" y="597" width="0.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="1135.93" y="607.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1146.3" y="773" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1149.30" y="783.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.04%)</title><rect x="1164.8" y="821" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1167.81" y="831.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithType (1 samples, 0.04%)</title><rect x="1133.4" y="757" width="0.6" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="1136.44" y="767.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 0.09%)</title><rect x="1166.9" y="645" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1169.86" y="655.5" ></text>
</g>
<g >
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.22%)</title><rect x="1171.5" y="853" width="2.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1174.49" y="863.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.getInstance (2 samples, 0.09%)</title><rect x="1118.5" y="645" width="1.1" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1121.53" y="655.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.findFirst (1 samples, 0.04%)</title><rect x="1117.0" y="869" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1119.99" y="879.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (67 samples, 2.92%)</title><rect x="1146.3" y="997" width="34.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1149.30" y="1007.5" >Ja..</text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.tick (7 samples, 0.31%)</title><rect x="1128.8" y="1061" width="3.6" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="1131.81" y="1071.5" ></text>
</g>
<g >
<title>SystemDictionary::find_method_handle_type(Symbol*, Klass*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="869" width="0.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1129.24" y="879.5" ></text>
</g>
<g >
<title>GraphKit::clone_map() (1 samples, 0.04%)</title><rect x="1168.4" y="629" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1171.41" y="639.5" ></text>
</g>
<g >
<title>Compilation::emit_lir() (3 samples, 0.13%)</title><rect x="1175.6" y="885" width="1.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1178.60" y="895.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (334 samples, 14.55%)</title><rect x="48.0" y="693" width="171.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="51.05" y="703.5" >java/lang/Throwable.fi..</text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="1182.3" y="933" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1185.29" y="943.5" ></text>
</g>
<g >
<title>SafepointSynchronize::begin() (1 samples, 0.04%)</title><rect x="1182.3" y="981" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1185.29" y="991.5" ></text>
</g>
<g >
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.04%)</title><rect x="1118.0" y="613" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1121.02" y="623.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (48 samples, 2.09%)</title><rect x="1146.3" y="933" width="24.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1149.30" y="943.5" >C..</text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.report (1 samples, 0.04%)</title><rect x="1121.1" y="949" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1124.10" y="959.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="1132.9" y="629" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1135.93" y="639.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="1171.0" y="789" width="0.5" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1173.98" y="799.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1118.5" y="549" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1121.53" y="559.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/OutputStreamManager.flushBuffer (1 samples, 0.04%)</title><rect x="14.1" y="373" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="17.11" y="383.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.04%)</title><rect x="1108.2" y="709" width="0.6" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1111.25" y="719.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.accept (1 samples, 0.04%)</title><rect x="1108.2" y="613" width="0.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1111.25" y="623.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cache (1 samples, 0.04%)</title><rect x="1090.8" y="741" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1093.77" y="751.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (3 samples, 0.13%)</title><rect x="1177.7" y="917" width="1.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1180.66" y="927.5" ></text>
</g>
<g >
<title>Method::print_short_name(outputStream*) (1 samples, 0.04%)</title><rect x="1171.0" y="901" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1173.98" y="911.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (11 samples, 0.48%)</title><rect x="1111.3" y="837" width="5.7" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="1114.33" y="847.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1161.2" y="869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1164.21" y="879.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.04%)</title><rect x="1126.8" y="949" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1129.76" y="959.5" ></text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (9 samples, 0.39%)</title><rect x="152.9" y="597" width="4.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="155.94" y="607.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1108.8" y="837" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1111.76" y="847.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (3 samples, 0.13%)</title><rect x="98.9" y="517" width="1.6" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="101.95" y="527.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocateNormal (1 samples, 0.04%)</title><rect x="12.1" y="821" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="15.06" y="831.5" ></text>
</g>
<g >
<title>__opendir2$INODE64 (1 samples, 0.04%)</title><rect x="1122.1" y="885" width="0.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1125.13" y="895.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent0.getLong (8 samples, 0.35%)</title><rect x="559.1" y="629" width="4.1" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="562.12" y="639.5" ></text>
</g>
<g >
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="709" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1111.76" y="719.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink (2 samples, 0.09%)</title><rect x="13.1" y="629" width="1.0" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="16.08" y="639.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1168.4" y="741" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1171.41" y="751.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (5 samples, 0.22%)</title><rect x="227.0" y="661" width="2.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="229.98" y="671.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.track (366 samples, 15.95%)</title><rect x="47.0" y="789" width="188.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="50.02" y="799.5" >io/netty/util/ResourceLe..</text>
</g>
<g >
<title>CodeCache::find_blob(void*) (5 samples, 0.22%)</title><rect x="194.6" y="581" width="2.6" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="197.58" y="591.5" ></text>
</g>
<g >
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.09%)</title><rect x="114.9" y="549" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="117.89" y="559.5" ></text>
</g>
<g >
<title>Copy::fill_to_memory_atomic(void*, unsigned long, unsigned char) (1 samples, 0.04%)</title><rect x="12.1" y="677" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="15.06" y="687.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/rolling/RollingFileManager.releaseSub (1 samples, 0.04%)</title><rect x="14.1" y="437" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="17.11" y="447.5" ></text>
</g>
<g >
<title>Monitor::IUnlock(bool) (1 samples, 0.04%)</title><rect x="1136.0" y="901" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1139.01" y="911.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (9 samples, 0.39%)</title><rect x="202.3" y="565" width="4.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="205.30" y="575.5" ></text>
</g>
<g >
<title>compiler_barrier() (1 samples, 0.04%)</title><rect x="231.1" y="677" width="0.5" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="234.09" y="687.5" ></text>
</g>
<g >
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.13%)</title><rect x="1153.5" y="885" width="1.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1156.49" y="895.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.readNextEntry (3 samples, 0.13%)</title><rect x="1122.6" y="949" width="1.6" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1125.64" y="959.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider._serialize (1 samples, 0.04%)</title><rect x="1133.4" y="597" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1136.44" y="607.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1160.2" y="869" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1163.18" y="879.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.accept (1 samples, 0.04%)</title><rect x="1108.2" y="757" width="0.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1111.25" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.2" y="805" width="0.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1183.23" y="815.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="757" width="0.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1161.64" y="767.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="15.7" y="165" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="18.66" y="175.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.force (1 samples, 0.04%)</title><rect x="17.7" y="373" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="20.71" y="383.5" ></text>
</g>
<g >
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (7 samples, 0.31%)</title><rect x="1117.5" y="789" width="3.6" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="1120.50" y="799.5" ></text>
</g>
<g >
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="839.9" y="613" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="842.86" y="623.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/LoggerContext.terminate (1 samples, 0.04%)</title><rect x="14.1" y="549" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="17.11" y="559.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_types() (1 samples, 0.04%)</title><rect x="1166.3" y="757" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1169.35" y="767.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="11.5" y="805" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="14.54" y="815.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/AllocateAndFree.allocateAndFree (2,074 samples, 90.37%)</title><rect x="24.9" y="869" width="1066.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="27.91" y="879.5" >com/abcde/bench/micro/benchmarks/cluster/raft/AllocateAndFree.allocateAndFree</text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1173.0" y="581" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1176.03" y="591.5" ></text>
</g>
<g >
<title>org/abcde/logging/log4j/RotatingLogFileWriter.close (1 samples, 0.04%)</title><rect x="14.1" y="597" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="17.11" y="607.5" ></text>
</g>
<g >
<title>JVM_IHashCode (10 samples, 0.44%)</title><rect x="225.4" y="677" width="5.2" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="228.43" y="687.5" ></text>
</g>
<g >
<title>GenerateOopMap::compute_map(Thread*) (1 samples, 0.04%)</title><rect x="1173.5" y="821" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1176.55" y="831.5" ></text>
</g>
<g >
<title>Matcher::match() (3 samples, 0.13%)</title><rect x="1147.8" y="901" width="1.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1150.84" y="911.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmarksForked (3 samples, 0.13%)</title><rect x="1132.4" y="1061" width="1.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1135.41" y="1071.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor$1.close (1 samples, 0.04%)</title><rect x="16.2" y="101" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="19.17" y="111.5" ></text>
</g>
<g >
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.04%)</title><rect x="1180.2" y="949" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1183.23" y="959.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/Logger$PrivateConfig.filter (2 samples, 0.09%)</title><rect x="234.2" y="677" width="1.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="237.17" y="687.5" ></text>
</g>
<g >
<title>G1Predictions::stddev_estimate(TruncatedSeq const*) const (1 samples, 0.04%)</title><rect x="1118.5" y="325" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1121.53" y="335.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.stop (1 samples, 0.04%)</title><rect x="14.1" y="645" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="17.11" y="655.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.13%)</title><rect x="1166.9" y="757" width="1.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1169.86" y="767.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (41 samples, 1.79%)</title><rect x="610.0" y="789" width="21.1" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="613.03" y="799.5" ></text>
</g>
<g >
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (2 samples, 0.09%)</title><rect x="1135.0" y="901" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1137.98" y="911.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.04%)</title><rect x="1171.0" y="821" width="0.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1173.98" y="831.5" ></text>
</g>
<g >
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.04%)</title><rect x="1174.6" y="805" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1177.58" y="815.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.put (25 samples, 1.09%)</title><rect x="221.3" y="725" width="12.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="224.32" y="735.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileChannelImpl.implCloseChannel (2 samples, 0.09%)</title><rect x="16.2" y="165" width="1.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="19.17" y="175.5" ></text>
</g>
<g >
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.04%)</title><rect x="230.1" y="645" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="233.06" y="655.5" ></text>
</g>
<g >
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.04%)</title><rect x="1150.9" y="853" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1153.92" y="863.5" ></text>
</g>
<g >
<title>Monitor::ILock(Thread*) (2 samples, 0.09%)</title><rect x="1136.5" y="917" width="1.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1139.53" y="927.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="949" width="0.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="14.54" y="959.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (1 samples, 0.04%)</title><rect x="11.5" y="997" width="0.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="14.54" y="1007.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1118.0" y="645" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1121.02" y="655.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="1129.3" y="997" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1132.33" y="1007.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_jfr_sampler() (1 samples, 0.04%)</title><rect x="105.6" y="517" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="108.63" y="527.5" ></text>
</g>
<g >
<title>GenerateOopMap::do_interpretation() (1 samples, 0.04%)</title><rect x="1173.5" y="805" width="0.6" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1176.55" y="815.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (20 samples, 0.87%)</title><rect x="1098.0" y="853" width="10.2" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1100.97" y="863.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="11.5" y="757" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="14.54" y="767.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.run (1 samples, 0.04%)</title><rect x="11.5" y="1029" width="0.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="14.54" y="1039.5" ></text>
</g>
<g >
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.04%)</title><rect x="1152.0" y="885" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1154.95" y="895.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.26%)</title><rect x="1158.6" y="885" width="3.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1161.64" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cache (21 samples, 0.92%)</title><rect x="970.5" y="741" width="10.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="973.45" y="751.5" ></text>
</g>
<g >
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="821" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1164.21" y="831.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.lambda$profile$3 (1 samples, 0.04%)</title><rect x="1109.3" y="693" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1112.28" y="703.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pop (70 samples, 3.05%)</title><rect x="292.8" y="725" width="36.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="295.79" y="735.5" >io/..</text>
</g>
<g >
<title>org/abcde/logging/log4j/abcdeLoggerContext.close (1 samples, 0.04%)</title><rect x="14.1" y="581" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="17.11" y="591.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (1 samples, 0.04%)</title><rect x="230.6" y="677" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="233.58" y="687.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (1 samples, 0.04%)</title><rect x="196.1" y="565" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="199.13" y="575.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.04%)</title><rect x="1110.8" y="805" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1113.82" y="815.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAllUnchecked (3 samples, 0.13%)</title><rect x="15.7" y="389" width="1.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="18.66" y="399.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation() (1 samples, 0.04%)</title><rect x="95.4" y="533" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="98.35" y="543.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.siftDownUsingComparator (1 samples, 0.04%)</title><rect x="1129.8" y="997" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1132.84" y="1007.5" ></text>
</g>
<g >
<title>ciTypeFlow::do_flow() (1 samples, 0.04%)</title><rect x="1166.3" y="773" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1169.35" y="783.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (335 samples, 14.60%)</title><rect x="47.5" y="709" width="172.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="50.53" y="719.5" >java/lang/Throwable.fi..</text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stopInstances (1 samples, 0.04%)</title><rect x="14.1" y="693" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="17.11" y="703.5" ></text>
</g>
<g >
<title>CompiledMethod::is_compiled() const (1 samples, 0.04%)</title><rect x="194.1" y="581" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="197.07" y="591.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1108.2" y="693" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1111.25" y="703.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="90.2" y="581" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="93.21" y="591.5" ></text>
</g>
<g >
<title>PcDescCache::find_pc_desc(int, bool) (1 samples, 0.04%)</title><rect x="159.6" y="581" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="162.62" y="591.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1141.2" y="933" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1144.15" y="943.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (308 samples, 13.42%)</title><rect x="342.7" y="709" width="158.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="345.66" y="719.5" >io/netty/util/intern..</text>
</g>
<g >
<title>Agent_OnAttach (1 samples, 0.04%)</title><rect x="1180.2" y="933" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1183.23" y="943.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/RollingFileAppender.stop (1 samples, 0.04%)</title><rect x="14.1" y="485" width="0.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="17.11" y="495.5" ></text>
</g>
<g >
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 0.04%)</title><rect x="1171.0" y="933" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1173.98" y="943.5" ></text>
</g>
<g >
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1108.2" y="645" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1111.25" y="655.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithoutTypeInfo (1 samples, 0.04%)</title><rect x="1133.4" y="741" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1136.44" y="751.5" ></text>
</g>
<g >
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="597" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="15.57" y="607.5" ></text>
</g>
<g >
<title>org/abcde/kernel/database/Database.awaitAllClosingTransactions (1 samples, 0.04%)</title><rect x="14.6" y="629" width="0.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="17.63" y="639.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.first (1 samples, 0.04%)</title><rect x="1108.8" y="869" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1111.76" y="879.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider.findTypedValueSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="837" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1135.93" y="847.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="885" width="0.6" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="14.54" y="895.5" ></text>
</g>
<g >
<title>__block_descriptor_tmp (9 samples, 0.39%)</title><rect x="1141.7" y="981" width="4.6" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text  x="1144.67" y="991.5" ></text>
</g>
<g >
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.04%)</title><rect x="1172.5" y="773" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1175.52" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (297 samples, 12.94%)</title><rect x="348.3" y="693" width="152.7" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="351.32" y="703.5" >io/netty/util/inter..</text>
</g>
<g >
<title>LinearScan::do_linear_scan() (3 samples, 0.13%)</title><rect x="1175.6" y="869" width="1.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1178.60" y="879.5" ></text>
</g>
<g >
<title>LIR_Assembler::check_icache() (1 samples, 0.04%)</title><rect x="1175.1" y="821" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1178.09" y="831.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.flushAndCloseWithoutFail (1 samples, 0.04%)</title><rect x="15.1" y="501" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="18.14" y="511.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.22%)</title><rect x="1171.5" y="869" width="2.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1174.49" y="879.5" ></text>
</g>
<g >
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (2 samples, 0.09%)</title><rect x="229.5" y="661" width="1.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="232.55" y="671.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/BackgroundTask.run (24 samples, 1.05%)</title><rect x="1095.9" y="965" width="12.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1098.91" y="975.5" ></text>
</g>
<g >
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.04%)</title><rect x="1179.7" y="981" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1182.72" y="991.5" ></text>
</g>
<g >
<title>Block::Block(Arena*, Node*) (1 samples, 0.04%)</title><rect x="1149.4" y="869" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1152.38" y="879.5" ></text>
</g>
<g >
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.04%)</title><rect x="1118.5" y="437" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1121.53" y="447.5" ></text>
</g>
<g >
<title>Chunk::next() const (1 samples, 0.04%)</title><rect x="163.2" y="597" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="166.22" y="607.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/LocalNetworkPlatform.stop (1 samples, 0.04%)</title><rect x="12.6" y="821" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="15.57" y="831.5" ></text>
</g>
<g >
<title>org/abcde/internal/helpers/Format.duration (1 samples, 0.04%)</title><rect x="17.2" y="517" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="20.20" y="527.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (26 samples, 1.13%)</title><rect x="102.5" y="565" width="13.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="105.55" y="575.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory.getGarbageCollectorMXBeans (8 samples, 0.35%)</title><rect x="1117.0" y="901" width="4.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1119.99" y="911.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.close (2 samples, 0.09%)</title><rect x="16.2" y="213" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="19.17" y="223.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1117.0" y="805" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1119.99" y="815.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.04%)</title><rect x="1171.0" y="805" width="0.5" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1173.98" y="815.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (43 samples, 1.87%)</title><rect x="587.9" y="789" width="22.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="590.92" y="799.5" >i..</text>
</g>
<g >
<title>java/util/ComparableTimSort.sort (1 samples, 0.04%)</title><rect x="1119.0" y="565" width="0.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1122.05" y="575.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.putVal (23 samples, 1.00%)</title><rect x="222.3" y="709" width="11.9" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="225.35" y="719.5" ></text>
</g>
<g >
<title>ciMethod::has_balanced_monitors() (1 samples, 0.04%)</title><rect x="1173.5" y="837" width="0.6" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="1176.55" y="847.5" ></text>
</g>
<g >
<title>sun/misc/Unsafe.compareAndSwapLong (113 samples, 4.92%)</title><rect x="903.1" y="725" width="58.1" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="906.10" y="735.5" >sun/mi..</text>
</g>
<g >
<title>java/lang/ThreadLocal.getMap (32 samples, 1.39%)</title><rect x="875.3" y="645" width="16.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="878.33" y="655.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.04%)</title><rect x="12.1" y="1029" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="15.06" y="1039.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.04%)</title><rect x="1160.7" y="869" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1163.69" y="879.5" ></text>
</g>
<g >
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.04%)</title><rect x="1153.0" y="869" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1155.98" y="879.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/LocalNetworkPlatform.lambda$stop$1 (1 samples, 0.04%)</title><rect x="12.6" y="773" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="15.57" y="783.5" ></text>
</g>
<g >
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="597" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="14.54" y="607.5" ></text>
</g>
<g >
<title>io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (1 samples, 0.04%)</title><rect x="12.1" y="933" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="15.06" y="943.5" ></text>
</g>
<g >
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (1 samples, 0.04%)</title><rect x="1171.0" y="917" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1173.98" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1110.8" y="693" width="0.5" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1113.82" y="703.5" ></text>
</g>
<g >
<title>Unsafe_SetMemory0(JNIEnv_*, _jobject*, _jobject*, long, long, signed char) (1 samples, 0.04%)</title><rect x="12.1" y="693" width="0.5" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="15.06" y="703.5" ></text>
</g>
<g >
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.09%)</title><rect x="1136.5" y="933" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1139.53" y="943.5" ></text>
</g>
<g >
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="693" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1170.89" y="703.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.04%)</title><rect x="1177.1" y="917" width="0.6" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="1180.15" y="927.5" ></text>
</g>
<g >
<title>java/nio/file/Files.walkFileTree (2 samples, 0.09%)</title><rect x="13.1" y="741" width="1.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="16.08" y="751.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.04%)</title><rect x="1146.3" y="677" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1149.30" y="687.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (2,107 samples, 91.81%)</title><rect x="12.6" y="1029" width="1083.3" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="15.57" y="1039.5" >java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor$$Lambda$725/307540350.run (20 samples, 0.87%)</title><rect x="1110.8" y="965" width="10.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1113.82" y="975.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.reuse (24 samples, 1.05%)</title><rect x="266.6" y="757" width="12.3" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="269.57" y="767.5" ></text>
</g>
<g >
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.04%)</title><rect x="12.6" y="581" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="15.57" y="591.5" ></text>
</g>
<g >
<title>frame::is_interpreted_frame() const (5 samples, 0.22%)</title><rect x="165.3" y="613" width="2.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="168.28" y="623.5" ></text>
</g>
<g >
<title>LinkResolver::linktime_resolve_interface_method(LinkInfo const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="773" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1111.76" y="783.5" ></text>
</g>
<g >
<title>FormatBuffer&lt;256ul&gt;::append(char const*, ...) (1 samples, 0.04%)</title><rect x="1180.7" y="965" width="0.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1183.75" y="975.5" ></text>
</g>
<g >
<title>os::dll_address_to_library_name(unsigned char*, char*, int, int*) (1 samples, 0.04%)</title><rect x="1110.8" y="725" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1113.82" y="735.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/ExtendedLoggerWrapper.isEnabled (2 samples, 0.09%)</title><rect x="234.2" y="709" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="237.17" y="719.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1164.3" y="805" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1167.29" y="815.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="108.7" y="517" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="111.72" y="527.5" ></text>
</g>
<g >
<title>sun/management/spi/PlatformMBeanProvider$PlatformComponent.getMBeans (6 samples, 0.26%)</title><rect x="1118.0" y="725" width="3.1" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="1121.02" y="735.5" ></text>
</g>
<g >
<title>Matcher::match_tree(Node const*) (1 samples, 0.04%)</title><rect x="1148.4" y="869" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1151.35" y="879.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="853" width="0.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1161.64" y="863.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.windowsSafeIOOperation (1 samples, 0.04%)</title><rect x="1109.3" y="629" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1112.28" y="639.5" ></text>
</g>
<g >
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.04%)</title><rect x="1167.4" y="517" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1170.38" y="527.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.runAndReset (6 samples, 0.26%)</title><rect x="1121.1" y="1029" width="3.1" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1124.10" y="1039.5" ></text>
</g>
<g >
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="1181.3" y="981" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1184.26" y="991.5" ></text>
</g>
<g >
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1164.8" y="869" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1167.81" y="879.5" ></text>
</g>
<g >
<title>MemoryAccess&lt;int&gt;::MemoryAccess(JavaThread*, _jobject*, long) (1 samples, 0.04%)</title><rect x="1132.4" y="837" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1135.41" y="847.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.writeState (1 samples, 0.04%)</title><rect x="19.3" y="373" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="22.25" y="383.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (383 samples, 16.69%)</title><rect x="703.1" y="757" width="196.9" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="706.09" y="767.5" >io/netty/buffer/PoolThrea..</text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1148.9" y="869" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1151.87" y="879.5" ></text>
</g>
<g >
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="196.6" y="565" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="199.64" y="575.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.submit (3 samples, 0.13%)</title><rect x="1130.9" y="1013" width="1.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1133.87" y="1023.5" ></text>
</g>
<g >
<title>OopMapStream::find_next() (1 samples, 0.04%)</title><rect x="1129.3" y="837" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1132.33" y="847.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.parkEvictor (23 samples, 1.00%)</title><rect x="1096.4" y="901" width="11.8" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1099.42" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (1 samples, 0.04%)</title><rect x="11.5" y="1077" width="0.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="14.54" y="1087.5" ></text>
</g>
<g >
<title>VMThread::loop() (6 samples, 0.26%)</title><rect x="1180.7" y="997" width="3.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1183.75" y="1007.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="1129.8" y="933" width="0.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1132.84" y="943.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stop (10 samples, 0.44%)</title><rect x="14.6" y="757" width="5.2" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="17.63" y="767.5" ></text>
</g>
<g >
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="200.2" y="581" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="203.24" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (741 samples, 32.29%)</title><rect x="631.1" y="837" width="381.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="634.11" y="847.5" >io/netty/buffer/AbstractReferenceCountedByteBuf.han..</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1131.4" y="949" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1134.39" y="959.5" ></text>
</g>
<g >
<title>oopDesc::release_obj_field_put(int, oopDesc*) (1 samples, 0.04%)</title><rect x="214.1" y="613" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="217.12" y="623.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.09%)</title><rect x="1162.2" y="885" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1165.24" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1117.0" y="821" width="0.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1119.99" y="831.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="805" width="0.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="17.11" y="815.5" ></text>
</g>
<g >
<title>__psynch_cvwait (10 samples, 0.44%)</title><rect x="1183.8" y="933" width="5.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1186.83" y="943.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1181.8" y="981" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1184.77" y="991.5" ></text>
</g>
<g >
<title>Assembler::cmpq(RegisterImpl*, RegisterImpl*) (1 samples, 0.04%)</title><rect x="1175.1" y="805" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1178.09" y="815.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (3 samples, 0.13%)</title><rect x="1166.9" y="709" width="1.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1169.86" y="719.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/Logger.isEnabled (2 samples, 0.09%)</title><rect x="234.2" y="693" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="237.17" y="703.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="1129.3" y="965" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1132.33" y="975.5" ></text>
</g>
<g >
<title>sun/reflect/generics/repository/ConstructorRepository.getParameterTypes (1 samples, 0.04%)</title><rect x="1133.4" y="229" width="0.6" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="1136.44" y="239.5" ></text>
</g>
<g >
<title>Node::del_out(Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="773" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1164.21" y="783.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_dtrace_sampler() (1 samples, 0.04%)</title><rect x="107.2" y="533" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="110.18" y="543.5" ></text>
</g>
<g >
<title>EventMark::~EventMark() (1 samples, 0.04%)</title><rect x="1180.7" y="981" width="0.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1183.75" y="991.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.getGenericParameterTypes (1 samples, 0.04%)</title><rect x="1133.4" y="261" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1136.44" y="271.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.deallocate (741 samples, 32.29%)</title><rect x="631.1" y="821" width="381.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="634.11" y="831.5" >io/netty/buffer/PooledByteBuf.deallocate</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.17%)</title><rect x="1166.9" y="821" width="2.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1169.86" y="831.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="15.7" y="117" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="18.66" y="127.5" ></text>
</g>
<g >
<title>BacktraceBuilder::push(Method*, int, Thread*) (79 samples, 3.44%)</title><rect x="116.9" y="613" width="40.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="119.95" y="623.5" >Bac..</text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.enqueueTask (1 samples, 0.04%)</title><rect x="1110.3" y="933" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1113.31" y="943.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.04%)</title><rect x="1132.4" y="949" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1135.41" y="959.5" ></text>
</g>
<g >
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.04%)</title><rect x="51.1" y="645" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="54.13" y="655.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="14.6" y="437" width="0.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="17.63" y="447.5" ></text>
</g>
<g >
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.04%)</title><rect x="1174.6" y="821" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1177.58" y="831.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.cleanDirectory (2 samples, 0.09%)</title><rect x="13.1" y="821" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="16.08" y="831.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.04%)</title><rect x="1126.8" y="869" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1129.76" y="879.5" ></text>
</g>
<g >
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.04%)</title><rect x="1171.0" y="837" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1173.98" y="847.5" ></text>
</g>
<g >
<title>ThreadHeapSampler::enabled() (1 samples, 0.04%)</title><rect x="96.4" y="517" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="99.38" y="527.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/DeletingPathVisitor.visitFile (2 samples, 0.09%)</title><rect x="13.1" y="693" width="1.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="16.08" y="703.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink0 (1 samples, 0.04%)</title><rect x="1109.3" y="517" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1112.28" y="527.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1109.8" y="853" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1112.79" y="863.5" ></text>
</g>
<g >
<title>Parker::park(bool, long) (3 samples, 0.13%)</title><rect x="1124.7" y="933" width="1.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1127.70" y="943.5" ></text>
</g>
<g >
<title>stat64 (1 samples, 0.04%)</title><rect x="1132.9" y="517" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1135.93" y="527.5" ></text>
</g>
<g >
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (1 samples, 0.04%)</title><rect x="1118.5" y="357" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1121.53" y="367.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1166.3" y="837" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1169.35" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.run (10 samples, 0.44%)</title><rect x="1127.3" y="1077" width="5.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1130.27" y="1087.5" ></text>
</g>
<g >
<title>Node::add_out(Node*) (1 samples, 0.04%)</title><rect x="1148.9" y="853" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1151.87" y="863.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.stop (10 samples, 0.44%)</title><rect x="14.6" y="773" width="5.2" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="17.63" y="783.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) (1 samples, 0.04%)</title><rect x="1158.6" y="645" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1161.64" y="655.5" ></text>
</g>
<g >
<title>java/util/Arrays.sort (1 samples, 0.04%)</title><rect x="1119.0" y="581" width="0.6" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1122.05" y="591.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="1148.4" y="821" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1151.35" y="831.5" ></text>
</g>
<g >
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.04%)</title><rect x="1146.3" y="789" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1149.30" y="799.5" ></text>
</g>
<g >
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="225.4" y="645" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="228.43" y="655.5" ></text>
</g>
<g >
<title>__fcntl (1 samples, 0.04%)</title><rect x="17.7" y="309" width="0.5" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="20.71" y="319.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.casProducerIndex (2 samples, 0.09%)</title><rect x="1089.7" y="709" width="1.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1092.74" y="719.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (2 samples, 0.09%)</title><rect x="1088.7" y="645" width="1.0" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1091.71" y="655.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::check_out_of_memory() (1 samples, 0.04%)</title><rect x="104.1" y="533" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="107.09" y="543.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/AbstractLifeCycle.stop (1 samples, 0.04%)</title><rect x="14.1" y="533" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="17.11" y="543.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.serializeFields (1 samples, 0.04%)</title><rect x="1133.4" y="517" width="0.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1136.44" y="527.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1141.2" y="949" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1144.15" y="959.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsField (1 samples, 0.04%)</title><rect x="1133.4" y="501" width="0.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1136.44" y="511.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.getMap (5 samples, 0.22%)</title><rect x="498.5" y="661" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="501.45" y="671.5" ></text>
</g>
<g >
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="805" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1164.21" y="815.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.close (1 samples, 0.04%)</title><rect x="15.1" y="533" width="0.6" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="18.14" y="543.5" ></text>
</g>
<g >
<title>WatcherThread::sleep() const (11 samples, 0.48%)</title><rect x="1183.8" y="997" width="5.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1186.83" y="1007.5" ></text>
</g>
<g >
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="613" width="0.6" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="14.54" y="623.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.04%)</title><rect x="1180.7" y="917" width="0.6" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="1183.75" y="927.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1109.3" y="789" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1112.28" y="799.5" ></text>
</g>
<g >
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="725" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1111.76" y="735.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.04%)</title><rect x="1110.8" y="789" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1113.82" y="799.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (2 samples, 0.09%)</title><rect x="1088.7" y="629" width="1.0" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="1091.71" y="639.5" ></text>
</g>
<g >
<title>readdir$INODE64 (3 samples, 0.13%)</title><rect x="1122.6" y="901" width="1.6" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1125.64" y="911.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1108.2" y="837" width="0.6" height="15.0" fill="rgb(96,243,96)" rx="2" ry="2" />
<text  x="1111.25" y="847.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder$$Lambda$200/120776901.test (1 samples, 0.04%)</title><rect x="1117.0" y="709" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1119.99" y="719.5" ></text>
</g>
<g >
<title>sun/misc/Unsafe.compareAndSwapLong (2 samples, 0.09%)</title><rect x="1089.7" y="693" width="1.1" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1092.74" y="703.5" ></text>
</g>
<g >
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.04%)</title><rect x="1156.6" y="885" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1159.58" y="895.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="1131.4" y="917" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1134.39" y="927.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1118.0" y="677" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1121.02" y="687.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.flushAndForce (2 samples, 0.09%)</title><rect x="18.2" y="373" width="1.1" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="21.23" y="383.5" ></text>
</g>
<g >
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) (6 samples, 0.26%)</title><rect x="1158.6" y="901" width="3.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1161.64" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.04%)</title><rect x="1160.2" y="837" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1163.18" y="847.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (433 samples, 18.87%)</title><rect x="278.9" y="757" width="222.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="281.91" y="767.5" >io/netty/util/internal/Object..</text>
</g>
<g >
<title>java/util/ComparableTimSort.countRunAndMakeAscending (1 samples, 0.04%)</title><rect x="1119.0" y="549" width="0.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1122.05" y="559.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckPointerImpl.forceCheckPoint (5 samples, 0.22%)</title><rect x="17.2" y="581" width="2.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="20.20" y="591.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.04%)</title><rect x="1126.8" y="965" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1129.76" y="975.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="109.7" y="485" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="112.75" y="495.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (20 samples, 0.87%)</title><rect x="577.6" y="757" width="10.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="580.63" y="767.5" ></text>
</g>
<g >
<title>java/util/ArrayList.spliterator (1 samples, 0.04%)</title><rect x="1117.5" y="709" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1120.50" y="719.5" ></text>
</g>
<g >
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="549" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1170.89" y="559.5" ></text>
</g>
<g >
<title>java/nio/file/Files.getLastModifiedTime (1 samples, 0.04%)</title><rect x="1121.6" y="965" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1124.62" y="975.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="173.0" y="597" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="175.99" y="607.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="225.4" y="661" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="228.43" y="671.5" ></text>
</g>
<g >
<title>JVM_DefineClassWithSource (1 samples, 0.04%)</title><rect x="11.5" y="645" width="0.6" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="14.54" y="655.5" ></text>
</g>
<g >
<title>com/abcde/causalclustering/helper/ErrorHandler.execute (1 samples, 0.04%)</title><rect x="12.6" y="805" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="15.57" y="815.5" ></text>
</g>
<g >
<title>rcmd_af.canonnamebuf (1 samples, 0.04%)</title><rect x="16.2" y="53" width="0.5" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="19.17" y="63.5" ></text>
</g>
<g >
<title>Compilation::emit_code_body() (2 samples, 0.09%)</title><rect x="1174.6" y="885" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1177.58" y="895.5" ></text>
</g>
<g >
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.09%)</title><rect x="159.1" y="597" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="162.11" y="607.5" ></text>
</g>
<g >
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.04%)</title><rect x="839.9" y="645" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="842.86" y="655.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="1148.4" y="853" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="1151.35" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$7$1.accept (7 samples, 0.31%)</title><rect x="1117.5" y="773" width="3.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1120.50" y="783.5" ></text>
</g>
<g >
<title>java/util/HashMap.values (1 samples, 0.04%)</title><rect x="1120.1" y="709" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1123.07" y="719.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.04%)</title><rect x="1175.1" y="837" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1178.09" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions.terminateTransactions (1 samples, 0.04%)</title><rect x="14.6" y="613" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="17.63" y="623.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.close (3 samples, 0.13%)</title><rect x="15.7" y="341" width="1.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="18.66" y="351.5" ></text>
</g>
<g >
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, bool) (1 samples, 0.04%)</title><rect x="1180.2" y="869" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1183.23" y="879.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (30 samples, 1.31%)</title><rect x="100.5" y="581" width="15.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="103.49" y="591.5" ></text>
</g>
<g >
<title>ConstantPool::resolve_bootstrap_specifier_at(int, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="693" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="15.57" y="703.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (21 samples, 0.92%)</title><rect x="599.2" y="757" width="10.8" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="602.23" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$NormalMemoryRegionCache.initBuf (55 samples, 2.40%)</title><rect x="535.0" y="725" width="28.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="537.96" y="735.5" >i..</text>
</g>
<g >
<title>io/netty/buffer/PoolArena.free (568 samples, 24.75%)</title><rect x="699.0" y="805" width="292.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="701.98" y="815.5" >io/netty/buffer/PoolArena.free</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1110.8" y="853" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1113.82" y="863.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.readdir (3 samples, 0.13%)</title><rect x="1122.6" y="933" width="1.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1125.64" y="943.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.04%)</title><rect x="1109.3" y="725" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1112.28" y="735.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.17%)</title><rect x="1166.9" y="837" width="2.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1169.86" y="847.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedMain.main (3 samples, 0.13%)</title><rect x="1132.4" y="1093" width="1.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1135.41" y="1103.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="709" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1176.03" y="719.5" ></text>
</g>
<g >
<title>Node::has_special_unique_user() const (1 samples, 0.04%)</title><rect x="1160.7" y="805" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1163.69" y="815.5" ></text>
</g>
<g >
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1118.5" y="597" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1121.53" y="607.5" ></text>
</g>
<g >
<title>sun/management/Util.newObjectName (2 samples, 0.09%)</title><rect x="1118.5" y="661" width="1.1" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1121.53" y="671.5" ></text>
</g>
<g >
<title>java/util/concurrent/TimeUnit.values (1 samples, 0.04%)</title><rect x="17.2" y="501" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="20.20" y="511.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1108.8" y="677" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1111.76" y="687.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (16 samples, 0.70%)</title><rect x="891.8" y="693" width="8.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="894.79" y="703.5" ></text>
</g>
<g >
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="1155.0" y="869" width="0.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1158.04" y="879.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,171 samples, 51.02%)</title><rect x="29.0" y="837" width="602.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="32.02" y="847.5" >io/netty/buffer/AbstractByteBufAllocator.directBuffer</text>
</g>
<g >
<title>Method::bci_from(unsigned char*) const (2 samples, 0.09%)</title><rect x="161.7" y="613" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="164.68" y="623.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="109.7" y="501" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="112.75" y="511.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="677" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1176.03" y="687.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1167.4" y="437" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1170.38" y="447.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (22 samples, 0.96%)</title><rect x="1096.9" y="885" width="11.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1099.94" y="895.5" ></text>
</g>
<g >
<title>Block_Array::Block_Array(Arena*) (1 samples, 0.04%)</title><rect x="1149.4" y="853" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1152.38" y="863.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.forEachDatabase (10 samples, 0.44%)</title><rect x="14.6" y="725" width="5.2" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="17.63" y="735.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="677" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1161.64" y="687.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.04%)</title><rect x="1129.8" y="885" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1132.84" y="895.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/OutputStreamManager.flush (1 samples, 0.04%)</title><rect x="14.1" y="389" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="17.11" y="399.5" ></text>
</g>
<g >
<title>Parse::do_call() (6 samples, 0.26%)</title><rect x="1166.3" y="853" width="3.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1169.35" y="863.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.printf (1 samples, 0.04%)</title><rect x="1121.1" y="885" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1124.10" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="1117.0" y="773" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1119.99" y="783.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/DeletingPathVisitor.visitFile (2 samples, 0.09%)</title><rect x="13.1" y="709" width="1.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="16.08" y="719.5" ></text>
</g>
<g >
<title>Node::in(unsigned int) const (2 samples, 0.09%)</title><rect x="1162.2" y="821" width="1.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1165.24" y="831.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe.read (1 samples, 0.04%)</title><rect x="12.1" y="949" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="15.06" y="959.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.close (3 samples, 0.13%)</title><rect x="15.7" y="277" width="1.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="18.66" y="287.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (2 samples, 0.09%)</title><rect x="1132.9" y="885" width="1.1" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1135.93" y="895.5" ></text>
</g>
<g >
<title>java/lang/Object.hashCode (16 samples, 0.70%)</title><rect x="223.4" y="693" width="8.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="226.38" y="703.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileDispatcherImpl.force (1 samples, 0.04%)</title><rect x="17.7" y="357" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="20.71" y="367.5" ></text>
</g>
<g >
<title>itable stub (3 samples, 0.13%)</title><rect x="219.8" y="725" width="1.5" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="222.78" y="735.5" ></text>
</g>
<g >
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.04%)</title><rect x="146.3" y="581" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="149.25" y="591.5" ></text>
</g>
<g >
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="232.6" y="677" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="235.63" y="687.5" ></text>
</g>
<g >
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.04%)</title><rect x="1174.6" y="773" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1177.58" y="783.5" ></text>
</g>
<g >
<title>PhaseIFG::init(unsigned int) (1 samples, 0.04%)</title><rect x="1158.1" y="885" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1161.12" y="895.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="1179.7" y="933" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1182.72" y="943.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (1 samples, 0.04%)</title><rect x="17.7" y="501" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="20.71" y="511.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="549" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1176.03" y="559.5" ></text>
</g>
<g >
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.04%)</title><rect x="1172.5" y="789" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1175.52" y="799.5" ></text>
</g>
<g >
<title>java/lang/Class.getDeclaringClass0 (1 samples, 0.04%)</title><rect x="1133.4" y="101" width="0.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1136.44" y="111.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (336 samples, 14.64%)</title><rect x="328.8" y="725" width="172.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="331.78" y="735.5" >io/netty/util/concurre..</text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.09%)</title><rect x="1172.5" y="821" width="1.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1175.52" y="831.5" ></text>
</g>
<g >
<title>nmethod::scopes_pcs_begin() const (1 samples, 0.04%)</title><rect x="211.6" y="613" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="214.55" y="623.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.siftUpUsingComparator (1 samples, 0.04%)</title><rect x="1110.3" y="901" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1113.31" y="911.5" ></text>
</g>
<g >
<title>SystemDictionary::find_method_handle_invoker(Klass*, Symbol*, Symbol*, Klass*, Handle*, Handle*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="885" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1129.24" y="895.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.deallocate (9 samples, 0.39%)</title><rect x="1091.3" y="869" width="4.6" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1094.28" y="879.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_Throughput (2,107 samples, 91.81%)</title><rect x="12.6" y="901" width="1083.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="15.57" y="911.5" >com/abcde/bench/micro/benchmarks/cluster/raft/jmh_generated/AllocateAndFree_allocateAndFree_jmhTest.allocateAndFree_Throughput</text>
</g>
<g >
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1118.5" y="533" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1121.53" y="543.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1168.4" y="725" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1171.41" y="735.5" ></text>
</g>
<g >
<title>JavaThread::is_suspend_after_native() const (1 samples, 0.04%)</title><rect x="1107.7" y="821" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1110.73" y="831.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="1120.1" y="613" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1123.07" y="623.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="437" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1176.03" y="447.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKeys (1 samples, 0.04%)</title><rect x="12.1" y="997" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="15.06" y="1007.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializer.serialize (1 samples, 0.04%)</title><rect x="1133.4" y="581" width="0.6" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="1136.44" y="591.5" ></text>
</g>
<g >
<title>Compile::BuildOopMaps() (1 samples, 0.04%)</title><rect x="1146.8" y="885" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1149.81" y="895.5" ></text>
</g>
<g >
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.04%)</title><rect x="1179.2" y="981" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1182.20" y="991.5" ></text>
</g>
<g >
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.09%)</title><rect x="1128.8" y="1029" width="1.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1131.81" y="1039.5" ></text>
</g>
<g >
<title>MergeMemStream::set_memory(Node*) (1 samples, 0.04%)</title><rect x="1167.4" y="453" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1170.38" y="463.5" ></text>
</g>
<g >
<title>Parse::do_call() (2 samples, 0.09%)</title><rect x="1166.9" y="613" width="1.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1169.86" y="623.5" ></text>
</g>
<g >
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="1168.4" y="613" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1171.41" y="623.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolChunk.runLength (17 samples, 0.74%)</title><rect x="535.5" y="693" width="8.7" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="538.47" y="703.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="725" width="0.6" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1161.64" y="735.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.deleteDirectory (2 samples, 0.09%)</title><rect x="13.1" y="773" width="1.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="16.08" y="783.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_low_memory_detector() (1 samples, 0.04%)</title><rect x="96.9" y="533" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="99.89" y="543.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (10 samples, 0.44%)</title><rect x="1183.8" y="949" width="5.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1186.83" y="959.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1166.9" y="501" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1169.86" y="511.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (366 samples, 15.95%)</title><rect x="47.0" y="805" width="188.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="50.02" y="815.5" >io/netty/buffer/Abstract..</text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (2,156 samples, 93.94%)</title><rect x="12.6" y="1045" width="1108.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="15.57" y="1055.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.04%)</title><rect x="1141.2" y="981" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1144.15" y="991.5" ></text>
</g>
<g >
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1168.9" y="805" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1171.92" y="815.5" ></text>
</g>
<g >
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.04%)</title><rect x="1157.1" y="885" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1160.09" y="895.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="15.7" y="69" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="18.66" y="79.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::serialize_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.04%)</title><rect x="1174.6" y="741" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1177.58" y="751.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="805" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1161.64" y="815.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1109.3" y="741" width="0.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1112.28" y="751.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1168.4" y="693" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1171.41" y="703.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.findBeanOrAddOnSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="741" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1135.93" y="751.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack.clean (2 samples, 0.09%)</title><rect x="1126.2" y="997" width="1.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1129.24" y="1007.5" ></text>
</g>
<g >
<title>org/abcde/function/ThrowingAction.executeAll (3 samples, 0.13%)</title><rect x="15.7" y="581" width="1.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="18.66" y="591.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/OutputStreamManager.releaseSub (1 samples, 0.04%)</title><rect x="14.1" y="421" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="17.11" y="431.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.04%)</title><rect x="1107.7" y="837" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1110.73" y="847.5" ></text>
</g>
<g >
<title>__vfprintf (1 samples, 0.04%)</title><rect x="1180.7" y="869" width="0.6" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1183.75" y="879.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1150.9" y="837" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1153.92" y="847.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1173.0" y="741" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1176.03" y="751.5" ></text>
</g>
<g >
<title>nmethod::metadata_at(int) const (7 samples, 0.31%)</title><rect x="208.0" y="613" width="3.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="210.95" y="623.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="853" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1164.21" y="863.5" ></text>
</g>
<g >
<title>ciInstanceKlass::is_interface() (1 samples, 0.04%)</title><rect x="1168.9" y="773" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1171.92" y="783.5" ></text>
</g>
<g >
<title>ciMethod::get_flow_analysis() (1 samples, 0.04%)</title><rect x="1146.3" y="885" width="0.5" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1149.30" y="895.5" ></text>
</g>
<g >
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="15.7" y="197" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="18.66" y="207.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.init0 (23 samples, 1.00%)</title><rect x="546.3" y="661" width="11.8" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="549.27" y="671.5" ></text>
</g>
<g >
<title>compiler_barrier() (1 samples, 0.04%)</title><rect x="219.3" y="661" width="0.5" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="222.26" y="671.5" ></text>
</g>
<g >
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.04%)</title><rect x="10.5" y="1093" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="13.51" y="1103.5" ></text>
</g>
<g >
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.04%)</title><rect x="1146.3" y="917" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1149.30" y="927.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1118.5" y="485" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1121.53" y="495.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.size (2 samples, 0.09%)</title><rect x="1128.8" y="1013" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1131.81" y="1023.5" ></text>
</g>
<g >
<title>Monitor::ILock(Thread*) (1 samples, 0.04%)</title><rect x="839.9" y="597" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="842.86" y="607.5" ></text>
</g>
<g >
<title>java/nio/ByteBuffer.allocateDirect (1 samples, 0.04%)</title><rect x="12.1" y="773" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="15.06" y="783.5" ></text>
</g>
<g >
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.04%)</title><rect x="1180.7" y="933" width="0.6" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1183.75" y="943.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle.lambda$new$0 (5 samples, 0.22%)</title><rect x="1108.2" y="949" width="2.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1111.25" y="959.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1109.3" y="821" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1112.28" y="831.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1120.6" y="661" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1123.59" y="671.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (12 samples, 0.52%)</title><rect x="1075.3" y="853" width="6.2" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1078.34" y="863.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/indexed/IndexedIdGenerator.checkpoint (3 samples, 0.13%)</title><rect x="18.2" y="421" width="1.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="21.23" y="431.5" ></text>
</g>
<g >
<title>java/util/concurrent/TimeUnit.sleep (12 samples, 0.52%)</title><rect x="1110.8" y="917" width="6.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1113.82" y="927.5" ></text>
</g>
<g >
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.04%)</title><rect x="1149.4" y="901" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1152.38" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler.get (424 samples, 18.47%)</title><rect x="283.5" y="741" width="218.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="286.53" y="751.5" >io/netty/util/Recycler.get</text>
</g>
<g >
<title>java/lang/Class.getDeclaringClass (1 samples, 0.04%)</title><rect x="1133.4" y="117" width="0.6" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1136.44" y="127.5" ></text>
</g>
<g >
<title>java/lang/Throwable.&lt;init&gt; (336 samples, 14.64%)</title><rect x="47.0" y="725" width="172.8" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="50.02" y="735.5" >java/lang/Throwable.&lt;i..</text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cache (45 samples, 1.96%)</title><rect x="967.9" y="773" width="23.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="970.88" y="783.5" >i..</text>
</g>
<g >
<title>io/netty/util/Recycler.get (8 samples, 0.35%)</title><rect x="1085.6" y="693" width="4.1" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1088.63" y="703.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="61.4" y="629" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="64.42" y="639.5" ></text>
</g>
<g >
<title>ConstantPool::resolve_possibly_cached_constant_at(int, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="661" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="15.57" y="671.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.04%)</title><rect x="11.5" y="725" width="0.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="14.54" y="735.5" ></text>
</g>
<g >
<title>io/netty/handler/codec/ByteToMessageDecoder.channelInactive (1 samples, 0.04%)</title><rect x="11.5" y="853" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="14.54" y="863.5" ></text>
</g>
<g >
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.04%)</title><rect x="1118.5" y="405" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1121.53" y="415.5" ></text>
</g>
<g >
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1172.5" y="725" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1175.52" y="735.5" ></text>
</g>
<g >
<title>Monitor::ILock(Thread*) (1 samples, 0.04%)</title><rect x="1181.3" y="965" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1184.26" y="975.5" ></text>
</g>
<g >
<title>Unique_Node_List::push(Node*) (1 samples, 0.04%)</title><rect x="1169.9" y="885" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1172.95" y="895.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.deleteDirectory (2 samples, 0.09%)</title><rect x="13.1" y="837" width="1.0" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="16.08" y="847.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1167.4" y="549" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1170.38" y="559.5" ></text>
</g>
<g >
<title>java/lang/Thread.sleep (12 samples, 0.52%)</title><rect x="1110.8" y="885" width="6.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1113.82" y="895.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/SingleFilePageSwapper.force (1 samples, 0.04%)</title><rect x="17.7" y="405" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="20.71" y="415.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/Profile.parseProfileName (1 samples, 0.04%)</title><rect x="1108.2" y="565" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1111.25" y="575.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannel$AbstractUnsafe$8.run (1 samples, 0.04%)</title><rect x="11.5" y="981" width="0.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="14.54" y="991.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent.getInt (1 samples, 0.04%)</title><rect x="1016.7" y="805" width="0.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1019.73" y="815.5" ></text>
</g>
<g >
<title>os::sleep(Thread*, long, bool) (11 samples, 0.48%)</title><rect x="1111.3" y="853" width="5.7" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1114.33" y="863.5" ></text>
</g>
<g >
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="207.4" y="613" width="0.6" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="210.44" y="623.5" ></text>
</g>
<g >
<title>ConstantPool::resolve_bootstrap_specifier_at_impl(constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="677" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="15.57" y="687.5" ></text>
</g>
<g >
<title>MemAllocator::finish(HeapWord*) const (2 samples, 0.09%)</title><rect x="97.4" y="533" width="1.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="100.41" y="543.5" ></text>
</g>
<g >
<title>CompiledMethod::is_compiled() const (3 samples, 0.13%)</title><rect x="173.5" y="597" width="1.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="176.50" y="607.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/AbstractManager.stop (1 samples, 0.04%)</title><rect x="14.1" y="453" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="17.11" y="463.5" ></text>
</g>
<g >
<title>EnableIf&lt;HasDecorator&lt;1097844ull, MO_UNORDERED&gt;::value, oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::load_internal&lt;1097844ull, oopDesc*&gt;(void*) (3 samples, 0.13%)</title><rect x="149.9" y="565" width="1.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="152.85" y="575.5" ></text>
</g>
<g >
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1152.5" y="885" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1155.47" y="895.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle$$Lambda$895/853575939.run (5 samples, 0.22%)</title><rect x="1108.2" y="965" width="2.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1111.25" y="975.5" ></text>
</g>
<g >
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="1132.4" y="885" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1135.41" y="895.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider.findValueSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="821" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1135.93" y="831.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.04%)</title><rect x="1131.4" y="885" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1134.39" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1108.2" y="677" width="0.6" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1111.25" y="687.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pushNow (16 samples, 0.70%)</title><rect x="1003.9" y="757" width="8.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1006.87" y="767.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.04%)</title><rect x="1129.8" y="917" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1132.84" y="927.5" ></text>
</g>
<g >
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1172.0" y="725" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1175.00" y="735.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createUntypedSerializer (1 samples, 0.04%)</title><rect x="1133.4" y="421" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1136.44" y="431.5" ></text>
</g>
<g >
<title>IfNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1164.8" y="853" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1167.81" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1117.0" y="789" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1119.99" y="799.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.constructBeanOrAddOnSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="725" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1135.93" y="735.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1129.3" y="933" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1132.33" y="943.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (6 samples, 0.26%)</title><rect x="1121.1" y="1013" width="3.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1124.10" y="1023.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (3 samples, 0.13%)</title><rect x="1132.4" y="1013" width="1.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1135.41" y="1023.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.04%)</title><rect x="12.1" y="853" width="0.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="15.06" y="863.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions.markAllTransactionsAsTerminated (1 samples, 0.04%)</title><rect x="14.6" y="597" width="0.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="17.63" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.lambda$deleteFile$1 (1 samples, 0.04%)</title><rect x="1109.3" y="597" width="0.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1112.28" y="607.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invokehandle(JavaThread*) (1 samples, 0.04%)</title><rect x="1126.2" y="949" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1129.24" y="959.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.poll (26 samples, 1.13%)</title><rect x="563.2" y="725" width="13.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="566.24" y="735.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._createSerializer2 (1 samples, 0.04%)</title><rect x="1133.4" y="389" width="0.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1136.44" y="399.5" ></text>
</g>
<g >
<title>PhaseCFG::move_to_end(Block*, unsigned int) (1 samples, 0.04%)</title><rect x="1151.4" y="885" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1154.44" y="895.5" ></text>
</g>
<g >
<title>sun/nio/ch/FileLockTable.removeAll (1 samples, 0.04%)</title><rect x="16.7" y="149" width="0.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="19.68" y="159.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.soRefElement (5 samples, 0.22%)</title><rect x="965.3" y="741" width="2.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="968.31" y="751.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1132.9" y="677" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1135.93" y="687.5" ></text>
</g>
<g >
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="853" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1129.24" y="863.5" ></text>
</g>
<g >
<title>LinearScan::build_intervals() (1 samples, 0.04%)</title><rect x="1176.1" y="853" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1179.12" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 0.04%)</title><rect x="1159.7" y="821" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1162.66" y="831.5" ></text>
</g>
<g >
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.04%)</title><rect x="15.7" y="149" width="0.5" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="18.66" y="159.5" ></text>
</g>
<g >
<title>find_lowest_bit(unsigned int) (1 samples, 0.04%)</title><rect x="1152.5" y="837" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1155.47" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.trim (2 samples, 0.09%)</title><rect x="576.6" y="741" width="1.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="579.61" y="751.5" ></text>
</g>
<g >
<title>sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl.make (1 samples, 0.04%)</title><rect x="1133.4" y="149" width="0.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1136.44" y="159.5" ></text>
</g>
<g >
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="15.7" y="181" width="0.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="18.66" y="191.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_opendir0 (1 samples, 0.04%)</title><rect x="1122.1" y="901" width="0.5" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="1125.13" y="911.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializer.serialize (1 samples, 0.04%)</title><rect x="1133.4" y="821" width="0.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1136.44" y="831.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="1132.4" y="933" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1135.41" y="943.5" ></text>
</g>
<g >
<title>Parse::do_call() (2 samples, 0.09%)</title><rect x="1166.9" y="693" width="1.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1169.86" y="703.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="17.2" y="453" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="20.20" y="463.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores$$Lambda$1203/803616122.accept (3 samples, 0.13%)</title><rect x="18.2" y="485" width="1.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="21.23" y="495.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1118.5" y="629" width="1.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1121.53" y="639.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (23 samples, 1.00%)</title><rect x="103.1" y="549" width="11.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="106.06" y="559.5" ></text>
</g>
<g >
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (1 samples, 0.04%)</title><rect x="1171.0" y="949" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1173.98" y="959.5" ></text>
</g>
<g >
<title>frame::interpreter_frame_bcp() const (2 samples, 0.09%)</title><rect x="164.2" y="613" width="1.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="167.25" y="623.5" ></text>
</g>
<g >
<title>__unlink (2 samples, 0.09%)</title><rect x="13.1" y="581" width="1.0" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="16.08" y="591.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.close (3 samples, 0.13%)</title><rect x="15.7" y="549" width="1.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="18.66" y="559.5" ></text>
</g>
<g >
<title>BlockListBuilder::set_leaders() (1 samples, 0.04%)</title><rect x="1172.0" y="805" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1175.00" y="815.5" ></text>
</g>
<g >
<title>__gettimeofday (2 samples, 0.09%)</title><rect x="1098.0" y="821" width="1.0" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="1100.97" y="831.5" ></text>
</g>
<g >
<title>ciMethod::bci_block_start() (1 samples, 0.04%)</title><rect x="1172.0" y="789" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1175.00" y="799.5" ></text>
</g>
<g >
<title>Type::Initialize(Compile*) (2 samples, 0.09%)</title><rect x="1165.3" y="901" width="1.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1168.32" y="911.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_lir_list(LIR_List*) (2 samples, 0.09%)</title><rect x="1174.6" y="853" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1177.58" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::Dominators() (1 samples, 0.04%)</title><rect x="1161.7" y="885" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1164.72" y="895.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/BaseRegularBenchmark.onTearDown (14 samples, 0.61%)</title><rect x="12.6" y="869" width="7.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="15.57" y="879.5" ></text>
</g>
<g >
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.compareAndSet (113 samples, 4.92%)</title><rect x="1017.2" y="805" width="58.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1020.24" y="815.5" >java/u..</text>
</g>
<g >
<title>Parse::do_all_blocks() (6 samples, 0.26%)</title><rect x="1166.3" y="885" width="3.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1169.35" y="895.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (5 samples, 0.22%)</title><rect x="1138.1" y="933" width="2.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1141.07" y="943.5" ></text>
</g>
<g >
<title>MethodLiveness::compute_liveness() (1 samples, 0.04%)</title><rect x="1172.0" y="773" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1175.00" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.tryFinalRelease0 (113 samples, 4.92%)</title><rect x="1017.2" y="821" width="58.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1020.24" y="831.5" >io/net..</text>
</g>
<g >
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.04%)</title><rect x="11.5" y="709" width="0.6" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="14.54" y="719.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (8 samples, 0.35%)</title><rect x="1085.6" y="725" width="4.1" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1088.63" y="735.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.lambda$closeStoreFile$3 (3 samples, 0.13%)</title><rect x="15.7" y="453" width="1.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="18.66" y="463.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.04%)</title><rect x="1163.3" y="885" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1166.26" y="895.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.unlink (1 samples, 0.04%)</title><rect x="1109.3" y="533" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1112.28" y="543.5" ></text>
</g>
<g >
<title>LinearScan::split_child_at_op_id(Interval*, int, LIR_OpVisitState::OprMode) (1 samples, 0.04%)</title><rect x="1176.6" y="821" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1179.63" y="831.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="1045" width="0.5" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.04%)</title><rect x="1124.2" y="1013" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1127.19" y="1023.5" ></text>
</g>
<g >
<title>Unsafe_PutInt(JNIEnv_*, _jobject*, _jobject*, long, int) (1 samples, 0.04%)</title><rect x="1132.4" y="853" width="0.5" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="1135.41" y="863.5" ></text>
</g>
<g >
<title>com/abcde/causalclustering/net/Server.stop (1 samples, 0.04%)</title><rect x="12.6" y="757" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="15.57" y="767.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileAttributeViews$Basic.readAttributes (1 samples, 0.04%)</title><rect x="1121.6" y="917" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1124.62" y="927.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/WarmupAvailabilityListener$$Lambda$977/165277160.run (3 samples, 0.13%)</title><rect x="1108.2" y="933" width="1.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1111.25" y="943.5" ></text>
</g>
<g >
<title>sun/reflect/generics/visitor/Reifier.visitClassTypeSignature (1 samples, 0.04%)</title><rect x="1133.4" y="181" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1136.44" y="191.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1120.1" y="645" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1123.07" y="655.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="453" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1176.03" y="463.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="389" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1176.03" y="399.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 0.04%)</title><rect x="14.6" y="373" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="17.63" y="383.5" ></text>
</g>
<g >
<title>ThreadShadow::clear_pending_exception() (3 samples, 0.13%)</title><rect x="57.3" y="629" width="1.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="60.30" y="639.5" ></text>
</g>
<g >
<title>localeconv_l (1 samples, 0.04%)</title><rect x="1180.7" y="853" width="0.6" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="1183.75" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1159.7" y="853" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1162.66" y="863.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.add (562 samples, 24.49%)</title><rect x="702.1" y="789" width="288.9" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="705.06" y="799.5" >io/netty/buffer/PoolThreadCache.add</text>
</g>
<g >
<title>CodeBlob::is_zombie() const (1 samples, 0.04%)</title><rect x="201.8" y="565" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="204.78" y="575.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1179.7" y="949" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1182.72" y="959.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/OutputStreamManager.closeOutputStream (1 samples, 0.04%)</title><rect x="14.1" y="405" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="17.11" y="415.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.get (153 samples, 6.67%)</title><rect x="813.1" y="693" width="78.7" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="816.12" y="703.5" >io/netty/..</text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="757" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1176.03" y="767.5" ></text>
</g>
<g >
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="163.2" y="613" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="166.22" y="623.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="325" width="0.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="17.11" y="335.5" ></text>
</g>
<g >
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.04%)</title><rect x="1167.4" y="469" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1170.38" y="479.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.addCount (2 samples, 0.09%)</title><rect x="233.1" y="693" width="1.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="236.15" y="703.5" ></text>
</g>
<g >
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1148.9" y="821" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1151.87" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.newChunk (1 samples, 0.04%)</title><rect x="12.1" y="805" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="15.06" y="815.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (3 samples, 0.13%)</title><rect x="1124.7" y="997" width="1.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1127.70" y="1007.5" ></text>
</g>
<g >
<title>OopMapValue::read_from(CompressedReadStream*) (1 samples, 0.04%)</title><rect x="1129.3" y="821" width="0.5" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="1132.33" y="831.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.getVarHandleGuardMethodName (1 samples, 0.04%)</title><rect x="1126.8" y="917" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1129.76" y="927.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.09%)</title><rect x="1174.6" y="869" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1177.58" y="879.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="1124.7" y="965" width="1.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1127.70" y="975.5" ></text>
</g>
<g >
<title>CodeBlob::is_compiled() const (2 samples, 0.09%)</title><rect x="171.4" y="597" width="1.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="174.45" y="607.5" ></text>
</g>
<g >
<title>OtherRegionsTable::occ_fine() const (1 samples, 0.04%)</title><rect x="1137.6" y="917" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1140.56" y="927.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.track0 (366 samples, 15.95%)</title><rect x="47.0" y="773" width="188.2" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="50.02" y="783.5" >io/netty/util/ResourceLe..</text>
</g>
<g >
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1118.0" y="661" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1121.02" y="671.5" ></text>
</g>
<g >
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (1 samples, 0.04%)</title><rect x="56.8" y="629" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="59.79" y="639.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1120.1" y="693" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1123.07" y="703.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.doSingle (3 samples, 0.13%)</title><rect x="1132.4" y="1045" width="1.6" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="1135.41" y="1055.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.getGcStats (8 samples, 0.35%)</title><rect x="1117.0" y="917" width="4.1" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1119.99" y="927.5" ></text>
</g>
<g >
<title>java/util/WeakHashMap.remove (2 samples, 0.09%)</title><rect x="1081.5" y="773" width="1.0" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1084.51" y="783.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (64 samples, 2.79%)</title><rect x="1146.3" y="981" width="32.9" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1149.30" y="991.5" >Co..</text>
</g>
<g >
<title>Parker::park(bool, long) (3 samples, 0.13%)</title><rect x="1127.3" y="1013" width="1.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1130.27" y="1023.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.13%)</title><rect x="90.7" y="581" width="1.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="93.72" y="591.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.04%)</title><rect x="14.6" y="453" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="17.63" y="463.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.reportGauge (1 samples, 0.04%)</title><rect x="1121.1" y="933" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1124.10" y="943.5" ></text>
</g>
<g >
<title>sun/management/Util.newObjectName (2 samples, 0.09%)</title><rect x="1118.5" y="677" width="1.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1121.53" y="687.5" ></text>
</g>
<g >
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1173.0" y="357" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1176.03" y="367.5" ></text>
</g>
<g >
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="11.0" y="1093" width="0.5" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="14.03" y="1103.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/BasicBeanDescription.findJsonValueAccessor (1 samples, 0.04%)</title><rect x="1133.4" y="357" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1136.44" y="367.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.continuouslySweepPages (24 samples, 1.05%)</title><rect x="1095.9" y="933" width="12.3" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1098.91" y="943.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="757" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1111.76" y="767.5" ></text>
</g>
<g >
<title>sun/nio/fs/PollingWatchService$PollingWatchKey.poll (5 samples, 0.22%)</title><rect x="1121.6" y="981" width="2.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1124.62" y="991.5" ></text>
</g>
<g >
<title>_pthread_cond_wait (1 samples, 0.04%)</title><rect x="1107.2" y="821" width="0.5" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1110.22" y="831.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (13 samples, 0.57%)</title><rect x="1152.0" y="901" width="6.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1154.95" y="911.5" ></text>
</g>
<g >
<title>GenerateOopMap::interp_all() (1 samples, 0.04%)</title><rect x="1173.5" y="789" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1176.55" y="799.5" ></text>
</g>
<g >
<title>sun/reflect/generics/tree/ClassTypeSignature.accept (1 samples, 0.04%)</title><rect x="1133.4" y="197" width="0.6" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1136.44" y="207.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="469" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1176.03" y="479.5" ></text>
</g>
<g >
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.04%)</title><rect x="1132.4" y="901" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1135.41" y="911.5" ></text>
</g>
<g >
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1146.3" y="757" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1149.30" y="767.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="1131.4" y="933" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1134.39" y="943.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (30 samples, 1.31%)</title><rect x="178.6" y="581" width="15.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="181.64" y="591.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory (1 samples, 0.04%)</title><rect x="12.1" y="725" width="0.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="15.06" y="735.5" ></text>
</g>
<g >
<title>org/abcde/util/concurrent/Runnables.runAll (3 samples, 0.13%)</title><rect x="15.7" y="485" width="1.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="18.66" y="495.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1146.3" y="821" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1149.30" y="831.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.lvRefElement (1 samples, 0.04%)</title><rect x="577.1" y="645" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="580.12" y="655.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.lambda$flush$0 (3 samples, 0.13%)</title><rect x="18.2" y="469" width="1.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="21.23" y="479.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/BufferingIdGenerator.checkpoint (3 samples, 0.13%)</title><rect x="18.2" y="453" width="1.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="21.23" y="463.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/appender/AbstractOutputStreamAppender.stop (1 samples, 0.04%)</title><rect x="14.1" y="469" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="17.11" y="479.5" ></text>
</g>
<g >
<title>_dispatch_queue_attrs (1 samples, 0.04%)</title><rect x="1180.2" y="853" width="0.5" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1183.23" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (1 samples, 0.04%)</title><rect x="1108.2" y="853" width="0.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1111.25" y="863.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.closeStore (3 samples, 0.13%)</title><rect x="15.7" y="533" width="1.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="18.66" y="543.5" ></text>
</g>
<g >
<title>Node::del_out(Node*) (1 samples, 0.04%)</title><rect x="1164.3" y="789" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1167.29" y="799.5" ></text>
</g>
<g >
<title>AdapterHandlerLibrary::create_native_wrapper(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1110.8" y="773" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1113.82" y="783.5" ></text>
</g>
<g >
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.09%)</title><rect x="1163.8" y="853" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1166.78" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor$4.run (1 samples, 0.04%)</title><rect x="11.5" y="1045" width="0.6" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="14.54" y="1055.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/EvictionTask.run (24 samples, 1.05%)</title><rect x="1095.9" y="949" width="12.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1098.91" y="959.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (10 samples, 0.44%)</title><rect x="95.4" y="549" width="5.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="98.35" y="559.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (1 samples, 0.04%)</title><rect x="14.6" y="277" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="17.63" y="287.5" ></text>
</g>
<g >
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.17%)</title><rect x="227.5" y="597" width="2.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="230.49" y="607.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1168.4" y="709" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1171.41" y="719.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="17.2" y="437" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="20.20" y="447.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1164.8" y="885" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1167.81" y="895.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString (1 samples, 0.04%)</title><rect x="1133.4" y="645" width="0.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1136.44" y="655.5" ></text>
</g>
<g >
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.04%)</title><rect x="1180.2" y="965" width="0.5" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1183.23" y="975.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/StoreFileChannel.close (2 samples, 0.09%)</title><rect x="16.2" y="197" width="1.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="19.17" y="207.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.unmap (3 samples, 0.13%)</title><rect x="15.7" y="261" width="1.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="18.66" y="271.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter._findAndAddDynamic (1 samples, 0.04%)</title><rect x="1133.4" y="485" width="0.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1136.44" y="495.5" ></text>
</g>
<g >
<title>oopDesc* BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.04%)</title><rect x="143.2" y="597" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="146.17" y="607.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.release (123 samples, 5.36%)</title><rect x="1012.1" y="837" width="63.2" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1015.10" y="847.5" >io/net..</text>
</g>
<g >
<title>sun/misc/Unsafe.getObjectVolatile (1 samples, 0.04%)</title><rect x="577.1" y="629" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="580.12" y="639.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="1132.9" y="645" width="0.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1135.93" y="655.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector._addCreators (1 samples, 0.04%)</title><rect x="1133.4" y="309" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1136.44" y="319.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1131.4" y="965" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1134.39" y="975.5" ></text>
</g>
<g >
<title>org/abcde/logging/log4j/RotatingLogFileWriter.printf (1 samples, 0.04%)</title><rect x="1121.1" y="901" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1124.10" y="911.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="1160.2" y="821" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1163.18" y="831.5" ></text>
</g>
<g >
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1173.0" y="341" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1176.03" y="351.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="839.9" y="565" width="0.5" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="842.86" y="575.5" ></text>
</g>
<g >
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.04%)</title><rect x="1118.5" y="341" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1121.53" y="351.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findSerializerByAnnotations (1 samples, 0.04%)</title><rect x="1133.4" y="373" width="0.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1136.44" y="383.5" ></text>
</g>
<g >
<title>PathFrequency::to(Node*) (1 samples, 0.04%)</title><rect x="1158.6" y="613" width="0.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1161.64" y="623.5" ></text>
</g>
<g >
<title>JNU_GetStringPlatformChars (1 samples, 0.04%)</title><rect x="14.6" y="325" width="0.5" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="17.63" y="335.5" ></text>
</g>
<g >
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.04%)</title><rect x="1146.3" y="661" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1149.30" y="671.5" ></text>
</g>
<g >
<title>org/apache/commons/io/FileUtils.forceDelete (2 samples, 0.09%)</title><rect x="13.1" y="805" width="1.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="16.08" y="815.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/config/AbstractConfiguration.stop (1 samples, 0.04%)</title><rect x="14.1" y="501" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="17.11" y="511.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (517 samples, 22.53%)</title><rect x="702.1" y="773" width="265.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="705.06" y="783.5" >io/netty/buffer/PoolThreadCache$Mem..</text>
</g>
<g >
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="109.2" y="501" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="112.23" y="511.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.31%)</title><rect x="1117.5" y="805" width="3.6" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1120.50" y="815.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (1 samples, 0.04%)</title><rect x="195.6" y="549" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="198.61" y="559.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAllSilently (1 samples, 0.04%)</title><rect x="14.1" y="629" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="17.11" y="639.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (1 samples, 0.04%)</title><rect x="17.7" y="517" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="20.71" y="527.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.unmap (1 samples, 0.04%)</title><rect x="15.1" y="517" width="0.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="18.14" y="527.5" ></text>
</g>
<g >
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (5 samples, 0.22%)</title><rect x="227.0" y="645" width="2.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="229.98" y="655.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stopInstances (10 samples, 0.44%)</title><rect x="14.6" y="789" width="5.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="17.63" y="799.5" ></text>
</g>
<g >
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1168.9" y="837" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1171.92" y="847.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.init (37 samples, 1.61%)</title><rect x="544.2" y="693" width="19.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="547.21" y="703.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCursor.closeLinks (1 samples, 0.04%)</title><rect x="19.3" y="325" width="0.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="22.25" y="335.5" ></text>
</g>
<g >
<title>MethodLiveness::init_gen_kill() (1 samples, 0.04%)</title><rect x="1172.0" y="757" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1175.00" y="767.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (2 samples, 0.09%)</title><rect x="1166.9" y="629" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1169.86" y="639.5" ></text>
</g>
<g >
<title>EnableIf&lt;!(AccessInternal::MustConvertCompressedOop&lt;1097844ull, oopDesc*&gt;::value), oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::decode_internal&lt;1097844ull, oopDesc*&gt;(oopDesc*) (1 samples, 0.04%)</title><rect x="145.7" y="581" width="0.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="148.74" y="591.5" ></text>
</g>
<g >
<title>RegMask::is_bound1() const (1 samples, 0.04%)</title><rect x="1149.9" y="837" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1152.90" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/AbstractExecutorService.submit (1 samples, 0.04%)</title><rect x="1131.9" y="981" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1134.90" y="991.5" ></text>
</g>
<g >
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.04%)</title><rect x="1168.4" y="645" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1171.41" y="655.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (2 samples, 0.09%)</title><rect x="137.5" y="597" width="1.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="140.51" y="607.5" ></text>
</g>
<g >
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="629" width="0.6" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="14.54" y="639.5" ></text>
</g>
<g >
<title>sun/misc/Unsafe.getLong (8 samples, 0.35%)</title><rect x="559.1" y="613" width="4.1" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="562.12" y="623.5" ></text>
</g>
<g >
<title>java/lang/Thread.run (2,180 samples, 94.99%)</title><rect x="11.5" y="1093" width="1120.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="14.54" y="1103.5" >java/lang/Thread.run</text>
</g>
<g >
<title>java/lang/ThreadLocal.get (295 samples, 12.85%)</title><rect x="349.3" y="677" width="151.7" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="352.35" y="687.5" >java/lang/ThreadLoc..</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper._writeValueAndClose (2 samples, 0.09%)</title><rect x="1132.9" y="869" width="1.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1135.93" y="879.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::idom(unsigned int) const (2 samples, 0.09%)</title><rect x="1162.2" y="853" width="1.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1165.24" y="863.5" ></text>
</g>
<g >
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (53 samples, 2.31%)</title><rect x="89.7" y="613" width="27.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="92.69" y="623.5" >B..</text>
</g>
<g >
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.04%)</title><rect x="1174.6" y="757" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="1177.58" y="767.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1117.0" y="725" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1119.99" y="735.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter.lambda$start$0 (1 samples, 0.04%)</title><rect x="1121.1" y="981" width="0.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1124.10" y="991.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue.poll (2 samples, 0.09%)</title><rect x="1126.2" y="1029" width="1.1" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1129.24" y="1039.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1120.1" y="629" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1123.07" y="639.5" ></text>
</g>
<g >
<title>java/io/File.exists (1 samples, 0.04%)</title><rect x="14.6" y="389" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="17.63" y="399.5" ></text>
</g>
<g >
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.13%)</title><rect x="1149.9" y="901" width="1.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1152.90" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.lvRefElement (4 samples, 0.17%)</title><rect x="574.5" y="709" width="2.1" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="577.55" y="719.5" ></text>
</g>
<g >
<title>_pthread_start (109 samples, 4.75%)</title><rect x="1134.0" y="1077" width="56.0" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1136.96" y="1087.5" >_pthr..</text>
</g>
<g >
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long long) (1 samples, 0.04%)</title><rect x="1167.9" y="661" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1170.89" y="671.5" ></text>
</g>
<g >
<title>LinearScan::resolve_data_flow() (1 samples, 0.04%)</title><rect x="1176.6" y="853" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1179.63" y="863.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="901" width="0.6" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="14.54" y="911.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.04%)</title><rect x="14.6" y="469" width="0.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="17.63" y="479.5" ></text>
</g>
<g >
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="172.5" y="597" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="175.47" y="607.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1173.0" y="421" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1176.03" y="431.5" ></text>
</g>
<g >
<title>__psynch_cvwait (3 samples, 0.13%)</title><rect x="1124.7" y="917" width="1.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1127.70" y="927.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1179.2" y="965" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1182.20" y="975.5" ></text>
</g>
<g >
<title>Arena::Amalloc_4(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="90.2" y="597" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="93.21" y="607.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory (1 samples, 0.04%)</title><rect x="12.1" y="741" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="15.06" y="751.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1129.3" y="949" width="0.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1132.33" y="959.5" ></text>
</g>
<g >
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.04%)</title><rect x="1161.7" y="869" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1164.72" y="879.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="805" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1111.76" y="815.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.collectAll (1 samples, 0.04%)</title><rect x="1133.4" y="325" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1136.44" y="335.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (2 samples, 0.09%)</title><rect x="225.9" y="661" width="1.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="228.95" y="671.5" ></text>
</g>
<g >
<title>Node::is_top() const (1 samples, 0.04%)</title><rect x="1148.4" y="741" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1151.35" y="751.5" ></text>
</g>
<g >
<title>sun/management/ManagementFactoryHelper.getGarbageCollectorMXBeans (1 samples, 0.04%)</title><rect x="1119.6" y="693" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1122.56" y="703.5" ></text>
</g>
<g >
<title>Profiler::run(Arguments&amp;) (1 samples, 0.04%)</title><rect x="1180.2" y="917" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1183.23" y="927.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1164.8" y="837" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1167.81" y="847.5" ></text>
</g>
<g >
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="645" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="15.57" y="655.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="277" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="17.11" y="287.5" ></text>
</g>
<g >
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1146.3" y="645" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="1149.30" y="655.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.invoke (2,107 samples, 91.81%)</title><rect x="12.6" y="965" width="1083.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="15.57" y="975.5" >java/lang/reflect/Method.invoke</text>
</g>
<g >
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.04%)</title><rect x="1148.4" y="805" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1151.35" y="815.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.09%)</title><rect x="1166.9" y="661" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1169.86" y="671.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1157.6" y="869" width="0.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1160.61" y="879.5" ></text>
</g>
<g >
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="629" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="15.57" y="639.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (1 samples, 0.04%)</title><rect x="17.7" y="453" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="20.71" y="463.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (1 samples, 0.04%)</title><rect x="1133.4" y="725" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1136.44" y="735.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1164.8" y="901" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1167.81" y="911.5" ></text>
</g>
<g >
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.04%)</title><rect x="1131.4" y="869" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1134.39" y="879.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.04%)</title><rect x="11.5" y="1061" width="0.6" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="14.54" y="1071.5" ></text>
</g>
<g >
<title>java/util/ComparableTimSort.reverseRange (1 samples, 0.04%)</title><rect x="1119.0" y="533" width="0.6" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="1122.05" y="543.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap$KeySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1109.8" y="805" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1112.79" y="815.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.flushAndForce (1 samples, 0.04%)</title><rect x="17.7" y="485" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="20.71" y="495.5" ></text>
</g>
<g >
<title>JVM_Clone (1 samples, 0.04%)</title><rect x="17.2" y="469" width="0.5" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="20.20" y="479.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.free (11 samples, 0.48%)</title><rect x="1085.6" y="773" width="5.7" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1088.63" y="783.5" ></text>
</g>
<g >
<title>IndexSetIterator::next() (1 samples, 0.04%)</title><rect x="1155.0" y="853" width="0.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1158.04" y="863.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions.lambda$markAllTransactionsAsTerminated$2 (1 samples, 0.04%)</title><rect x="14.6" y="549" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="17.63" y="559.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.findExistingProfiles (1 samples, 0.04%)</title><rect x="1108.2" y="885" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1111.25" y="895.5" ></text>
</g>
<g >
<title>G1BarrierSet::enqueue_if_weak(unsigned long long, oopDesc*) (1 samples, 0.04%)</title><rect x="139.1" y="597" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="142.05" y="607.5" ></text>
</g>
<g >
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.44%)</title><rect x="95.4" y="565" width="5.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="98.35" y="575.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.push (28 samples, 1.22%)</title><rect x="997.7" y="773" width="14.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1000.70" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent0.directBufferAddress (12 samples, 0.52%)</title><rect x="492.3" y="645" width="6.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="495.28" y="655.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (500 samples, 21.79%)</title><rect x="244.5" y="789" width="257.0" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="247.46" y="799.5" >io/netty/buffer/PoolArena$DirectAr..</text>
</g>
<g >
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (4 samples, 0.17%)</title><rect x="52.2" y="597" width="2.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="55.16" y="607.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (5 samples, 0.22%)</title><rect x="1138.1" y="965" width="2.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1141.07" y="975.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 0.04%)</title><rect x="14.6" y="405" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="17.63" y="415.5" ></text>
</g>
<g >
<title>CompileQueue::get() (4 samples, 0.17%)</title><rect x="1177.1" y="965" width="2.1" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1180.15" y="975.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.04%)</title><rect x="14.6" y="357" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="17.63" y="367.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2,107 samples, 91.81%)</title><rect x="12.6" y="997" width="1083.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="15.57" y="1007.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1170.5" y="901" width="0.5" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1173.46" y="911.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DefaultDatabaseManager.stopDatabase (10 samples, 0.44%)</title><rect x="14.6" y="677" width="5.2" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="17.63" y="687.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.submit (3 samples, 0.13%)</title><rect x="1130.9" y="997" width="1.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1133.87" y="1007.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="725" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="17.11" y="735.5" ></text>
</g>
<g >
<title>OrderAccess::fence() (3 samples, 0.13%)</title><rect x="49.1" y="645" width="1.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="52.08" y="655.5" ></text>
</g>
<g >
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.09%)</title><rect x="1169.4" y="901" width="1.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1172.43" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.2" y="837" width="0.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1183.23" y="847.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.04%)</title><rect x="11.5" y="677" width="0.6" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="14.54" y="687.5" ></text>
</g>
<g >
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="1171.0" y="853" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1173.98" y="863.5" ></text>
</g>
<g >
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.04%)</title><rect x="839.9" y="629" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="842.86" y="639.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.09%)</title><rect x="1162.2" y="869" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1165.24" y="879.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (1 samples, 0.04%)</title><rect x="1133.4" y="613" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1136.44" y="623.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.closeStoreFile (3 samples, 0.13%)</title><rect x="15.7" y="501" width="1.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="18.66" y="511.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent0.getInt (1 samples, 0.04%)</title><rect x="1016.7" y="789" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1019.73" y="799.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.13%)</title><rect x="1166.9" y="741" width="1.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1169.86" y="751.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="15.7" y="85" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="18.66" y="95.5" ></text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1179.7" y="917" width="0.5" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="1182.72" y="927.5" ></text>
</g>
<g >
<title>BitMap::at_put(unsigned long, bool) (1 samples, 0.04%)</title><rect x="1172.0" y="709" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1175.00" y="719.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.isErrorEnabled (2 samples, 0.09%)</title><rect x="234.2" y="725" width="1.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="237.17" y="735.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedMethod.getParameterType (1 samples, 0.04%)</title><rect x="1133.4" y="277" width="0.6" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="1136.44" y="287.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager$$Lambda$1187/1351940678.accept (10 samples, 0.44%)</title><rect x="14.6" y="709" width="5.2" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="17.63" y="719.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="1128.8" y="981" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1131.81" y="991.5" ></text>
</g>
<g >
<title>CodeBlob::is_zombie() const (2 samples, 0.09%)</title><rect x="177.6" y="581" width="1.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="180.62" y="591.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1109.3" y="757" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1112.28" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (864 samples, 37.65%)</title><rect x="631.1" y="853" width="444.2" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="634.11" y="863.5" >io/netty/buffer/AbstractReferenceCountedByteBuf.release</text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1179.2" y="949" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1182.20" y="959.5" ></text>
</g>
<g >
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="15.7" y="37" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="18.66" y="47.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.profile (3 samples, 0.13%)</title><rect x="1108.2" y="901" width="1.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1111.25" y="911.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.remove (3 samples, 0.13%)</title><rect x="1082.5" y="773" width="1.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1085.54" y="783.5" ></text>
</g>
<g >
<title>Parse::do_call() (4 samples, 0.17%)</title><rect x="1166.9" y="773" width="2.0" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1169.86" y="783.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1132.4" y="917" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1135.41" y="927.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.offer (1 samples, 0.04%)</title><rect x="1110.3" y="917" width="0.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="1113.31" y="927.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,169 samples, 94.51%)</title><rect x="12.1" y="1077" width="1115.2" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="15.06" y="1087.5" >java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="1160.2" y="853" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1163.18" y="863.5" ></text>
</g>
<g >
<title>JavaThread::run() (67 samples, 2.92%)</title><rect x="1146.3" y="1013" width="34.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1149.30" y="1023.5" >Ja..</text>
</g>
<g >
<title>java/nio/file/Files.newDirectoryStream (1 samples, 0.04%)</title><rect x="1122.1" y="965" width="0.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1125.13" y="975.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.remove (1 samples, 0.04%)</title><rect x="1129.8" y="1029" width="0.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1132.84" y="1039.5" ></text>
</g>
<g >
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="581" width="0.5" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1170.89" y="591.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor.close0 (1 samples, 0.04%)</title><rect x="16.2" y="69" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="19.17" y="79.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.serializeFields (1 samples, 0.04%)</title><rect x="1133.4" y="805" width="0.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1136.44" y="815.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (2 samples, 0.09%)</title><rect x="18.2" y="357" width="1.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="21.23" y="367.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.free (2 samples, 0.09%)</title><rect x="576.6" y="677" width="1.0" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="579.61" y="687.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions$$Lambda$1196/1986352301.accept (1 samples, 0.04%)</title><rect x="14.6" y="565" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="17.63" y="575.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1167.4" y="597" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1170.38" y="607.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/DatabasePageCache$DatabasePageFile.close (1 samples, 0.04%)</title><rect x="15.1" y="549" width="0.6" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="18.14" y="559.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (3 samples, 0.13%)</title><rect x="18.2" y="405" width="1.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="21.23" y="415.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.getJsonValueAccessor (1 samples, 0.04%)</title><rect x="1133.4" y="341" width="0.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1136.44" y="351.5" ></text>
</g>
<g >
<title>java/io/FileDescriptor.close (1 samples, 0.04%)</title><rect x="16.2" y="85" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="19.17" y="95.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.putInt (1 samples, 0.04%)</title><rect x="1132.4" y="869" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1135.41" y="879.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/util/UnsafeRefArrayAccess.calcCircularRefElementOffset (5 samples, 0.22%)</title><rect x="572.0" y="709" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="574.98" y="719.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.deallocate (13 samples, 0.57%)</title><rect x="1084.6" y="789" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1087.60" y="799.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.trim (2 samples, 0.09%)</title><rect x="576.6" y="709" width="1.0" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="579.61" y="719.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.init (23 samples, 1.00%)</title><rect x="546.3" y="677" width="11.8" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="549.27" y="687.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.04%)</title><rect x="1120.6" y="709" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1123.59" y="719.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer$$Lambda$971/429341673.apply (1 samples, 0.04%)</title><rect x="1108.2" y="597" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1111.25" y="607.5" ></text>
</g>
<g >
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="11.5" y="789" width="0.6" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="14.54" y="799.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (2 samples, 0.09%)</title><rect x="1163.8" y="885" width="1.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1166.78" y="895.5" ></text>
</g>
<g >
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.04%)</title><rect x="1141.2" y="917" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1144.15" y="927.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stopAllDatabases (10 samples, 0.44%)</title><rect x="14.6" y="741" width="5.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="17.63" y="751.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1,171 samples, 51.02%)</title><rect x="29.0" y="853" width="602.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="32.02" y="863.5" >io/netty/buffer/AbstractByteBufAllocator.directBuffer</text>
</g>
<g >
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (3 samples, 0.13%)</title><rect x="1135.0" y="933" width="1.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1137.98" y="943.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="549" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="14.54" y="559.5" ></text>
</g>
<g >
<title>CodeBlob::is_zombie() const (1 samples, 0.04%)</title><rect x="200.8" y="581" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="203.75" y="591.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.04%)</title><rect x="1108.2" y="741" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1111.25" y="751.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1108.8" y="821" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1111.76" y="831.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1118.5" y="517" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1121.53" y="527.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeTypedFields (1 samples, 0.04%)</title><rect x="1133.4" y="709" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1136.44" y="719.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.loadClass (1 samples, 0.04%)</title><rect x="14.6" y="501" width="0.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="17.63" y="511.5" ></text>
</g>
<g >
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.04%)</title><rect x="1157.1" y="869" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1160.09" y="879.5" ></text>
</g>
<g >
<title>Java_sun_nio_fs_UnixNativeDispatcher_readdir (3 samples, 0.13%)</title><rect x="1122.6" y="917" width="1.6" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1125.64" y="927.5" ></text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine.shutdown (3 samples, 0.13%)</title><rect x="15.7" y="597" width="1.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="18.66" y="607.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.04%)</title><rect x="12.1" y="869" width="0.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="15.06" y="879.5" ></text>
</g>
<g >
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1166.9" y="517" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1169.86" y="527.5" ></text>
</g>
<g >
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::~ScopedFence() (2 samples, 0.09%)</title><rect x="52.2" y="565" width="1.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="55.16" y="575.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1173.0" y="629" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1176.03" y="639.5" ></text>
</g>
<g >
<title>io/netty/util/internal/PlatformDependent0.directBufferAddress (8 samples, 0.35%)</title><rect x="559.1" y="645" width="4.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="562.12" y="655.5" ></text>
</g>
<g >
<title>com/abcde/metrics/output/RotatableCsvReporter.report (1 samples, 0.04%)</title><rect x="1121.1" y="917" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1124.10" y="927.5" ></text>
</g>
<g >
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (2 samples, 0.09%)</title><rect x="1135.0" y="885" width="1.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1137.98" y="895.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="773" width="0.6" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1161.64" y="783.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.04%)</title><rect x="1174.6" y="837" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1177.58" y="847.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.createSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="773" width="0.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1135.93" y="783.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pop (97 samples, 4.23%)</title><rect x="747.8" y="709" width="49.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="750.82" y="719.5" >io/ne..</text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createUntypedSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="789" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1135.93" y="799.5" ></text>
</g>
<g >
<title>NativeLookup::lookup_critical_entry(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1110.8" y="757" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1113.82" y="767.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1126.2" y="965" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1129.24" y="975.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool$$Lambda$726/1473194130.call (49 samples, 2.14%)</title><rect x="1095.9" y="997" width="25.2" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="1098.91" y="1007.5" >o..</text>
</g>
<g >
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.04%)</title><rect x="1180.2" y="901" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1183.23" y="911.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.allocateNormal (111 samples, 4.84%)</title><rect x="530.8" y="773" width="57.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="533.85" y="783.5" >io/net..</text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (4 samples, 0.17%)</title><rect x="1177.1" y="949" width="2.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1180.15" y="959.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/AnnotatedWithParams.getParameter (1 samples, 0.04%)</title><rect x="1133.4" y="293" width="0.6" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1136.44" y="303.5" ></text>
</g>
<g >
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::load&lt;oopDesc*&gt;(void*) (1 samples, 0.04%)</title><rect x="151.4" y="565" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="154.39" y="575.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerLimitField.lvProducerLimit (7 samples, 0.31%)</title><rect x="961.7" y="741" width="3.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="964.71" y="751.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (38 samples, 1.66%)</title><rect x="175.0" y="597" width="19.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="178.05" y="607.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (48 samples, 2.09%)</title><rect x="1146.3" y="949" width="24.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1149.30" y="959.5" >C..</text>
</g>
<g >
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.initMemoryAddress (10 samples, 0.44%)</title><rect x="558.1" y="677" width="5.1" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="561.10" y="687.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/WarmupAvailabilityListener.doProfile (3 samples, 0.13%)</title><rect x="1108.2" y="917" width="1.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1111.25" y="927.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="10.5" y="1029" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="13.51" y="1039.5" ></text>
</g>
<g >
<title>__psynch_cvwait (11 samples, 0.48%)</title><rect x="1111.3" y="821" width="5.7" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="1114.33" y="831.5" ></text>
</g>
<g >
<title>org/abcde/internal/index/label/NativeTokenScanStore.force (1 samples, 0.04%)</title><rect x="17.7" y="533" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="20.71" y="543.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (9 samples, 0.39%)</title><rect x="1141.7" y="997" width="4.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1144.67" y="1007.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.readStatePages (1 samples, 0.04%)</title><rect x="19.3" y="357" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="22.25" y="367.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1120.6" y="613" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1123.59" y="623.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.indexedVariable (1 samples, 0.04%)</title><rect x="501.0" y="709" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="504.02" y="719.5" ></text>
</g>
<g >
<title>sun/reflect/generics/factory/CoreReflectionFactory.makeParameterizedType (1 samples, 0.04%)</title><rect x="1133.4" y="165" width="0.6" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1136.44" y="175.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="773" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="17.11" y="783.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializer.serialize (1 samples, 0.04%)</title><rect x="1133.4" y="533" width="0.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1136.44" y="543.5" ></text>
</g>
<g >
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.04%)</title><rect x="1160.7" y="821" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1163.69" y="831.5" ></text>
</g>
<g >
<title>lstat64 (1 samples, 0.04%)</title><rect x="1121.6" y="853" width="0.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="1124.62" y="863.5" ></text>
</g>
<g >
<title>ScopedFenceGeneral&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.04%)</title><rect x="228.5" y="581" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="231.52" y="591.5" ></text>
</g>
<g >
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.04%)</title><rect x="15.7" y="213" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="18.66" y="223.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1179.2" y="933" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1182.20" y="943.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.hasNext (3 samples, 0.13%)</title><rect x="1122.6" y="965" width="1.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1125.64" y="975.5" ></text>
</g>
<g >
<title>_vsnprintf (1 samples, 0.04%)</title><rect x="1180.7" y="901" width="0.6" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1183.75" y="911.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1109.3" y="853" width="0.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1112.28" y="863.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="613" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1176.03" y="623.5" ></text>
</g>
<g >
<title>LinearScan::handle_method_arguments(LIR_Op*) (1 samples, 0.04%)</title><rect x="1176.1" y="837" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1179.12" y="847.5" ></text>
</g>
<g >
<title>OtherRegionsTable::occupied() const (1 samples, 0.04%)</title><rect x="1137.6" y="933" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1140.56" y="943.5" ></text>
</g>
<g >
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.04%)</title><rect x="1183.3" y="981" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1186.32" y="991.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_dtrace_sampler() (1 samples, 0.04%)</title><rect x="95.9" y="533" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="98.86" y="543.5" ></text>
</g>
<g >
<title>Compile::Output() (1 samples, 0.04%)</title><rect x="1146.8" y="901" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1149.81" y="911.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="597" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1176.03" y="607.5" ></text>
</g>
<g >
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.09%)</title><rect x="1155.6" y="869" width="1.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1158.55" y="879.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="1148.4" y="789" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1151.35" y="799.5" ></text>
</g>
<g >
<title>com/abcde/bench/model/util/JsonUtil.serializeJson (1 samples, 0.04%)</title><rect x="1133.4" y="661" width="0.6" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="1136.44" y="671.5" ></text>
</g>
<g >
<title>sun/reflect/generics/repository/ConstructorRepository.computeParameterTypes (1 samples, 0.04%)</title><rect x="1133.4" y="213" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1136.44" y="223.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (2,107 samples, 91.81%)</title><rect x="12.6" y="1013" width="1083.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="15.57" y="1023.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>Method::invocation_count() (1 samples, 0.04%)</title><rect x="10.0" y="1013" width="0.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::run_service() (13 samples, 0.57%)</title><rect x="1134.0" y="997" width="6.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1136.96" y="1007.5" ></text>
</g>
<g >
<title>VMThread::execute(VM_Operation*) (1 samples, 0.04%)</title><rect x="10.5" y="1045" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="13.51" y="1055.5" ></text>
</g>
<g >
<title>nmethod::scopes_pcs_end() const (2 samples, 0.09%)</title><rect x="212.1" y="613" width="1.0" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="215.07" y="623.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1120.1" y="677" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1123.07" y="687.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (2 samples, 0.09%)</title><rect x="1162.2" y="837" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1165.24" y="847.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/CommonAbstractStore.close (3 samples, 0.13%)</title><rect x="15.7" y="517" width="1.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="18.66" y="527.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="789" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1111.76" y="799.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.04%)</title><rect x="1146.3" y="725" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1149.30" y="735.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.26%)</title><rect x="1166.3" y="901" width="3.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1169.35" y="911.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.shutdown (9 samples, 0.39%)</title><rect x="15.1" y="629" width="4.7" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="18.14" y="639.5" ></text>
</g>
<g >
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1167.9" y="629" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1170.89" y="639.5" ></text>
</g>
<g >
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (16 samples, 0.70%)</title><rect x="143.7" y="597" width="8.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="146.68" y="607.5" ></text>
</g>
<g >
<title>GraphKit::clone_map() (1 samples, 0.04%)</title><rect x="1167.4" y="501" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1170.38" y="511.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (318 samples, 13.86%)</title><rect x="55.2" y="645" width="163.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="58.25" y="655.5" >java_lang_Throwable::..</text>
</g>
<g >
<title>java/io/File.exists (1 samples, 0.04%)</title><rect x="1132.9" y="565" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1135.93" y="575.5" ></text>
</g>
<g >
<title>thread_start (109 samples, 4.75%)</title><rect x="1134.0" y="1093" width="56.0" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1136.96" y="1103.5" >threa..</text>
</g>
<g >
<title>org/abcde/internal/recordstorage/RecordStorageEngine.flushAndForce (3 samples, 0.13%)</title><rect x="18.2" y="533" width="1.6" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="21.23" y="543.5" ></text>
</g>
<g >
<title>com/abcde/bench/micro/benchmarks/cluster/EditionModuleBackedAbstractBenchmark.benchmarkTearDown (14 samples, 0.61%)</title><rect x="12.6" y="853" width="7.2" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="15.57" y="863.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.04%)</title><rect x="12.6" y="741" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="15.57" y="751.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (2 samples, 0.09%)</title><rect x="160.6" y="597" width="1.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="163.65" y="607.5" ></text>
</g>
<g >
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.04%)</title><rect x="1167.4" y="533" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1170.38" y="543.5" ></text>
</g>
<g >
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.04%)</title><rect x="1126.8" y="901" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1129.76" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ThreadExecutorMap$2.run (1 samples, 0.04%)</title><rect x="12.1" y="1045" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="15.06" y="1055.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (2,107 samples, 91.81%)</title><rect x="12.6" y="981" width="1083.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="15.57" y="991.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>sun/misc/Unsafe.putOrderedObject (5 samples, 0.22%)</title><rect x="965.3" y="725" width="2.6" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="968.31" y="735.5" ></text>
</g>
<g >
<title>__v2printf (1 samples, 0.04%)</title><rect x="1180.7" y="885" width="0.6" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1183.75" y="895.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1173.0" y="373" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1176.03" y="383.5" ></text>
</g>
<g >
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="677" width="0.5" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1170.89" y="687.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2,107 samples, 91.81%)</title><rect x="12.6" y="949" width="1083.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="15.57" y="959.5" >jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g >
<title>WatcherThread::run() (12 samples, 0.52%)</title><rect x="1183.8" y="1013" width="6.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1186.83" y="1023.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.doClose (1 samples, 0.04%)</title><rect x="15.1" y="565" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="18.14" y="575.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="1171.0" y="757" width="0.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1173.98" y="767.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.trim (2 samples, 0.09%)</title><rect x="576.6" y="725" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="579.61" y="735.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageSafely (1 samples, 0.04%)</title><rect x="1121.1" y="869" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1124.10" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.2" y="821" width="0.5" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="1183.23" y="831.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap$Node.&lt;init&gt; (3 samples, 0.13%)</title><rect x="231.6" y="693" width="1.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="234.60" y="703.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1167.4" y="581" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1170.38" y="591.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1109.8" y="869" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1112.79" y="879.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.13%)</title><rect x="1124.7" y="949" width="1.5" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="1127.70" y="959.5" ></text>
</g>
<g >
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (2 samples, 0.09%)</title><rect x="16.2" y="181" width="1.0" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="19.17" y="191.5" ></text>
</g>
<g >
<title>G1CollectionSet::add_young_region_common(HeapRegion*) (1 samples, 0.04%)</title><rect x="1118.5" y="389" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1121.53" y="399.5" ></text>
</g>
<g >
<title>java/lang/Thread.sleep (12 samples, 0.52%)</title><rect x="1110.8" y="901" width="6.2" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1113.82" y="911.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="14.1" y="309" width="0.5" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="17.11" y="319.5" ></text>
</g>
<g >
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.04%)</title><rect x="1175.6" y="821" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1178.60" y="831.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.readAttributes (1 samples, 0.04%)</title><rect x="1121.6" y="933" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1124.62" y="943.5" ></text>
</g>
<g >
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.09%)</title><rect x="1163.8" y="837" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1166.78" y="847.5" ></text>
</g>
<g >
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.04%)</title><rect x="14.6" y="341" width="0.5" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="17.63" y="351.5" ></text>
</g>
<g >
<title>GrowableArray&lt;float&gt;::at_grow(int, float const&amp;) (1 samples, 0.04%)</title><rect x="1158.6" y="597" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1161.64" y="607.5" ></text>
</g>
<g >
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.04%)</title><rect x="1175.6" y="837" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1178.60" y="847.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.close (1 samples, 0.04%)</title><rect x="15.1" y="581" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="18.14" y="591.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="773" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1176.03" y="783.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/AsyncProfiler.onMeasurementFinished (2 samples, 0.09%)</title><rect x="1132.9" y="949" width="1.1" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="1135.93" y="959.5" ></text>
</g>
<g >
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.04%)</title><rect x="1168.4" y="661" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1171.41" y="671.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, Method*), Method*, CompLevel, bool) (1 samples, 0.04%)</title><rect x="10.0" y="1029" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.closeAllUnchecked (3 samples, 0.13%)</title><rect x="15.7" y="373" width="1.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="18.66" y="383.5" ></text>
</g>
<g >
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 0.04%)</title><rect x="1132.9" y="533" width="0.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1135.93" y="543.5" ></text>
</g>
<g >
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="12.1" y="757" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="15.06" y="767.5" ></text>
</g>
<g >
<title>Klass::java_mirror() const (7 samples, 0.31%)</title><rect x="139.6" y="597" width="3.6" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="142.57" y="607.5" ></text>
</g>
<g >
<title>java/lang/invoke/MethodHandleNatives.varHandleOperationLinkerMethod (1 samples, 0.04%)</title><rect x="1126.8" y="933" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1129.76" y="943.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.09%)</title><rect x="195.1" y="565" width="1.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="198.10" y="575.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.findFilterId (1 samples, 0.04%)</title><rect x="1132.9" y="693" width="0.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1135.93" y="703.5" ></text>
</g>
<g >
<title>JavaThread::pd_last_frame() (2 samples, 0.09%)</title><rect x="160.6" y="613" width="1.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="163.65" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.2" y="773" width="0.5" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1183.23" y="783.5" ></text>
</g>
<g >
<title>java/time/Instant.now (2 samples, 0.09%)</title><rect x="1130.9" y="981" width="1.0" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1133.87" y="991.5" ></text>
</g>
<g >
<title>Compile::Optimize() (13 samples, 0.57%)</title><rect x="1158.6" y="917" width="6.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1161.64" y="927.5" ></text>
</g>
<g >
<title>org/abcde/internal/index/label/NativeTokenScanStore.shutdown (1 samples, 0.04%)</title><rect x="15.1" y="597" width="0.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="18.14" y="607.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.closeSwapper (1 samples, 0.04%)</title><rect x="15.1" y="485" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="18.14" y="495.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$$Lambda$201/476146316.apply (7 samples, 0.31%)</title><rect x="1117.5" y="757" width="3.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1120.50" y="767.5" ></text>
</g>
<g >
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.04%)</title><rect x="109.7" y="453" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="112.75" y="463.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ObjectMapper._writeValueAndClose (1 samples, 0.04%)</title><rect x="1133.4" y="629" width="0.6" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1136.44" y="639.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="869" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1161.64" y="879.5" ></text>
</g>
<g >
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.set (1 samples, 0.04%)</title><rect x="1084.1" y="789" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1087.08" y="799.5" ></text>
</g>
<g >
<title>org/abcde/internal/helpers/Format.duration (1 samples, 0.04%)</title><rect x="17.2" y="549" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="20.20" y="559.5" ></text>
</g>
<g >
<title>com/abcde/metrics/global/GlobalMetricsExtension.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="741" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="17.11" y="751.5" ></text>
</g>
<g >
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1167.9" y="613" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1170.89" y="623.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.visitFileTree (2 samples, 0.09%)</title><rect x="13.1" y="757" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="16.08" y="767.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1173.0" y="725" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1176.03" y="735.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ull&gt;::oop_access_barrier(void*) (2 samples, 0.09%)</title><rect x="88.7" y="613" width="1.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="91.67" y="623.5" ></text>
</g>
<g >
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="837" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1164.21" y="847.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.13%)</title><rect x="1155.0" y="885" width="1.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1158.04" y="895.5" ></text>
</g>
<g >
<title>Thread::call_run() (109 samples, 4.75%)</title><rect x="1134.0" y="1029" width="56.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1136.96" y="1039.5" >Threa..</text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForce (1 samples, 0.04%)</title><rect x="17.7" y="469" width="0.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="20.71" y="479.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (1 samples, 0.04%)</title><rect x="17.7" y="421" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="20.71" y="431.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1120.6" y="645" width="0.5" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="1123.59" y="655.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="96.4" y="533" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="99.38" y="543.5" ></text>
</g>
<g >
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="160.1" y="613" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="163.14" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 0.04%)</title><rect x="1132.9" y="581" width="0.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1135.93" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cache (4 samples, 0.17%)</title><rect x="585.9" y="741" width="2.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="588.86" y="751.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="1171.0" y="773" width="0.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="1173.98" y="783.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.doFlushAndForceInternal (2 samples, 0.09%)</title><rect x="18.2" y="309" width="1.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="21.23" y="319.5" ></text>
</g>
<g >
<title>java/util/concurrent/PriorityBlockingQueue.removeAt (1 samples, 0.04%)</title><rect x="1129.8" y="1013" width="0.6" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1132.84" y="1023.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueProducerIndexField.lvProducerIndex (1 samples, 0.04%)</title><rect x="961.2" y="741" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="964.20" y="751.5" ></text>
</g>
<g >
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.04%)</title><rect x="1108.8" y="661" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1111.76" y="671.5" ></text>
</g>
<g >
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1146.3" y="837" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1149.30" y="847.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/RecordingDescriptor$RecordingDescriptorKeySerializer.serialize (1 samples, 0.04%)</title><rect x="1133.4" y="693" width="0.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1136.44" y="703.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokehandle(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="933" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1129.24" y="943.5" ></text>
</g>
<g >
<title>fstatfs$INODE64 (1 samples, 0.04%)</title><rect x="1122.1" y="869" width="0.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1125.13" y="879.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1129.3" y="901" width="0.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1132.33" y="911.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler.runIteration (3 samples, 0.13%)</title><rect x="1132.4" y="997" width="1.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1135.41" y="1007.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1173.0" y="485" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1176.03" y="495.5" ></text>
</g>
<g >
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1150.9" y="869" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1153.92" y="879.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (9 samples, 0.39%)</title><rect x="189.4" y="549" width="4.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="192.44" y="559.5" ></text>
</g>
<g >
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="581" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="14.54" y="591.5" ></text>
</g>
<g >
<title>AbsSeq::davg() const (1 samples, 0.04%)</title><rect x="1135.5" y="869" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1138.50" y="879.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/DefaultFileSystemAbstraction.deleteFile (1 samples, 0.04%)</title><rect x="1109.3" y="661" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1112.28" y="671.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (1 samples, 0.04%)</title><rect x="17.7" y="437" width="0.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="20.71" y="447.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.monitor (20 samples, 0.87%)</title><rect x="1110.8" y="933" width="10.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1113.82" y="943.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (168 samples, 7.32%)</title><rect x="501.5" y="789" width="86.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="504.54" y="799.5" >io/netty/b..</text>
</g>
<g >
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (5 samples, 0.22%)</title><rect x="1138.1" y="981" width="2.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1141.07" y="991.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (11 samples, 0.48%)</title><rect x="1183.8" y="965" width="5.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1186.83" y="975.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.toArray (1 samples, 0.04%)</title><rect x="1108.2" y="869" width="0.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1111.25" y="879.5" ></text>
</g>
<g >
<title>Node::is_top() const (1 samples, 0.04%)</title><rect x="1167.4" y="421" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1170.38" y="431.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter.report (1 samples, 0.04%)</title><rect x="1121.1" y="965" width="0.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1124.10" y="975.5" ></text>
</g>
<g >
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (8 samples, 0.35%)</title><rect x="1134.0" y="949" width="4.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1136.96" y="959.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (11 samples, 0.48%)</title><rect x="1171.5" y="917" width="5.6" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="1174.49" y="927.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/IdGenerator$Delegate.checkpoint (3 samples, 0.13%)</title><rect x="18.2" y="437" width="1.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="21.23" y="447.5" ></text>
</g>
<g >
<title>oopDesc* BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.04%)</title><rect x="146.8" y="581" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="149.77" y="591.5" ></text>
</g>
<g >
<title>InstanceKlass::compute_enclosing_class(bool*, Thread*) const (1 samples, 0.04%)</title><rect x="1133.4" y="85" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1136.44" y="95.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.31%)</title><rect x="1117.5" y="821" width="3.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1120.50" y="831.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.processSelectedKey (1 samples, 0.04%)</title><rect x="12.1" y="965" width="0.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="15.06" y="975.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1173.0" y="645" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1176.03" y="655.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="1118.0" y="693" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1121.02" y="703.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/RecordingDescriptor$RecordingDescriptorKeySerializer.serialize (1 samples, 0.04%)</title><rect x="1133.4" y="677" width="0.6" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1136.44" y="687.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.ioBuffer (1 samples, 0.04%)</title><rect x="12.1" y="917" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="15.06" y="927.5" ></text>
</g>
<g >
<title>org/abcde/monitoring/VmPauseMonitor.run (20 samples, 0.87%)</title><rect x="1110.8" y="949" width="10.3" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1113.82" y="959.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_dtrace_sampler() (1 samples, 0.04%)</title><rect x="105.1" y="517" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="108.12" y="527.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.normalizeCapacity (25 samples, 1.09%)</title><rect x="518.0" y="773" width="12.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="520.99" y="783.5" ></text>
</g>
<g >
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.04%)</title><rect x="10.0" y="1093" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>Java_sun_nio_ch_FileDispatcherImpl_force0 (1 samples, 0.04%)</title><rect x="17.7" y="325" width="0.5" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="20.71" y="335.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (10 samples, 0.44%)</title><rect x="1085.6" y="741" width="5.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1088.63" y="751.5" ></text>
</g>
<g >
<title>Compilation::compile_java_method() (11 samples, 0.48%)</title><rect x="1171.5" y="901" width="5.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1174.49" y="911.5" ></text>
</g>
<g >
<title>CmpPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1168.9" y="789" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1171.92" y="799.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.cacheForNormal (33 samples, 1.44%)</title><rect x="970.5" y="757" width="16.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="973.45" y="767.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsField (1 samples, 0.04%)</title><rect x="1133.4" y="549" width="0.6" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1136.44" y="559.5" ></text>
</g>
<g >
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.04%)</title><rect x="1166.3" y="805" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1169.35" y="815.5" ></text>
</g>
<g >
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.04%)</title><rect x="227.5" y="581" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="230.49" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.resetRefCnt (12 samples, 0.52%)</title><rect x="272.7" y="741" width="6.2" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="275.74" y="751.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1117.0" y="837" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1119.99" y="847.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1166.9" y="581" width="0.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1169.86" y="591.5" ></text>
</g>
<g >
<title>CodeBlob::is_compiled() const (1 samples, 0.04%)</title><rect x="55.2" y="629" width="0.6" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="58.25" y="639.5" ></text>
</g>
<g >
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (2 samples, 0.09%)</title><rect x="213.1" y="613" width="1.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="216.09" y="623.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="757" width="0.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="17.11" y="767.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1108.2" y="821" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1111.25" y="831.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (6 samples, 0.26%)</title><rect x="51.6" y="645" width="3.1" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="54.65" y="655.5" ></text>
</g>
<g >
<title>LinearScan::assign_reg_num() (1 samples, 0.04%)</title><rect x="1175.6" y="853" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1178.60" y="863.5" ></text>
</g>
<g >
<title>InstanceKlass::klass_holder() const (1 samples, 0.04%)</title><rect x="1131.4" y="853" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1134.39" y="863.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (1 samples, 0.04%)</title><rect x="11.5" y="1013" width="0.6" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="14.54" y="1023.5" ></text>
</g>
<g >
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.04%)</title><rect x="1176.6" y="805" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1179.63" y="815.5" ></text>
</g>
<g >
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.04%)</title><rect x="1166.9" y="533" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1169.86" y="543.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1161.2" y="789" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1164.21" y="799.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.31%)</title><rect x="1117.5" y="853" width="3.6" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="1120.50" y="863.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.lstat0 (1 samples, 0.04%)</title><rect x="1121.6" y="869" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1124.62" y="879.5" ></text>
</g>
<g >
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.run (6 samples, 0.26%)</title><rect x="1121.1" y="1045" width="3.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1124.10" y="1055.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (8 samples, 0.35%)</title><rect x="1134.0" y="965" width="4.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1136.96" y="975.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils.deleteFile (1 samples, 0.04%)</title><rect x="1109.3" y="645" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1112.28" y="655.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.log2 (12 samples, 0.52%)</title><rect x="981.3" y="741" width="6.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="984.25" y="751.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.22%)</title><rect x="1124.7" y="1045" width="2.6" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1127.70" y="1055.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.04%)</title><rect x="1109.8" y="885" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1112.79" y="895.5" ></text>
</g>
<g >
<title>SafepointMechanism::local_poll_armed(JavaThread*) (5 samples, 0.22%)</title><rect x="227.0" y="629" width="2.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="229.98" y="639.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_types() (1 samples, 0.04%)</title><rect x="1146.3" y="853" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1149.30" y="863.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.decrementRecursionDepth (1 samples, 0.04%)</title><rect x="1121.1" y="837" width="0.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1124.10" y="847.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (3 samples, 0.13%)</title><rect x="1124.7" y="981" width="1.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1127.70" y="991.5" ></text>
</g>
<g >
<title>com/abcde/bench/jmh/api/profile/AbstractMicroProfiler.afterIteration (2 samples, 0.09%)</title><rect x="1132.9" y="965" width="1.1" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1135.93" y="975.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="661" width="0.6" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1161.64" y="671.5" ></text>
</g>
<g >
<title>_pthread_body (109 samples, 4.75%)</title><rect x="1134.0" y="1061" width="56.0" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1136.96" y="1071.5" >_pthr..</text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (2,107 samples, 91.81%)</title><rect x="12.6" y="933" width="1083.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="15.57" y="943.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g >
<title>GangWorker::loop() (11 samples, 0.48%)</title><rect x="1140.6" y="1013" width="5.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1143.64" y="1023.5" ></text>
</g>
<g >
<title>com/abcde/bench/model/util/JsonUtil.serializeJson (2 samples, 0.09%)</title><rect x="1132.9" y="901" width="1.1" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1135.93" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.nonVolatileRawCnt (1 samples, 0.04%)</title><rect x="1016.7" y="821" width="0.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1019.73" y="831.5" ></text>
</g>
<g >
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1120.6" y="629" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1123.59" y="639.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.04%)</title><rect x="14.6" y="293" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="17.63" y="303.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="206.9" y="581" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="209.92" y="591.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache.allocate (91 samples, 3.97%)</title><rect x="530.8" y="757" width="46.8" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="533.85" y="767.5" >io/n..</text>
</g>
<g >
<title>ciTypeFlow::Block::Block(ciTypeFlow*, ciBlock*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1166.3" y="725" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1169.35" y="735.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1129.3" y="869" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1132.33" y="879.5" ></text>
</g>
<g >
<title>org/abcde/kernel/extension/AbstractExtensions.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="789" width="0.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="17.11" y="799.5" ></text>
</g>
<g >
<title>__psynch_cvwait (5 samples, 0.22%)</title><rect x="1138.1" y="917" width="2.5" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="1141.07" y="927.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.doClose (3 samples, 0.13%)</title><rect x="15.7" y="309" width="1.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="18.66" y="319.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="869" width="0.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="14.54" y="879.5" ></text>
</g>
<g >
<title>com/codahale/metrics/ScheduledReporter$$Lambda$986/538885935.run (1 samples, 0.04%)</title><rect x="1121.1" y="997" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1124.10" y="1007.5" ></text>
</g>
<g >
<title>io/netty/handler/codec/ByteToMessageDecoder.channelInputClosed (1 samples, 0.04%)</title><rect x="11.5" y="821" width="0.6" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="14.54" y="831.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1118.5" y="565" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1121.53" y="575.5" ></text>
</g>
<g >
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelInactive (1 samples, 0.04%)</title><rect x="11.5" y="933" width="0.6" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="14.54" y="943.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,169 samples, 94.51%)</title><rect x="12.1" y="1061" width="1115.2" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="15.06" y="1071.5" >java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="1179.2" y="917" width="0.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1182.20" y="927.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (11 samples, 0.48%)</title><rect x="1183.8" y="981" width="5.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1186.83" y="991.5" ></text>
</g>
<g >
<title>CodeCache::find_blob_unsafe(void*) (1 samples, 0.04%)</title><rect x="194.6" y="565" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="197.58" y="575.5" ></text>
</g>
<g >
<title>CompiledMethod::find_pc_desc(unsigned char*, bool) (1 samples, 0.04%)</title><rect x="55.8" y="629" width="0.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="58.76" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/SimpleLeakAwareByteBuf.release (19 samples, 0.83%)</title><rect x="1081.5" y="853" width="9.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1084.51" y="863.5" ></text>
</g>
<g >
<title>java/util/Collections$SetFromMap.add (28 samples, 1.22%)</title><rect x="219.8" y="741" width="14.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="222.78" y="751.5" ></text>
</g>
<g >
<title>Parker::park(bool, long) (19 samples, 0.83%)</title><rect x="1098.0" y="837" width="9.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1100.97" y="847.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ObjectPool$RecyclerObjectPool.get (8 samples, 0.35%)</title><rect x="1085.6" y="709" width="4.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1088.63" y="719.5" ></text>
</g>
<g >
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="1117.5" y="725" width="0.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1120.50" y="735.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._createSerializer2 (1 samples, 0.04%)</title><rect x="1132.9" y="757" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1135.93" y="767.5" ></text>
</g>
<g >
<title>OBJC_CLASS_$_OS_dispatch_object (1 samples, 0.04%)</title><rect x="1110.8" y="709" width="0.5" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="1113.82" y="719.5" ></text>
</g>
<g >
<title>sun/nio/fs/AbstractFileSystemProvider.delete (1 samples, 0.04%)</title><rect x="1109.3" y="565" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1112.28" y="575.5" ></text>
</g>
<g >
<title>java/nio/file/Files.deleteIfExists (2 samples, 0.09%)</title><rect x="13.1" y="677" width="1.0" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="16.08" y="687.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/transaction/log/checkpoint/CheckPointerImpl.doCheckPoint (5 samples, 0.22%)</title><rect x="17.2" y="565" width="2.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="20.20" y="575.5" ></text>
</g>
<g >
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.04%)</title><rect x="14.6" y="485" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="17.63" y="495.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnReadPageCursor.unpinCurrentPage (1 samples, 0.04%)</title><rect x="19.3" y="309" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="22.25" y="319.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/profiling/AsyncProfiler.stopAsync (2 samples, 0.09%)</title><rect x="1132.9" y="933" width="1.1" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1135.93" y="943.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.04%)</title><rect x="1109.3" y="869" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1112.28" y="879.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="1127.3" y="1045" width="1.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1130.27" y="1055.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="10.5" y="997" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="13.51" y="1007.5" ></text>
</g>
<g >
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1168.4" y="757" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1171.41" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1110.8" y="677" width="0.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1113.82" y="687.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="693" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1161.64" y="703.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/store/NeoStores.flush (3 samples, 0.13%)</title><rect x="18.2" y="517" width="1.6" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="21.23" y="527.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/spi/AbstractLogger.logMessageTrackRecursion (1 samples, 0.04%)</title><rect x="1121.1" y="853" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.10" y="863.5" ></text>
</g>
<g >
<title>org/apache/commons/io/file/PathUtils.delete (2 samples, 0.09%)</title><rect x="13.1" y="789" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="16.08" y="799.5" ></text>
</g>
<g >
<title>Compilation::build_hir() (6 samples, 0.26%)</title><rect x="1171.5" y="885" width="3.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1174.49" y="895.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1120.6" y="677" width="0.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1123.59" y="687.5" ></text>
</g>
<g >
<title>java/nio/Buffer.remaining (1 samples, 0.04%)</title><rect x="14.1" y="357" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="17.11" y="367.5" ></text>
</g>
<g >
<title>SafepointMechanism::local_poll_armed(JavaThread*) (4 samples, 0.17%)</title><rect x="52.2" y="613" width="2.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="55.16" y="623.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.profile (2 samples, 0.09%)</title><rect x="1108.8" y="885" width="1.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1111.76" y="895.5" ></text>
</g>
<g >
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::~ScopedFence() (1 samples, 0.04%)</title><rect x="228.0" y="581" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="231.00" y="591.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/indexed/IndexedIdGenerator.close (3 samples, 0.13%)</title><rect x="15.7" y="405" width="1.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="18.66" y="415.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.04%)</title><rect x="1148.9" y="837" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1151.87" y="847.5" ></text>
</g>
<g >
<title>java/lang/Object.clone (1 samples, 0.04%)</title><rect x="17.2" y="485" width="0.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="20.20" y="495.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.22%)</title><rect x="607.5" y="741" width="2.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="610.46" y="751.5" ></text>
</g>
<g >
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (3 samples, 0.13%)</title><rect x="1124.7" y="1013" width="1.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1127.70" y="1023.5" ></text>
</g>
<g >
<title>LinkResolver::lookup_polymorphic_method(LinkInfo const&amp;, Handle*, Handle*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="901" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1129.24" y="911.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="10.5" y="1013" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="13.51" y="1023.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="741" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1161.64" y="751.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.reportLeak (2 samples, 0.09%)</title><rect x="234.2" y="757" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="237.17" y="767.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (4 samples, 0.17%)</title><rect x="1177.1" y="933" width="2.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1180.15" y="943.5" ></text>
</g>
<g >
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1167.9" y="533" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1170.89" y="543.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.04%)</title><rect x="1174.1" y="853" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1177.06" y="863.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/LockSupport.parkNanos (3 samples, 0.13%)</title><rect x="1127.3" y="1061" width="1.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1130.27" y="1071.5" ></text>
</g>
<g >
<title>__psynch_cvwait (3 samples, 0.13%)</title><rect x="1127.3" y="997" width="1.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1130.27" y="1007.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (68 samples, 2.96%)</title><rect x="840.4" y="645" width="34.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="843.37" y="655.5" >ja..</text>
</g>
<g >
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.allocate (89 samples, 3.88%)</title><rect x="530.8" y="741" width="45.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="533.85" y="751.5" >io/n..</text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="109.2" y="517" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="112.23" y="527.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.findFilterId (1 samples, 0.04%)</title><rect x="1132.9" y="709" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1135.93" y="719.5" ></text>
</g>
<g >
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.04%)</title><rect x="91.8" y="565" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="94.75" y="575.5" ></text>
</g>
<g >
<title>MethodLiveness::BasicBlock::compute_gen_kill(ciMethod*) (1 samples, 0.04%)</title><rect x="1172.0" y="741" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1175.00" y="751.5" ></text>
</g>
<g >
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.04%)</title><rect x="1152.5" y="869" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1155.47" y="879.5" ></text>
</g>
<g >
<title>sun/management/MemoryImpl.getMemoryManagers (1 samples, 0.04%)</title><rect x="1119.6" y="677" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1122.56" y="687.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.forEach (1 samples, 0.04%)</title><rect x="14.6" y="581" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="17.63" y="591.5" ></text>
</g>
<g >
<title>java/util/concurrent/LinkedBlockingQueue.poll (1 samples, 0.04%)</title><rect x="1132.4" y="965" width="0.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1135.41" y="975.5" ></text>
</g>
<g >
<title>io/netty/buffer/SimpleLeakAwareByteBuf.closeLeak (6 samples, 0.26%)</title><rect x="1081.5" y="837" width="3.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1084.51" y="847.5" ></text>
</g>
<g >
<title>jdk/internal/misc/Unsafe.setMemory0 (1 samples, 0.04%)</title><rect x="12.1" y="709" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="15.06" y="719.5" ></text>
</g>
<g >
<title>io/netty/util/internal/InternalThreadLocalMap.slowGet (34 samples, 1.48%)</title><rect x="592.5" y="773" width="17.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="595.54" y="783.5" ></text>
</g>
<g >
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.04%)</title><rect x="16.2" y="133" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="19.17" y="143.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.opendir (1 samples, 0.04%)</title><rect x="1122.1" y="933" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1125.13" y="943.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="11.5" y="741" width="0.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="14.54" y="751.5" ></text>
</g>
<g >
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.casNext (2 samples, 0.09%)</title><rect x="1126.2" y="981" width="1.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1129.24" y="991.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (6 samples, 0.26%)</title><rect x="1166.3" y="869" width="3.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1169.35" y="879.5" ></text>
</g>
<g >
<title>CompressedReadStream::read_int() (1 samples, 0.04%)</title><rect x="1129.3" y="805" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1132.33" y="815.5" ></text>
</g>
<g >
<title>MergeMemNode::make(Node*) (1 samples, 0.04%)</title><rect x="1167.4" y="485" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1170.38" y="495.5" ></text>
</g>
<g >
<title>org/abcde/kernel/database/Database.stop (10 samples, 0.44%)</title><rect x="14.6" y="645" width="5.2" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="17.63" y="655.5" ></text>
</g>
<g >
<title>frame::interpreter_frame_method() const (2 samples, 0.09%)</title><rect x="59.9" y="629" width="1.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="62.87" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/WrappedByteBuf.release (13 samples, 0.57%)</title><rect x="1084.6" y="837" width="6.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1087.60" y="847.5" ></text>
</g>
<g >
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.04%)</title><rect x="14.1" y="229" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="17.11" y="239.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="839.9" y="581" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="842.86" y="591.5" ></text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueue.offer (2 samples, 0.09%)</title><rect x="1089.7" y="725" width="1.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1092.74" y="735.5" ></text>
</g>
<g >
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="693" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1111.76" y="703.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer$$Lambda$983/1473595005.accept (1 samples, 0.04%)</title><rect x="1109.3" y="709" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1112.28" y="719.5" ></text>
</g>
<g >
<title>org/abcde/internal/id/BufferingIdGenerator.close (3 samples, 0.13%)</title><rect x="15.7" y="437" width="1.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="18.66" y="447.5" ></text>
</g>
<g >
<title>java/nio/file/Files.readAttributes (1 samples, 0.04%)</title><rect x="1121.6" y="949" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1124.62" y="959.5" ></text>
</g>
<g >
<title>itable stub (1 samples, 0.04%)</title><rect x="1117.0" y="677" width="0.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1119.99" y="687.5" ></text>
</g>
<g >
<title>RegMask::find_first_elem() const (1 samples, 0.04%)</title><rect x="1156.1" y="853" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1159.07" y="863.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.collect (7 samples, 0.31%)</title><rect x="1117.5" y="869" width="3.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1120.50" y="879.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/api/KernelTransactions.activeTransactions (1 samples, 0.04%)</title><rect x="1109.8" y="901" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1112.79" y="911.5" ></text>
</g>
<g >
<title>SafepointMechanism::uses_thread_local_poll() (1 samples, 0.04%)</title><rect x="54.2" y="629" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="57.22" y="639.5" ></text>
</g>
<g >
<title>NativeLookup::dll_load(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="1110.8" y="741" width="0.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1113.82" y="751.5" ></text>
</g>
<g >
<title>io/netty/util/internal/ReferenceCountUpdater.resetRefCnt (12 samples, 0.52%)</title><rect x="272.7" y="725" width="6.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="275.74" y="735.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.04%)</title><rect x="1160.7" y="853" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1163.69" y="863.5" ></text>
</g>
<g >
<title>org/abcde/io/IOUtils.close (1 samples, 0.04%)</title><rect x="14.1" y="613" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="17.11" y="623.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1181.8" y="949" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1184.77" y="959.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="821" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1161.64" y="831.5" ></text>
</g>
<g >
<title>__unlink (1 samples, 0.04%)</title><rect x="1109.3" y="485" width="0.5" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="1112.28" y="495.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPageCache.flushAndCloseWithoutFail (3 samples, 0.13%)</title><rect x="15.7" y="245" width="1.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="18.66" y="255.5" ></text>
</g>
<g >
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (3 samples, 0.13%)</title><rect x="1127.3" y="1029" width="1.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1130.27" y="1039.5" ></text>
</g>
<g >
<title>Dictionary::get_entry(int, unsigned int, Symbol*) (1 samples, 0.04%)</title><rect x="12.6" y="565" width="0.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="15.57" y="575.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.isTiny (2 samples, 0.09%)</title><rect x="529.8" y="757" width="1.0" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="532.82" y="767.5" ></text>
</g>
<g >
<title>CriticalEdgeFinder::block_do(BlockBegin*) (1 samples, 0.04%)</title><rect x="1174.1" y="837" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1177.06" y="847.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (11 samples, 0.48%)</title><rect x="1171.5" y="933" width="5.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1174.49" y="943.5" ></text>
</g>
<g >
<title>AbsSeq::dsd() const (1 samples, 0.04%)</title><rect x="1118.5" y="309" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1121.53" y="319.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (13 samples, 0.57%)</title><rect x="1084.6" y="821" width="6.7" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1087.60" y="831.5" ></text>
</g>
<g >
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (4 samples, 0.17%)</title><rect x="52.2" y="581" width="2.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="55.16" y="591.5" ></text>
</g>
<g >
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.04%)</title><rect x="1147.3" y="901" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1150.32" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.26%)</title><rect x="1161.7" y="901" width="3.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1164.72" y="911.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (336 samples, 14.64%)</title><rect x="47.0" y="741" width="172.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="50.02" y="751.5" >io/netty/util/Resource..</text>
</g>
<g >
<title>org/abcde/kernel/api/exceptions/Status$Database.&lt;init&gt; (1 samples, 0.04%)</title><rect x="14.6" y="517" width="0.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="17.63" y="527.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1120.6" y="693" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1123.59" y="703.5" ></text>
</g>
<g >
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (1 samples, 0.04%)</title><rect x="1176.6" y="837" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1179.63" y="847.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1173.0" y="405" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1176.03" y="415.5" ></text>
</g>
<g >
<title>PhaseChaitin::Simplify() (1 samples, 0.04%)</title><rect x="1153.0" y="885" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1155.98" y="895.5" ></text>
</g>
<g >
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1166.3" y="741" width="0.6" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1169.35" y="751.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1129.8" y="981" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1132.84" y="991.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1129.3" y="917" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1132.33" y="927.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithType (1 samples, 0.04%)</title><rect x="1133.4" y="773" width="0.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1136.44" y="783.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (3 samples, 0.13%)</title><rect x="1166.9" y="725" width="1.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1169.86" y="735.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1173.0" y="565" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1176.03" y="575.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (118 samples, 5.14%)</title><rect x="437.8" y="661" width="60.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="440.78" y="671.5" >java/l..</text>
</g>
<g >
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="1108.2" y="629" width="0.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1111.25" y="639.5" ></text>
</g>
<g >
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.04%)</title><rect x="1118.5" y="373" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1121.53" y="383.5" ></text>
</g>
<g >
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 0.04%)</title><rect x="1146.3" y="613" width="0.5" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1149.30" y="623.5" ></text>
</g>
<g >
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.04%)</title><rect x="1118.0" y="629" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1121.02" y="639.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (13 samples, 0.57%)</title><rect x="1084.6" y="805" width="6.7" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1087.60" y="815.5" ></text>
</g>
<g >
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.04%)</title><rect x="1132.9" y="613" width="0.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1135.93" y="623.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler.get (374 samples, 16.30%)</title><rect x="707.7" y="725" width="192.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="710.72" y="735.5" >io/netty/util/Recycler.get</text>
</g>
<g >
<title>itable stub (1 samples, 0.04%)</title><rect x="1120.6" y="581" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1123.59" y="591.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (6 samples, 0.26%)</title><rect x="1081.5" y="805" width="3.1" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1084.51" y="815.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/LogManager.shutdown (1 samples, 0.04%)</title><rect x="14.1" y="565" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="17.11" y="575.5" ></text>
</g>
<g >
<title>java/nio/file/Files.delete (1 samples, 0.04%)</title><rect x="1109.3" y="581" width="0.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1112.28" y="591.5" ></text>
</g>
<g >
<title>org/abcde/kernel/database/DefaultForceOperation.flushAndForce (4 samples, 0.17%)</title><rect x="17.7" y="549" width="2.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="20.71" y="559.5" ></text>
</g>
<g >
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.04%)</title><rect x="1117.0" y="757" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1119.99" y="767.5" ></text>
</g>
<g >
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1167.9" y="645" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1170.89" y="655.5" ></text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.closeSwapper (3 samples, 0.13%)</title><rect x="15.7" y="229" width="1.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="18.66" y="239.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanPropertyWriter.serializeAsField (1 samples, 0.04%)</title><rect x="1133.4" y="789" width="0.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1136.44" y="799.5" ></text>
</g>
<g >
<title>OopMapStream::find_next() (1 samples, 0.04%)</title><rect x="14.1" y="213" width="0.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="17.11" y="223.5" ></text>
</g>
<g >
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (305 samples, 13.29%)</title><rect x="61.9" y="629" width="156.8" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="64.93" y="639.5" >java_lang_Throwable:..</text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stop (1 samples, 0.04%)</title><rect x="14.1" y="709" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="17.11" y="719.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixFileSystemProvider.newDirectoryStream (1 samples, 0.04%)</title><rect x="1122.1" y="949" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1125.13" y="959.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="517" width="0.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1176.03" y="527.5" ></text>
</g>
<g >
<title>ScopedFenceGeneral&lt;(ScopedFenceType)0&gt;::postfix() (1 samples, 0.04%)</title><rect x="53.2" y="565" width="0.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="56.19" y="575.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="1118.5" y="469" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1121.53" y="479.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1182.3" y="965" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1185.29" y="975.5" ></text>
</g>
<g >
<title>Dict::doubhash() (1 samples, 0.04%)</title><rect x="1165.8" y="869" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1168.83" y="879.5" ></text>
</g>
<g >
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.31%)</title><rect x="1117.5" y="837" width="3.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1120.50" y="847.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="10.5" y="1077" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="13.51" y="1087.5" ></text>
</g>
<g >
<title>CompileWrapper::CompileWrapper(Compile*) (2 samples, 0.09%)</title><rect x="1165.3" y="917" width="1.0" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1168.32" y="927.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1167.4" y="565" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1170.38" y="575.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (4 samples, 0.17%)</title><rect x="1166.9" y="805" width="2.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1169.86" y="815.5" ></text>
</g>
<g >
<title>CodeHeap::find_start(void*) const (6 samples, 0.26%)</title><rect x="203.8" y="549" width="3.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="206.84" y="559.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="14.1" y="261" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="17.11" y="271.5" ></text>
</g>
<g >
<title>java/util/concurrent/ExecutorCompletionService.poll (1 samples, 0.04%)</title><rect x="1132.4" y="981" width="0.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1135.41" y="991.5" ></text>
</g>
<g >
<title>HeapRegion::clear_cardtable() (1 samples, 0.04%)</title><rect x="1140.6" y="981" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1143.64" y="991.5" ></text>
</g>
<g >
<title>io/netty/util/Recycler$Stack.pop (3 samples, 0.13%)</title><rect x="1086.1" y="677" width="1.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1089.14" y="687.5" ></text>
</g>
<g >
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.04%)</title><rect x="1166.3" y="709" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1169.35" y="719.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBuf.discardMarks (12 samples, 0.52%)</title><rect x="266.6" y="741" width="6.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="269.57" y="751.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.createSerializer (1 samples, 0.04%)</title><rect x="1133.4" y="405" width="0.6" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="1136.44" y="415.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.construct (2 samples, 0.09%)</title><rect x="1118.5" y="613" width="1.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1121.53" y="623.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="1077" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.04%)</title><rect x="1083.6" y="741" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1086.57" y="751.5" ></text>
</g>
<g >
<title>os::strdup(char const*, MemoryType) (1 samples, 0.04%)</title><rect x="1171.0" y="869" width="0.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1173.98" y="879.5" ></text>
</g>
<g >
<title>MemAllocator::Allocation::notify_allocation_jfr_sampler() (1 samples, 0.04%)</title><rect x="95.4" y="517" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="98.35" y="527.5" ></text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;573558ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (1 samples, 0.04%)</title><rect x="214.6" y="613" width="0.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="217.64" y="623.5" ></text>
</g>
<g >
<title>RegMask::find_first_elem() const (1 samples, 0.04%)</title><rect x="1152.5" y="853" width="0.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1155.47" y="863.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createAndCacheUntypedSerializer (1 samples, 0.04%)</title><rect x="1133.4" y="437" width="0.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1136.44" y="447.5" ></text>
</g>
<g >
<title>org/abcde/internal/helpers/Format.duration (1 samples, 0.04%)</title><rect x="17.2" y="533" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="20.20" y="543.5" ></text>
</g>
<g >
<title>io/netty/buffer/PoolArena.allocate (686 samples, 29.89%)</title><rect x="235.2" y="805" width="352.7" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="238.20" y="815.5" >io/netty/buffer/PoolArena.allocate</text>
</g>
<g >
<title>frame::entry_frame_is_first() const (1 samples, 0.04%)</title><rect x="163.7" y="613" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="166.73" y="623.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.close (6 samples, 0.26%)</title><rect x="1081.5" y="821" width="3.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1084.51" y="831.5" ></text>
</g>
<g >
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="821" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1129.24" y="831.5" ></text>
</g>
<g >
<title>sun/nio/fs/PollingWatchService$PollingWatchKey$1.run (5 samples, 0.22%)</title><rect x="1121.6" y="997" width="2.6" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1124.62" y="1007.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1118.5" y="501" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1121.53" y="511.5" ></text>
</g>
<g >
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.04%)</title><rect x="1126.8" y="885" width="0.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1129.76" y="895.5" ></text>
</g>
<g >
<title>OopMapStream::find_next() (1 samples, 0.04%)</title><rect x="1141.2" y="901" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1144.15" y="911.5" ></text>
</g>
<g >
<title>__psynch_cvwait (16 samples, 0.70%)</title><rect x="1099.0" y="821" width="8.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1101.99" y="831.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (496 samples, 21.61%)</title><rect x="246.5" y="773" width="255.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="249.51" y="783.5" >io/netty/buffer/PooledUnsafeDirect..</text>
</g>
<g >
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1146.3" y="805" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1149.30" y="815.5" ></text>
</g>
<g >
<title>Dict::Insert(void*, void*, bool) (2 samples, 0.09%)</title><rect x="1165.3" y="885" width="1.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1168.32" y="895.5" ></text>
</g>
<g >
<title>Node::add_out(Node*) (1 samples, 0.04%)</title><rect x="1168.4" y="597" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1171.41" y="607.5" ></text>
</g>
<g >
<title>org/abcde/kernel/api/exceptions/Status$Database.&lt;clinit&gt; (1 samples, 0.04%)</title><rect x="14.6" y="533" width="0.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="17.63" y="543.5" ></text>
</g>
<g >
<title>io/netty/util/ResourceLeakDetector.reportLeak (1 samples, 0.04%)</title><rect x="491.8" y="645" width="0.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="494.77" y="655.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.09%)</title><rect x="1088.7" y="613" width="1.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1091.71" y="623.5" ></text>
</g>
<g >
<title>org/abcde/index/internal/gbptree/GBPTree.checkpoint (3 samples, 0.13%)</title><rect x="18.2" y="389" width="1.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="21.23" y="399.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.26%)</title><rect x="1166.3" y="917" width="3.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1169.35" y="927.5" ></text>
</g>
<g >
<title>ObjArrayKlass::allocate(int, Thread*) (16 samples, 0.70%)</title><rect x="92.3" y="581" width="8.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="95.27" y="591.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="12.6" y="709" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="15.57" y="719.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1155.6" y="853" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1158.55" y="863.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory.lambda$getPlatformMXBeans$3 (7 samples, 0.31%)</title><rect x="1117.5" y="741" width="3.6" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1120.50" y="751.5" ></text>
</g>
<g >
<title>IR::split_critical_edges() (1 samples, 0.04%)</title><rect x="1174.1" y="869" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1177.06" y="879.5" ></text>
</g>
<g >
<title>GrowableArray&lt;float&gt;::grow(int) (1 samples, 0.04%)</title><rect x="1158.6" y="581" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1161.64" y="591.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ScheduledJobHandle.submitIfRunnable (4 samples, 0.17%)</title><rect x="1130.4" y="1029" width="2.0" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="1133.36" y="1039.5" ></text>
</g>
<g >
<title>sun/management/GarbageCollectorImpl.getObjectName (2 samples, 0.09%)</title><rect x="1118.5" y="693" width="1.1" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1121.53" y="703.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/ThreadPool.lambda$submit$0 (49 samples, 2.14%)</title><rect x="1095.9" y="1013" width="25.2" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1098.91" y="1023.5" >o..</text>
</g>
<g >
<title>io/netty/util/internal/shaded/org/jctools/queues/MpscArrayQueueConsumerIndexField.lvConsumerIndex (5 samples, 0.22%)</title><rect x="900.5" y="741" width="2.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="903.53" y="751.5" ></text>
</g>
<g >
<title>java/lang/Enum.ordinal (7 samples, 0.31%)</title><rect x="987.4" y="757" width="3.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="990.42" y="767.5" ></text>
</g>
<g >
<title>java/util/HashMap$ValueSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="1117.0" y="741" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1119.99" y="751.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (3 samples, 0.13%)</title><rect x="1132.4" y="1029" width="1.6" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="1135.41" y="1039.5" ></text>
</g>
<g >
<title>com/abcde/bench/common/results/ForkDirectory.registerPathFor (2 samples, 0.09%)</title><rect x="1132.9" y="917" width="1.1" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1135.93" y="927.5" ></text>
</g>
<g >
<title>JVM_FillInStackTrace (330 samples, 14.38%)</title><rect x="49.1" y="661" width="169.6" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="52.08" y="671.5" >JVM_FillInStackTrace</text>
</g>
<g >
<title>org/abcde/io/pagecache/impl/muninn/MuninnPagedFile.flushAndForceInternal (2 samples, 0.09%)</title><rect x="18.2" y="325" width="1.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="21.23" y="335.5" ></text>
</g>
<g >
<title>all (2,295 samples, 100%)</title><rect x="10.0" y="1109" width="1180.0" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>io/netty/buffer/PooledByteBuf.recycle (41 samples, 1.79%)</title><rect x="991.0" y="805" width="21.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="994.02" y="815.5" ></text>
</g>
<g >
<title>GenerateOopMap::replace_all_CTS_matches(CellTypeState, CellTypeState) (1 samples, 0.04%)</title><rect x="1173.5" y="757" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1176.55" y="767.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.09%)</title><rect x="1172.5" y="805" width="1.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1175.52" y="815.5" ></text>
</g>
<g >
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="60.9" y="629" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="63.90" y="639.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.13%)</title><rect x="108.7" y="533" width="1.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="111.72" y="543.5" ></text>
</g>
<g >
<title>java/lang/management/ManagementFactory$PlatformMBeanFinder.lambda$findFirst$4 (1 samples, 0.04%)</title><rect x="1117.0" y="693" width="0.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1119.99" y="703.5" ></text>
</g>
<g >
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.04%)</title><rect x="1119.0" y="597" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1122.05" y="607.5" ></text>
</g>
<g >
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="1189.5" y="997" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1192.49" y="1007.5" ></text>
</g>
<g >
<title>__psynch_cvwait (3 samples, 0.13%)</title><rect x="1177.7" y="901" width="1.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1180.66" y="911.5" ></text>
</g>
<g >
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1182.3" y="949" width="0.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1185.29" y="959.5" ></text>
</g>
<g >
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.04%)</title><rect x="1109.3" y="837" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1112.28" y="847.5" ></text>
</g>
<g >
<title>io/netty/util/concurrent/FastThreadLocal.get (4 samples, 0.17%)</title><rect x="1087.7" y="677" width="2.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1090.68" y="687.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_handle_call(CallInfo&amp;, LinkInfo const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="1126.2" y="917" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1129.24" y="927.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="837" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1161.64" y="847.5" ></text>
</g>
<g >
<title>ciTypeFlow::do_flow() (1 samples, 0.04%)</title><rect x="1146.3" y="869" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1149.30" y="879.5" ></text>
</g>
<g >
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.04%)</title><rect x="11.5" y="565" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="14.54" y="575.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.04%)</title><rect x="12.6" y="725" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="15.57" y="735.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.17%)</title><rect x="1171.5" y="837" width="2.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1174.49" y="847.5" ></text>
</g>
<g >
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1158.6" y="789" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1161.64" y="799.5" ></text>
</g>
<g >
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="1181.3" y="949" width="0.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1184.26" y="959.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.04%)</title><rect x="1148.4" y="773" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1151.35" y="783.5" ></text>
</g>
<g >
<title>PhaseIFG::SquareUp() (1 samples, 0.04%)</title><rect x="1157.6" y="885" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1160.61" y="895.5" ></text>
</g>
<g >
<title>RegMask::is_bound(unsigned int) const (1 samples, 0.04%)</title><rect x="1149.9" y="853" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1152.90" y="863.5" ></text>
</g>
<g >
<title>io/netty/channel/nio/NioEventLoop.run (1 samples, 0.04%)</title><rect x="12.1" y="1013" width="0.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="15.06" y="1023.5" ></text>
</g>
<g >
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1179.7" y="965" width="0.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1182.72" y="975.5" ></text>
</g>
<g >
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.04%)</title><rect x="16.2" y="149" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="19.17" y="159.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="1110.8" y="869" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1113.82" y="879.5" ></text>
</g>
<g >
<title>com/fasterxml/jackson/databind/SerializerProvider._createAndCacheUntypedSerializer (1 samples, 0.04%)</title><rect x="1132.9" y="805" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1135.93" y="815.5" ></text>
</g>
<g >
<title>ValueStack::copy(ValueStack::Kind, int) (1 samples, 0.04%)</title><rect x="1172.5" y="757" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1175.52" y="767.5" ></text>
</g>
<g >
<title>org/apache/logging/log4j/core/LoggerContext.stop (1 samples, 0.04%)</title><rect x="14.1" y="517" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="17.11" y="527.5" ></text>
</g>
<g >
<title>org/abcde/io/fs/FileUtils$$Lambda$1175/959822234.perform (1 samples, 0.04%)</title><rect x="1109.3" y="613" width="0.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1112.28" y="623.5" ></text>
</g>
<g >
<title>PreserveExceptionMark::~PreserveExceptionMark() (1 samples, 0.04%)</title><rect x="50.6" y="645" width="0.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="53.62" y="655.5" ></text>
</g>
<g >
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.04%)</title><rect x="1146.3" y="901" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1149.30" y="911.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.04%)</title><rect x="1146.3" y="709" width="0.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1149.30" y="719.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1173.0" y="533" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1176.03" y="543.5" ></text>
</g>
<g >
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.04%)</title><rect x="12.1" y="901" width="0.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="15.06" y="911.5" ></text>
</g>
<g >
<title>com/abcde/kernel/impl/pagecache/PageCacheWarmer.lambda$extractRelevantProfiles$7 (1 samples, 0.04%)</title><rect x="1108.2" y="581" width="0.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="1111.25" y="591.5" ></text>
</g>
<g >
<title>JVM_Sleep (11 samples, 0.48%)</title><rect x="1111.3" y="869" width="5.7" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1114.33" y="879.5" ></text>
</g>
<g >
<title>sun/nio/fs/UnixNativeDispatcher.opendir0 (1 samples, 0.04%)</title><rect x="1122.1" y="917" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1125.13" y="927.5" ></text>
</g>
<g >
<title>void ModRefBarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;::oop_store_in_heap&lt;unsigned int&gt;(unsigned int*, oopDesc*) (2 samples, 0.09%)</title><rect x="115.9" y="581" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="118.92" y="591.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport$LifecycleInstance.shutdown (9 samples, 0.39%)</title><rect x="15.1" y="613" width="4.7" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="18.14" y="623.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (77 samples, 3.36%)</title><rect x="167.8" y="613" width="39.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="170.85" y="623.5" >fra..</text>
</g>
<g >
<title>__psynch_cvwait (1 samples, 0.04%)</title><rect x="10.5" y="981" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="13.51" y="991.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (2,107 samples, 91.81%)</title><rect x="12.6" y="917" width="1083.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="15.57" y="927.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g >
<title>java/lang/management/ManagementFactory.getPlatformMXBeans (8 samples, 0.35%)</title><rect x="1117.0" y="885" width="4.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1119.99" y="895.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (109 samples, 4.75%)</title><rect x="1134.0" y="1045" width="56.0" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1136.96" y="1055.5" >threa..</text>
</g>
<g >
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.04%)</title><rect x="1108.8" y="741" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1111.76" y="751.5" ></text>
</g>
<g >
<title>org/abcde/kernel/lifecycle/LifeSupport.stop (10 samples, 0.44%)</title><rect x="14.6" y="805" width="5.2" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="17.63" y="815.5" ></text>
</g>
<g >
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.04%)</title><rect x="1109.8" y="837" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1112.79" y="847.5" ></text>
</g>
<g >
<title>__getdirentries64 (3 samples, 0.13%)</title><rect x="1122.6" y="885" width="1.6" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1125.64" y="895.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (11 samples, 0.48%)</title><rect x="201.3" y="581" width="5.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="204.27" y="591.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1118.5" y="581" width="0.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1121.53" y="591.5" ></text>
</g>
<g >
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="1128.8" y="965" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1131.81" y="975.5" ></text>
</g>
<g >
<title>sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1133.4" y="133" width="0.6" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1136.44" y="143.5" ></text>
</g>
<g >
<title>org/abcde/dbms/database/AbstractDatabaseManager.stopDatabase (10 samples, 0.44%)</title><rect x="14.6" y="661" width="5.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="17.63" y="671.5" ></text>
</g>
<g >
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1141.2" y="965" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1144.15" y="975.5" ></text>
</g>
<g >
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="1108.2" y="789" width="0.6" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1111.25" y="799.5" ></text>
</g>
<g >
<title>org/abcde/kernel/impl/scheduler/TimeBasedTaskScheduler.scheduleDueTasks (7 samples, 0.31%)</title><rect x="1128.8" y="1045" width="3.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1131.81" y="1055.5" ></text>
</g>
<g >
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="98.4" y="533" width="0.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="101.44" y="543.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (4 samples, 0.17%)</title><rect x="1166.9" y="789" width="2.0" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1169.86" y="799.5" ></text>
</g>
<g >
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.04%)</title><rect x="1172.5" y="741" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1175.52" y="751.5" ></text>
</g>
</g>
</svg>
